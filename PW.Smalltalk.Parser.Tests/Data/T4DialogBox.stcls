
DialogBox subclass: #T4DialogBox
  instanceVariableNames: 
    ' dataObject customHelpContext unnamedControls handlers controlClassOverrides topicMap debugTopicMap framingBlock toolTip readOnly icon initializing scrollPosition templateExtent '
  classVariableNames: 
    ' ItemIDsByDLL NewDialog Notifications '
  poolDictionaries: 
    ' CharacterConstants OperatingSystemConstants WinCommonControlConstants '  !

T4DialogBox class instanceVariableNames: ' tabIcon surveyQuestionMap ' !


!T4DialogBox class methods !
 
adminDLLName
"
	Category Name: Window Creation
	Description: Answers the name of the Policy Works Administrator DLL.
	Result Type: String
"
	^'PwAdmin'.!
 
assertNoDuplicateValues: aDictionary fileName: aString
"
	Access: Private
	Category Name: Item IDs:Development
	Description: Visual Studio sometimes generates items with duplicate IDs.
				 We want to find out about these when we parse the header file,
				 not when our dialogs stop working, so check for duplicates
				 and raise an error if we find any.
"
	| usedIDs |
	
	usedIDs := OrderedCollection new.
	
	aDictionary  keysAndValuesDo: [:key :value |
		(usedIDs includes: value) ifTrue: [
			self error: 'Duplicate ID ', value printString, ' in header file.  Edit ', aString, ' by hand to resolve the problem'.
		].
		usedIDs add: value.
	].!
  
bitmapAt: anObject
"
    Category Name: Bitmaps
    Description: Answers the Bitmap identified by anObject,
                 which contains either the symbolic name
                 (String) or the item ID (Integer) of the
                 bitmap resource.
    ResultType: Bitmap
"
    | id |
    
    id := self idFrom: anObject ifAbsent: [self error: 'Cannot find bitmap ', anObject printString].
    
    ^Bitmap fromModule: self dllPathName id: id!
   
bitmapAt: anObject transparentColor: aColor
"
	Category Name: Bitmaps
	Description: Answers the transparent Bitmap identified
				 by anObject, which contains either the
				 symbolic name (String) or the item ID
				 (Integer) of the bitmap resource.
	ResultType: Bitmap
"
	^self
		bitmapAt: anObject
		transparentColor: aColor
		backgroundColor: Color dialogBackground.
!
  
bitmapAt: anObject transparentColor: aColor backgroundColor: aColor2
"
    Category Name: Bitmaps
    Description: Answers the transparent Bitmap identified
                 by anObject, which contains either the
                 symbolic name (String) or the item ID
                 (Integer) of the bitmap resource.
    ResultType: Bitmap
"
    | id |
    
    id := self idFrom: anObject ifAbsent: [self error: 'Cannot find bitmap ', anObject printString].
    
    ^Bitmap fromModule: self dllPathName id: id transparentColor: aColor backgroundColor: aColor2!
   
checkResourceFile: aString dllName: aString2
"
    Category Name: Item IDs:Development 
"
    | path contents |

    path := aString asFileSystemPath parentPath, (aString2,'.RC').
    contents := path asFile contents.
    
     "Visual Studio truncates this setting periodically which causes VS to not use the symbols in the resources.h file"
    "To fix change line #undef APSTUDIO_HIDDEN_SYMBOL to #undef APSTUDIO_HIDDEN_SYMBOLS (add a 'S')"
    ((contents contains: '#define APSTUDIO_HIDDEN_SYMBOLS') and: [(contents contains: '#undef APSTUDIO_HIDDEN_SYMBOLS') not ]) ifTrue: [
        self error: path asString printString, ' has corrupted symbol setting!!'.    
    ].!
 
clearAllImages
"
	Category Name: Images:Development
"
	self allSubclasses do: [:each |
		each clearTabIcon.
	].
!

clearAllItemIDs
"
	Category Name: Item IDs:Development
	Description: Clears the ItemIDsByDLL list.
"
	ItemIDsByDLL := nil.!

clearAllSurveyQuestionMaps
"
    Category Name: Survey
"
    self allSubclasses do: [:each | each clearSurveyQuestionMap].!
 
clearSurveyQuestionMap
"
    Category Name: Survey
"
    surveyQuestionMap := nil    !
  
clearTabIcon
"
	Category Name: Images:Development
"
	tabIcon notNil ifTrue: [
		tabIcon release.
		tabIcon := nil.
	].!
  
commandFont
"
    Access: Private
    Category Name: Window Creation
    Result Type: Font
"
    ^(Font face: 'Helv' size: 10 @ 20 fixedWidth: false attributes: 0) bold: true; yourself!
 
COMMENT
"
	Abstract: Yes
	Copyright: © 2016 Policy Works Inc.
	DateTimeCreated: 1994-10-14 10:11:06
	DateTimeModified: 2016-09-24 12:24:38
	Description: Abstract superclass for dialog boxes loaded from resource-only DLLs.
	LastModifiedBy: ivar
	Owner: john
"
!
  
commonDLLName
"
	Category Name: Window Creation
	Description: Answers the name of the common DLL.
	Result Type: String
"
	^'Common'.!
 
constructEventsTriggered
"
    Access: Private
    Category Name: Events
    Description: Answer the set of events that instances
                 of the receiver can trigger.
    Result Type: Collection
"
    ^super constructEventsTriggered
        add: #initDialog;
        add: #modified;
        add: #postInitialize;

        "Nonmodal child"
        add: #needsParent;
        add: #needsContents;
        add: #needsDefaultsTemplate;

        yourself.!
  
constructNotifications
"
	Access: Private
	Category Name: Property Sheet
	Description: Create a Dictionary mapping between
				 property-sheet notification codes and the
				 corresponding Smalltalk methods that process them.
	Result Type: Dictionary
"
	^Dictionary new
		at: PsnApply put: #psnApply;
		at: PsnQuerycancel put: #psnQuerycancel;
		at: PsnSetactive put: #psnSetactive;
		at: PsnKillactive put: #psnKillactive;
		at: PsnHelp put: #psnHelp;
		at: PsnWizback put: #psnWizback;
		at: PsnWiznext put: #psnWiznext;
		at: PsnWizfinish put: #psnWizfinish;
		at: PsnReset put: #psnReset;
		yourself.
!
  
createInitItemIDsMethodWithSelector: aString forIDs: aDictionary
"
	Access: Private
	Category Name: Item IDs:Development
	Result Type: Dictionary
"
	| selector stream |
	
	selector := aString asSymbol.		
	stream := WriteStream on: String new.
	
	stream
			nextPutAll: selector;
			nextPutAll: ' aDictionary';
			cr;
			nextPutAll: self methodHeaderForInitItemIDs;
			cr;
			tab;
			nextPutAll: 'aDictionary'.
	
	aDictionary keys asSortedCollection do: [:key |
		| value |
		
		value := aDictionary at: key.
		stream
			cr;
			tab;
			tab;
			nextPutAll: 'at: ';
			print: key;
			nextPutAll: ' put: ';
			nextPutAll: value;
			nextPutAll: ';';
			cr;
			tab;
			tab;
			nextPutAll: 'at: ';
			nextPutAll: value;
			nextPutAll: ' put: #';
			nextPutAll: key;
			nextPutAll: ';'.
	].
	
	stream
		cr;
		tab;
		tab;
		nextPutAll: 'yourself.'.
	
	(self class compile: stream contents) isNil 
		ifTrue: [^self error: 'Cannot compile method ', selector].
		
	SourceManager current
		logSource: stream contents
		forSelector: selector
		inClass: self class.
	!

designerDLLName
"
    Category Name: Window Creation
    Description: Answers the name of the designer DLL.
    Result Type: String
"
    ^'PwDesign'.
!
 
dllDirectoryPath
"
	Access: Private
	Abstract: Yes
	Category Name: Window Creation
	Description: Answers the path of the directory containing the dialog's DLL.
	Result Type: FileSystemPath
"
	^nil.
!

dllName
"
	Abstract: Yes
	Category Name: Window Creation
	Description: Answers the name of the dialog's DLL.
	Result Type: String
"
	^self implementedBySubclass.!
   
dllPathName
"
	Category Name: Window Creation
	Description: Answers the path name of the dialog's DLL.
	Result Type: String
"
	| fileName |

	fileName := File
		fileName: self dllName
		extension: 'dll'.
	^self dllDirectoryPath
		ifNotNil: [:path | (path, fileName) asString]
		ifNil: [fileName].
!

getIconAt: anObject type: aSymbol ifAbsent: aBlock
"
    Access: Private
    Category Name: Icons
    Description: Answers the Icon identified by anObject,
                 which contains either the symbolic name (String) or
                 the item ID (Integer) of the icon resource.
    Result Type: T4Icon
"
    ^T4Icon
        fromResourcePathName: self dllPathName 
        id: (self idFrom: anObject ifAbsent: [^aBlock value])
        type: aSymbol
!
  
getTabIcon
"
	Access: Private
	Abstract: Yes
	Category Name: Property Sheet
	Result Type: T4Icon_orNil
"
	^nil.

!
 
iconAt: anObject
"
	Category Name: Icons
	Result Type: Icon
"
	^self
		iconAt: anObject
		ifAbsent: [self error: 'Cannot find large icon ', anObject printString].
!

iconAt: anObject ifAbsent: aBlock
"
    Category Name: Icons
    Description: Answers the Icon identified by anObject,
                 which contains either the symbolic name (String) or
                 the item ID (Integer) of the icon resource.
    Result Type: Icon
"
    ^(self getIconAt: anObject type: #large ifAbsent: [^aBlock value]) ifNil: aBlock.
!
   
iconIndex
"
    Category Name: Icons
    Description: Answer a Mapping of item icon labels
    Result Type: OrderedCollection
"
    ^((self itemIds associations select: [:e | e key asString beginsWith: 'IDI_']) asSortedCollection: [:a :b | a value <= b value]) asOrderedCollection collect: [:each | each key].!

identifiersFromDotHFile: aFilename
"
	Access: Private
	Category Name: Item IDs:Development
	Description: Answers a Dictionary of resource identifiers
				 taken from the C header file aFilename.
	Result Type: Dictionary
"
	| file anArray aDictionary index token key value |

	file := File pathNameReadOnly: aFilename.
	[anArray := file contents asArrayOfSubstrings] ensure: [file close].

	aDictionary := Dictionary new.
	
	"Add common identifiers"
	aDictionary
		at: 'OK' put: '1';
		at: 'Cancel' put: '2'.
		
	index := 1.
	[index < anArray size] whileTrue: [
		token := anArray at: index.
		index := index + 1.

		"MSVC puts some additional stuff at the end; we don't want
		 to process this stuff."
		token = '#ifdef' ifTrue: [^aDictionary].

		token = '#define' ifTrue: [
			key := anArray at: index.
			value := anArray at: index + 1.
			index := index + 2.
			(value detect: [:c | c isDigit not] ifNone: [nil]) isNil ifTrue: [
				aDictionary at: key put: value ]
		]
	].
	^aDictionary.
!

idFrom: anObject ifAbsent: aBlock
"
    Category Name: Item IDs
    Result Type: Integer
"
    anObject isInteger ifTrue: [
        (self itemIds includesKey: anObject) ifFalse: [
            ^aBlock value
        ].
        ^anObject.
    ] ifFalse: [
        ^self itemIds
            at: (self resolveUILanguageItemID: anObject)
            ifAbsent: [^aBlock value].
    ].
!
  
ignoreNotification: anInteger during: aBlock
"
	Category Name: Property Sheet
"
	| savedSelector |

	savedSelector := self notifications at: anInteger.
	self notifications
		at: anInteger
		put: #psnIgnoreNotification.
	[aBlock value] ensure: [
		self notifications
			at: anInteger
			put: savedSelector.
	].

!

imagesDLLName
"
    Category Name: Window Creation
    Description: Answers the name of the designer DLL.
    Result Type: String
"
    ^'PwImages'.
!
   
initializeNotifications
"
	Access: Private
	Category Name: Property Sheet
	Description: Initialize the mapping between host
				 dialog notification codes and corresponding
				 Smalltalk event notifications.
"
	self notifications: self constructNotifications.!
   
initItemIDs
"
	Access: Private
	Category Name: Item IDs
	Description: Initializes the Dictionary of item IDs
				 for the receiving class's DLL and answers
				 the Dictionary. The method used to initialize the
				 receiver's list is generated automatically by
				 T4DialogBox>>#parseDotHFile:dllName:, and is given a
				 selector of the form #initItemIds<dllName>.
	Result Type: Dictionary
"
	| selector |

	selector := ('initItemIDs', self dllName) asSymbol.
	^self perform: selector.
!
 
initItemIDsCommon
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	| dllDict |

	dllDict := self itemIDsByDLL at: 'Common' ifAbsent: [nil].
	dllDict ifNotNil: [^dllDict].

	dllDict := Dictionary new.
	self itemIDsByDLL at: 'Common' put: dllDict.
	self
		initItemIDsCommon1: dllDict;
		initItemIDsCommon2: dllDict;
		initItemIDsCommon3: dllDict;
		yourself.
	^dllDict!

initItemIDsCommon1: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'Add' put: 102;
		at: 102 put: #Add;
		at: 'AlignmentCombo' put: 1003;
		at: 1003 put: #AlignmentCombo;
		at: 'AlignmentStatic' put: 1019;
		at: 1019 put: #AlignmentStatic;
		at: 'Cancel' put: 2;
		at: 2 put: #Cancel;
		at: 'Clear' put: 1008;
		at: 1008 put: #Clear;
		at: 'ClearAll' put: 1013;
		at: 1013 put: #ClearAll;
		at: 'DefaultTabStopEdit' put: 1012;
		at: 1012 put: #DefaultTabStopEdit;
		at: 'DefaultTabStopStatic' put: 6202;
		at: 6202 put: #DefaultTabStopStatic;
		at: 'Edit' put: 105;
		at: 105 put: #Edit;
		at: 'FirstLineEdit' put: 1002;
		at: 1002 put: #FirstLineEdit;
		at: 'FirstLineStatic' put: 1017;
		at: 1017 put: #FirstLineStatic;
		at: 'IDB_Checkmark' put: 919;
		at: 919 put: #IDB_Checkmark;
		at: 'IDB_Close' put: 6215;
		at: 6215 put: #IDB_Close;
		at: 'IDB_Lock' put: 3571;
		at: 3571 put: #IDB_Lock;
		at: 'IDB_LVChecked' put: 908;
		at: 908 put: #IDB_LVChecked;
		at: 'IDB_LVCleared' put: 907;
		at: 907 put: #IDB_LVCleared;
		at: 'IDB_LVUncheckable' put: 909;
		at: 909 put: #IDB_LVUncheckable;
		at: 'IDB_PolicyWorks' put: 989;
		at: 989 put: #IDB_PolicyWorks;
		at: 'IDB_PolicyWorksFrench' put: 2558;
		at: 2558 put: #IDB_PolicyWorksFrench;
		at: 'IDB_PopupMenu' put: 3572;
		at: 3572 put: #IDB_PopupMenu;
		at: 'IDB_PwVersion' put: 1101;
		at: 1101 put: #IDB_PwVersion;
		at: 'IDB_Refresh' put: 883;
		at: 883 put: #IDB_Refresh;
		at: 'IDB_SendMail' put: 104;
		at: 104 put: #IDB_SendMail;
		at: 'IDB_Settings' put: 6210;
		at: 6210 put: #IDB_Settings;
		at: 'IDB_Size' put: 3574;
		at: 3574 put: #IDB_Size;
		at: 'IDC_AccountNoEdit' put: 5088;
		at: 5088 put: #IDC_AccountNoEdit;
		at: 'IDC_Add' put: 1048;
		at: 1048 put: #IDC_Add;
		at: 'IDC_AddButton' put: 2133;
		at: 2133 put: #IDC_AddButton;
		at: 'IDC_Advanced' put: 2487;
		at: 2487 put: #IDC_Advanced;
		at: 'IDC_AdvancedBrokerage' put: 5075;
		at: 5075 put: #IDC_AdvancedBrokerage;
		at: 'IDC_AdvancedCompletionDate' put: 5127;
		at: 5127 put: #IDC_AdvancedCompletionDate;
		at: 'IDC_AdvancedCreated' put: 5105;
		at: 5105 put: #IDC_AdvancedCreated;
		at: 'IDC_AdvancedEffectiveDate' put: 5081;
		at: 5081 put: #IDC_AdvancedEffectiveDate;
		at: 'IDC_AdvancedEndDate' put: 5126;
		at: 5126 put: #IDC_AdvancedEndDate;
		at: 'IDC_AdvancedInsured' put: 5079;
		at: 5079 put: #IDC_AdvancedInsured;
		at: 'IDC_AdvancedInsurer' put: 5074;
		at: 5074 put: #IDC_AdvancedInsurer;
		at: 'IDC_AdvancedModified' put: 5101;
		at: 5101 put: #IDC_AdvancedModified;
		at: 'IDC_AdvancedStartDate' put: 5078;
		at: 5078 put: #IDC_AdvancedStartDate;
		at: 'IDC_AdvancedSubscriber' put: 5082;
		at: 5082 put: #IDC_AdvancedSubscriber;
		at: 'IDC_Apply' put: 2423;
		at: 2423 put: #IDC_Apply;
		at: 'IDC_AssignedUserCombo' put: 5059;
		at: 5059 put: #IDC_AssignedUserCombo;
		at: 'IDC_AuthKeyEdit' put: 2628;
		at: 2628 put: #IDC_AuthKeyEdit;
		at: 'IDC_AvailableListView' put: 2514;
		at: 2514 put: #IDC_AvailableListView;
		at: 'IDC_Background' put: 2651;
		at: 2651 put: #IDC_Background;
		at: 'IDC_Bar' put: 2654;
		at: 2654 put: #IDC_Bar;
		at: 'IDC_BetweenRadio' put: 5125;
		at: 5125 put: #IDC_BetweenRadio;
		at: 'IDC_BoldCheck' put: 2621;
		at: 2621 put: #IDC_BoldCheck;
		at: 'IDC_BrokerageCombo' put: 5058;
		at: 5058 put: #IDC_BrokerageCombo;
		at: 'IDC_Browse' put: 2025;
		at: 2025 put: #IDC_Browse;
		at: 'IDC_BulletsCheck' put: 2611;
		at: 2611 put: #IDC_BulletsCheck;
		at: 'IDC_CenterRadio' put: 2609;
		at: 2609 put: #IDC_CenterRadio;
		at: 'IDC_Clear' put: 2575;
		at: 2575 put: #IDC_Clear;
		at: 'IDC_CollateCheck' put: 2528;
		at: 2528 put: #IDC_CollateCheck;
		at: 'IDC_CompletionDateCombo' put: 5108;
		at: 5108 put: #IDC_CompletionDateCombo;
		at: 'IDC_CopiesSpin' put: 2512;
		at: 2512 put: #IDC_CopiesSpin;
		at: 'IDC_Copy' put: 2105;
		at: 2105 put: #IDC_Copy;
		at: 'IDC_CountEdit' put: 2511;
		at: 2511 put: #IDC_CountEdit;
		at: 'IDC_CreatedCombo' put: 5072;
		at: 5072 put: #IDC_CreatedCombo;
		at: 'IDC_CreatedEdit' put: 2585;
		at: 2585 put: #IDC_CreatedEdit;
		at: 'IDC_CreateRemoteSite' put: 2642;
		at: 2642 put: #IDC_CreateRemoteSite;
		at: 'IDC_CustomButton' put: 2112;
		at: 2112 put: #IDC_CustomButton;
		at: 'IDC_DayCombo' put: 5118;
		at: 5118 put: #IDC_DayCombo;
		at: 'IDC_DayEdit' put: 5116;
		at: 5116 put: #IDC_DayEdit;
		at: 'IDC_DayRadio' put: 5124;
		at: 5124 put: #IDC_DayRadio;
		at: 'IDC_DaySpin' put: 5115;
		at: 5115 put: #IDC_DaySpin;
		at: 'IDC_DayText' put: 5112;
		at: 5112 put: #IDC_DayText;
		at: 'IDC_DecreaseIndent' put: 2625;
		at: 2625 put: #IDC_DecreaseIndent;
		at: 'IDC_DefaultRadio' put: 6203;
		at: 6203 put: #IDC_DefaultRadio;
		at: 'IDC_Delete' put: 1046;
		at: 1046 put: #IDC_Delete;
		at: 'IDC_DeleteButton' put: 2118;
		at: 2118 put: #IDC_DeleteButton;
		at: 'IDC_DisclaimerStatic' put: 2644;
		at: 2644 put: #IDC_DisclaimerStatic;
		at: 'IDC_DisclaimerStatic2' put: 2648;
		at: 2648 put: #IDC_DisclaimerStatic2;
		at: 'IDC_DuplexCombo' put: 2507;
		at: 2507 put: #IDC_DuplexCombo;
		at: 'IDC_Edit' put: 1047;
		at: 1047 put: #IDC_Edit;
		at: 'IDC_EditButton' put: 2177;
		at: 2177 put: #IDC_EditButton;
		at: 'IDC_EffectiveDateCombo' put: 5080;
		at: 5080 put: #IDC_EffectiveDateCombo;
		at: 'IDC_EndDateCombo' put: 5077;
		at: 5077 put: #IDC_EndDateCombo;
		at: 'IDC_EndDateEdit' put: 5120;
		at: 5120 put: #IDC_EndDateEdit;
		at: 'IDC_EnglishRadio' put: 6159;
		at: 6159 put: #IDC_EnglishRadio;
		at: 'IDC_EnglishUSRadio' put: 2582;
		at: 2582 put: #IDC_EnglishUSRadio;
		at: 'IDC_Exclude' put: 2438;
		at: 2438 put: #IDC_Exclude;
		at: 'IDC_FindEdit' put: 1054;
		at: 1054 put: #IDC_FindEdit;
		at: 'IDC_FindNext' put: 1056;
		at: 1056 put: #IDC_FindNext;
		at: 'IDC_FontCombo' put: 2617;
		at: 2617 put: #IDC_FontCombo;
		at: 'IDC_FontSizeCombo' put: 2618;
		at: 2618 put: #IDC_FontSizeCombo;
		at: 'IDC_FormDescriptionLabel' put: 2468;
		at: 2468 put: #IDC_FormDescriptionLabel;
		at: 'IDC_FrenchRadio' put: 6160;
		at: 6160 put: #IDC_FrenchRadio;
		at: 'IDC_Grabber' put: 911;
		at: 911 put: #IDC_Grabber;
		at: 'IDC_HeadingStatic' put: 2655;
		at: 2655 put: #IDC_HeadingStatic;
		at: 'IDC_Icon' put: 2653;
		at: 2653 put: #IDC_Icon;
		at: 'IDC_Include' put: 2437;
		at: 2437 put: #IDC_Include;
		at: 'IDC_IncreaseIndent' put: 2624;
		at: 2624 put: #IDC_IncreaseIndent;
		at: 'IDC_IndustryCodeEdit' put: 2635;
		at: 2635 put: #IDC_IndustryCodeEdit;
		at: 'IDC_InfoEdit' put: 2109;
		at: 2109 put: #IDC_InfoEdit;
		at: 'IDC_InsuredEdit' put: 5106;
		at: 5106 put: #IDC_InsuredEdit;
		at: 'IDC_InsurerCombo' put: 5056;
		at: 5056 put: #IDC_InsurerCombo;
		at: 'IDC_ItalicCheck' put: 2622;
		at: 2622 put: #IDC_ItalicCheck;
		at: 'IDC_JustifyRadio' put: 2616;
		at: 2616 put: #IDC_JustifyRadio;
		at: 'IDC_KeyEdit' put: 1051;
		at: 1051 put: #IDC_KeyEdit;
		at: 'IDC_KeyLabelStatic' put: 2646;
		at: 2646 put: #IDC_KeyLabelStatic;
		at: 'IDC_LanguageCombo' put: 2596;
		at: 2596 put: #IDC_LanguageCombo;
		yourself.!

initItemIDsCommon2: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDC_LastUserCombo' put: 5060;
		at: 5060 put: #IDC_LastUserCombo;
		at: 'IDC_LeftRadio' put: 2608;
		at: 2608 put: #IDC_LeftRadio;
		at: 'IDC_List' put: 1062;
		at: 1062 put: #IDC_List;
		at: 'IDC_ListView' put: 1480;
		at: 1480 put: #IDC_ListView;
		at: 'IDC_ListViewStatic' put: 2649;
		at: 2649 put: #IDC_ListViewStatic;
		at: 'IDC_LocksList' put: 2557;
		at: 2557 put: #IDC_LocksList;
		at: 'IDC_MarketerEdit' put: 2638;
		at: 2638 put: #IDC_MarketerEdit;
		at: 'IDC_MatchCaseCheck' put: 1059;
		at: 1059 put: #IDC_MatchCaseCheck;
		at: 'IDC_MatchWordsCheck' put: 1060;
		at: 1060 put: #IDC_MatchWordsCheck;
		at: 'IDC_ModifiedCombo' put: 5100;
		at: 5100 put: #IDC_ModifiedCombo;
		at: 'IDC_MonthCombo' put: 5117;
		at: 5117 put: #IDC_MonthCombo;
		at: 'IDC_MonthEdit' put: 5122;
		at: 5122 put: #IDC_MonthEdit;
		at: 'IDC_MonthRadio' put: 5121;
		at: 5121 put: #IDC_MonthRadio;
		at: 'IDC_MonthSpin' put: 5123;
		at: 5123 put: #IDC_MonthSpin;
		at: 'IDC_MonthText' put: 5113;
		at: 5113 put: #IDC_MonthText;
		at: 'IDC_NameEdit' put: 5086;
		at: 5086 put: #IDC_NameEdit;
		at: 'IDC_New' put: 1080;
		at: 1080 put: #IDC_New;
		at: 'IDC_Next' put: 2592;
		at: 2592 put: #IDC_Next;
		at: 'IDC_NotSharedRadio' put: 2565;
		at: 2565 put: #IDC_NotSharedRadio;
		at: 'IDC_OK' put: 2593;
		at: 2593 put: #IDC_OK;
		at: 'IDC_OldPasswordEdit' put: 2570;
		at: 2570 put: #IDC_OldPasswordEdit;
		at: 'IDC_OptionsList' put: 2581;
		at: 2581 put: #IDC_OptionsList;
		at: 'IDC_PaperBinCombo' put: 2493;
		at: 2493 put: #IDC_PaperBinCombo;
		at: 'IDC_PaperSizeCombo' put: 2506;
		at: 2506 put: #IDC_PaperSizeCombo;
		at: 'IDC_PasswordCheck' put: 2486;
		at: 2486 put: #IDC_PasswordCheck;
		at: 'IDC_PasswordEdit' put: 2490;
		at: 2490 put: #IDC_PasswordEdit;
		at: 'IDC_PasswordStatic' put: 2489;
		at: 2489 put: #IDC_PasswordStatic;
		at: 'IDC_PathEdit' put: 2024;
		at: 2024 put: #IDC_PathEdit;
		at: 'IDC_PermissionsList' put: 2484;
		at: 2484 put: #IDC_PermissionsList;
		at: 'IDC_PermissionsStatic' put: 2485;
		at: 2485 put: #IDC_PermissionsStatic;
		at: 'IDC_PolicyNoEdit' put: 5067;
		at: 5067 put: #IDC_PolicyNoEdit;
		at: 'IDC_PolicyTypeCombo' put: 5065;
		at: 5065 put: #IDC_PolicyTypeCombo;
		at: 'IDC_PremiumEdit' put: 5104;
		at: 5104 put: #IDC_PremiumEdit;
		at: 'IDC_PremiumOperatorCombo' put: 5109;
		at: 5109 put: #IDC_PremiumOperatorCombo;
		at: 'IDC_Prev' put: 2591;
		at: 2591 put: #IDC_Prev;
		at: 'IDC_Print' put: 2110;
		at: 2110 put: #IDC_Print;
		at: 'IDC_PrinterCombo' put: 5461;
		at: 5461 put: #IDC_PrinterCombo;
		at: 'IDC_ProducerEdit' put: 2639;
		at: 2639 put: #IDC_ProducerEdit;
		at: 'IDC_Progress' put: 2650;
		at: 2650 put: #IDC_Progress;
		at: 'IDC_Properties' put: 107;
		at: 107 put: #IDC_Properties;
		at: 'IDC_RelativeCheckBox' put: 2034;
		at: 2034 put: #IDC_RelativeCheckBox;
		at: 'IDC_Replace' put: 1057;
		at: 1057 put: #IDC_Replace;
		at: 'IDC_ReplaceAll' put: 1058;
		at: 1058 put: #IDC_ReplaceAll;
		at: 'IDC_ReplaceEdit' put: 1055;
		at: 1055 put: #IDC_ReplaceEdit;
		at: 'IDC_ReplaceText' put: 1061;
		at: 1061 put: #IDC_ReplaceText;
		at: 'IDC_Reset' put: 2560;
		at: 2560 put: #IDC_Reset;
		at: 'IDC_Restore' put: 1082;
		at: 1082 put: #IDC_Restore;
		at: 'IDC_RestrictedAccessPasswordCheck' put: 2491;
		at: 2491 put: #IDC_RestrictedAccessPasswordCheck;
		at: 'IDC_ResultsList' put: 2396;
		at: 2396 put: #IDC_ResultsList;
		at: 'IDC_RichEdit' put: 2597;
		at: 2597 put: #IDC_RichEdit;
		at: 'IDC_RightRadio' put: 2610;
		at: 2610 put: #IDC_RightRadio;
		at: 'IDC_RiskList' put: 2429;
		at: 2429 put: #IDC_RiskList;
		at: 'IDC_RootPathText' put: 2022;
		at: 2022 put: #IDC_RootPathText;
		at: 'IDC_Save' put: 1081;
		at: 1081 put: #IDC_Save;
		at: 'IDC_Search' put: 2636;
		at: 2636 put: #IDC_Search;
		at: 'IDC_SearchButton' put: 2399;
		at: 2399 put: #IDC_SearchButton;
		at: 'IDC_SearchEdit' put: 2398;
		at: 2398 put: #IDC_SearchEdit;
		at: 'IDC_SectionCombo' put: 2400;
		at: 2400 put: #IDC_SectionCombo;
		at: 'IDC_Select' put: 2515;
		at: 2515 put: #IDC_Select;
		at: 'IDC_SelectAll' put: 2439;
		at: 2439 put: #IDC_SelectAll;
		at: 'IDC_SelectedListView' put: 2513;
		at: 2513 put: #IDC_SelectedListView;
		at: 'IDC_Send' put: 2111;
		at: 2111 put: #IDC_Send;
		at: 'IDC_SharedRadio' put: 2566;
		at: 2566 put: #IDC_SharedRadio;
		at: 'IDC_ShortNameEdit' put: 5087;
		at: 5087 put: #IDC_ShortNameEdit;
		at: 'IDC_ShortNameText' put: 5094;
		at: 5094 put: #IDC_ShortNameText;
		at: 'IDC_ShowPasswordCheck' put: 2627;
		at: 2627 put: #IDC_ShowPasswordCheck;
		at: 'IDC_ShowPrinterPropertiesCheck' put: 2536;
		at: 2536 put: #IDC_ShowPrinterPropertiesCheck;
		at: 'IDC_SiteCombo' put: 5114;
		at: 5114 put: #IDC_SiteCombo;
		at: 'IDC_SiteIDEdit' put: 2584;
		at: 2584 put: #IDC_SiteIDEdit;
		at: 'IDC_SiteNameEdit' put: 2583;
		at: 2583 put: #IDC_SiteNameEdit;
		at: 'IDC_SiteURLEdit' put: 2629;
		at: 2629 put: #IDC_SiteURLEdit;
		at: 'IDC_StartDateCombo' put: 5076;
		at: 5076 put: #IDC_StartDateCombo;
		at: 'IDC_StartDateEdit' put: 5119;
		at: 5119 put: #IDC_StartDateEdit;
		at: 'IDC_StatusCombo' put: 5071;
		at: 5071 put: #IDC_StatusCombo;
		at: 'IDC_StatusLabelStatic' put: 2647;
		at: 2647 put: #IDC_StatusLabelStatic;
		at: 'IDC_StatusStatic' put: 2633;
		at: 2633 put: #IDC_StatusStatic;
		at: 'IDC_SubscriberCombo' put: 5057;
		at: 5057 put: #IDC_SubscriberCombo;
		at: 'IDC_TabControl' put: 2590;
		at: 2590 put: #IDC_TabControl;
		at: 'IDC_Tabs' put: 1063;
		at: 1063 put: #IDC_Tabs;
		at: 'IDC_TemplateCombo' put: 2419;
		at: 2419 put: #IDC_TemplateCombo;
		at: 'IDC_Text' put: 706;
		at: 706 put: #IDC_Text;
		at: 'IDC_TitleText' put: 2443;
		at: 2443 put: #IDC_TitleText;
		at: 'IDC_ToolbarStatic1' put: 2658;
		at: 2658 put: #IDC_ToolbarStatic1;
		at: 'IDC_ToolbarStatic2' put: 2657;
		at: 2657 put: #IDC_ToolbarStatic2;
		at: 'IDC_ToolbarStatic3' put: 2659;
		at: 2659 put: #IDC_ToolbarStatic3;
		at: 'IDC_ToolbarStatic4' put: 2660;
		at: 2660 put: #IDC_ToolbarStatic4;
		at: 'IDC_ToolbarStatic5' put: 2656;
		at: 2656 put: #IDC_ToolbarStatic5;
		at: 'IDC_TransactionTypeCombo' put: 5068;
		at: 5068 put: #IDC_TransactionTypeCombo;
		at: 'IDC_TypeCombo' put: 1052;
		at: 1052 put: #IDC_TypeCombo;
		at: 'IDC_UnderlineCheck' put: 2623;
		at: 2623 put: #IDC_UnderlineCheck;
		at: 'IDC_UnderwriterEdit' put: 2640;
		at: 2640 put: #IDC_UnderwriterEdit;
		at: 'IDC_Unlock' put: 2561;
		at: 2561 put: #IDC_Unlock;
		at: 'IDC_Unselect' put: 2516;
		at: 2516 put: #IDC_Unselect;
		at: 'IDC_UrlLabelStatic' put: 2645;
		at: 2645 put: #IDC_UrlLabelStatic;
		at: 'IDC_UserCombo' put: 5103;
		at: 5103 put: #IDC_UserCombo;
		at: 'IDC_ValueEdit' put: 1053;
		at: 1053 put: #IDC_ValueEdit;
		at: 'IDC_VerifyPasswordEdit' put: 5172;
		at: 5172 put: #IDC_VerifyPasswordEdit;
		at: 'IDD_AboutDialog' put: 893;
		at: 893 put: #IDD_AboutDialog;
		at: 'IDD_AdvancedCompanyDialog' put: 6143;
		at: 6143 put: #IDD_AdvancedCompanyDialog;
		at: 'IDD_AdvancedCompanyDialogFRC' put: 6161;
		at: 6161 put: #IDD_AdvancedCompanyDialogFRC;
		at: 'IDD_AdvancedDateDialog' put: 6142;
		at: 6142 put: #IDD_AdvancedDateDialog;
		yourself.!
  
initItemIDsCommon3: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDD_AdvancedDateDialogFRC' put: 6162;
		at: 6162 put: #IDD_AdvancedDateDialogFRC;
		at: 'IDD_AdvancedFileDateDialog' put: 6101;
		at: 6101 put: #IDD_AdvancedFileDateDialog;
		at: 'IDD_AdvancedFileDateDialogFRC' put: 6163;
		at: 6163 put: #IDD_AdvancedFileDateDialogFRC;
		at: 'IDD_FindFilesDialogFilePage' put: 6145;
		at: 6145 put: #IDD_FindFilesDialogFilePage;
		at: 'IDD_FindFilesDialogFilePageFRC' put: 6164;
		at: 6164 put: #IDD_FindFilesDialogFilePageFRC;
		at: 'IDD_FindFilesDialogInsuredPage' put: 6141;
		at: 6141 put: #IDD_FindFilesDialogInsuredPage;
		at: 'IDD_FindFilesDialogInsuredPageFRC' put: 6165;
		at: 6165 put: #IDD_FindFilesDialogInsuredPageFRC;
		at: 'IDD_FindFilesDialogPolicyPage' put: 6139;
		at: 6139 put: #IDD_FindFilesDialogPolicyPage;
		at: 'IDD_FindFilesDialogPolicyPageFRC' put: 6166;
		at: 6166 put: #IDD_FindFilesDialogPolicyPageFRC;
		at: 'IDD_FindFilesDialogTransactionPage' put: 6140;
		at: 6140 put: #IDD_FindFilesDialogTransactionPage;
		at: 'IDD_FindFilesDialogTransactionPageFRC' put: 6167;
		at: 6167 put: #IDD_FindFilesDialogTransactionPageFRC;
		at: 'IDD_FindRenewalsDialog' put: 6146;
		at: 6146 put: #IDD_FindRenewalsDialog;
		at: 'IDD_FindRenewalsDialogFRC' put: 6168;
		at: 6168 put: #IDD_FindRenewalsDialogFRC;
		at: 'IDD_FindReplaceDialog' put: 821;
		at: 821 put: #IDD_FindReplaceDialog;
		at: 'IDD_FindReplaceDialogFRC' put: 6169;
		at: 6169 put: #IDD_FindReplaceDialogFRC;
		at: 'IDD_ListPage' put: 894;
		at: 894 put: #IDD_ListPage;
		at: 'IDD_ListPageFRC' put: 6170;
		at: 6170 put: #IDD_ListPageFRC;
		at: 'IDD_PDFAdvancedSecuritySettingsDialog' put: 5457;
		at: 5457 put: #IDD_PDFAdvancedSecuritySettingsDialog;
		at: 'IDD_PDFAdvancedSecuritySettingsDialogFRC' put: 6171;
		at: 6171 put: #IDD_PDFAdvancedSecuritySettingsDialogFRC;
		at: 'IDD_PDFSecuritySettingsDialog' put: 996;
		at: 996 put: #IDD_PDFSecuritySettingsDialog;
		at: 'IDD_PDFSecuritySettingsDialogFRC' put: 6172;
		at: 6172 put: #IDD_PDFSecuritySettingsDialogFRC;
		at: 'IDD_SitePropertiesGeneralPage' put: 6204;
		at: 6204 put: #IDD_SitePropertiesGeneralPage;
		at: 'IDD_SitePropertiesGeneralPageFRC' put: 6205;
		at: 6205 put: #IDD_SitePropertiesGeneralPageFRC;
		at: 'IDD_SitePropertiesRemoteSitePage' put: 6211;
		at: 6211 put: #IDD_SitePropertiesRemoteSitePage;
		at: 'IDD_SitePropertiesRemoteSitePageFRC' put: 6212;
		at: 6212 put: #IDD_SitePropertiesRemoteSitePageFRC;
		at: 'IDD_SystemInfoPage' put: 917;
		at: 917 put: #IDD_SystemInfoPage;
		at: 'IDD_SystemInfoPageFRC' put: 6173;
		at: 6173 put: #IDD_SystemInfoPageFRC;
		at: 'IDD_T4ChangePasswordDialog' put: 3560;
		at: 3560 put: #IDD_T4ChangePasswordDialog;
		at: 'IDD_T4ChangePasswordDialogFRC' put: 6198;
		at: 6198 put: #IDD_T4ChangePasswordDialogFRC;
		at: 'IDD_T4CustomDeclarationsWizardOptionsPage' put: 983;
		at: 983 put: #IDD_T4CustomDeclarationsWizardOptionsPage;
		at: 'IDD_T4CustomDeclarationsWizardOptionsPageFRC' put: 6175;
		at: 6175 put: #IDD_T4CustomDeclarationsWizardOptionsPageFRC;
		at: 'IDD_T4CustomDeclarationsWizardReadyPage' put: 984;
		at: 984 put: #IDD_T4CustomDeclarationsWizardReadyPage;
		at: 'IDD_T4CustomDeclarationsWizardReadyPageFRC' put: 6176;
		at: 6176 put: #IDD_T4CustomDeclarationsWizardReadyPageFRC;
		at: 'IDD_T4CustomDeclarationsWizardSelectRisksPage' put: 985;
		at: 985 put: #IDD_T4CustomDeclarationsWizardSelectRisksPage;
		at: 'IDD_T4CustomDeclarationsWizardSelectRisksPageFRC' put: 6177;
		at: 6177 put: #IDD_T4CustomDeclarationsWizardSelectRisksPageFRC;
		at: 'IDD_T4CustomDeclarationsWizardSelectRiskTypePage' put: 986;
		at: 986 put: #IDD_T4CustomDeclarationsWizardSelectRiskTypePage;
		at: 'IDD_T4CustomDeclarationsWizardSelectRiskTypePageFRC' put: 6178;
		at: 6178 put: #IDD_T4CustomDeclarationsWizardSelectRiskTypePageFRC;
		at: 'IDD_T4CustomDeclarationsWizardSelectTemplatePage' put: 987;
		at: 987 put: #IDD_T4CustomDeclarationsWizardSelectTemplatePage;
		at: 'IDD_T4CustomDeclarationsWizardSelectTemplatePageFRC' put: 6179;
		at: 6179 put: #IDD_T4CustomDeclarationsWizardSelectTemplatePageFRC;
		at: 'IDD_T4CustomDeclarationsWizardWelcomePage' put: 990;
		at: 990 put: #IDD_T4CustomDeclarationsWizardWelcomePage;
		at: 'IDD_T4CustomDeclarationsWizardWelcomePageFRC' put: 6180;
		at: 6180 put: #IDD_T4CustomDeclarationsWizardWelcomePageFRC;
		at: 'IDD_T4FileLockEditor' put: 2559;
		at: 2559 put: #IDD_T4FileLockEditor;
		at: 'IDD_T4FileLockEditorFRC' put: 6200;
		at: 6200 put: #IDD_T4FileLockEditorFRC;
		at: 'IDD_T4ListMultiSelectDialog' put: 895;
		at: 895 put: #IDD_T4ListMultiSelectDialog;
		at: 'IDD_T4ListMultiSelectDialogFRC' put: 6181;
		at: 6181 put: #IDD_T4ListMultiSelectDialogFRC;
		at: 'IDD_T4ListViewPage' put: 1479;
		at: 1479 put: #IDD_T4ListViewPage;
		at: 'IDD_T4ListViewPageFRC' put: 6182;
		at: 6182 put: #IDD_T4ListViewPageFRC;
		at: 'IDD_T4ListViewProgressDialog' put: 6214;
		at: 6214 put: #IDD_T4ListViewProgressDialog;
		at: 'IDD_T4ListViewSelectDialog' put: 6216;
		at: 6216 put: #IDD_T4ListViewSelectDialog;
		at: 'IDD_T4MultiPaneDialog' put: 6217;
		at: 6217 put: #IDD_T4MultiPaneDialog;
		at: 'IDD_T4OptionsDialogUILanguagePage' put: 3564;
		at: 3564 put: #IDD_T4OptionsDialogUILanguagePage;
		at: 'IDD_T4OptionsDialogUILanguagePageFRC' put: 6201;
		at: 6201 put: #IDD_T4OptionsDialogUILanguagePageFRC;
		at: 'IDD_T4PDFPrintAdvancedSettingsDialog' put: 1091;
		at: 1091 put: #IDD_T4PDFPrintAdvancedSettingsDialog;
		at: 'IDD_T4PDFPrintAdvancedSettingsDialogFRC' put: 6184;
		at: 6184 put: #IDD_T4PDFPrintAdvancedSettingsDialogFRC;
		at: 'IDD_T4PDFPrintSettingsDialog' put: 5458;
		at: 5458 put: #IDD_T4PDFPrintSettingsDialog;
		at: 'IDD_T4PDFPrintSettingsDialogFRC' put: 6185;
		at: 6185 put: #IDD_T4PDFPrintSettingsDialogFRC;
		at: 'IDD_T4PropertySheetDialog' put: 6213;
		at: 6213 put: #IDD_T4PropertySheetDialog;
		at: 'IDD_T4RichEditDialog' put: 6209;
		at: 6209 put: #IDD_T4RichEditDialog;
		at: 'IDD_T4SearchDialog' put: 5452;
		at: 5452 put: #IDD_T4SearchDialog;
		at: 'IDD_T4SearchDialogFRC' put: 6186;
		at: 6186 put: #IDD_T4SearchDialogFRC;
		at: 'IDD_T4SiteDataSharingPage' put: 3562;
		at: 3562 put: #IDD_T4SiteDataSharingPage;
		at: 'IDD_T4SiteDataSharingPageFRC' put: 6199;
		at: 6199 put: #IDD_T4SiteDataSharingPageFRC;
		at: 'IDD_T4StorageViewListEditDialog' put: 6208;
		at: 6208 put: #IDD_T4StorageViewListEditDialog;
		at: 'IDD_T4TopicAssistantDialog' put: 6206;
		at: 6206 put: #IDD_T4TopicAssistantDialog;
		at: 'IndentationGroup' put: 1018;
		at: 1018 put: #IndentationGroup;
		at: 'LeftEdit' put: 1000;
		at: 1000 put: #LeftEdit;
		at: 'LeftStatic' put: 1015;
		at: 1015 put: #LeftStatic;
		at: 'List' put: 106;
		at: 106 put: #List;
		at: 'ListDialog' put: 100;
		at: 100 put: #ListDialog;
		at: 'ListDialogFRC' put: 6190;
		at: 6190 put: #ListDialogFRC;
		at: 'ListGroupBox' put: 112;
		at: 112 put: #ListGroupBox;
		at: 'ListSelectDialog' put: 300;
		at: 300 put: #ListSelectDialog;
		at: 'ListSelectDialogFRC' put: 6191;
		at: 6191 put: #ListSelectDialogFRC;
		at: 'ListSheet' put: 816;
		at: 816 put: #ListSheet;
		at: 'ListSheetFRC' put: 6192;
		at: 6192 put: #ListSheetFRC;
		at: 'MoveDown' put: 1050;
		at: 1050 put: #MoveDown;
		at: 'MoveUp' put: 1049;
		at: 1049 put: #MoveUp;
		at: 'NameEdit' put: 501;
		at: 501 put: #NameEdit;
		at: 'NameText' put: 502;
		at: 502 put: #NameText;
		at: 'NewPasswordText' put: 3703;
		at: 3703 put: #NewPasswordText;
		at: 'OK' put: 1;
		at: 1 put: #OK;
		at: 'ParagraphDialog' put: 801;
		at: 801 put: #ParagraphDialog;
		at: 'ParagraphDialogFRC' put: 6193;
		at: 6193 put: #ParagraphDialogFRC;
		at: 'PathDialog' put: 2104;
		at: 2104 put: #PathDialog;
		at: 'PathDialogFRC' put: 6194;
		at: 6194 put: #PathDialogFRC;
		at: 'PromptText' put: 301;
		at: 301 put: #PromptText;
		at: 'PropertyDialog' put: 820;
		at: 820 put: #PropertyDialog;
		at: 'PropertyDialogFRC' put: 6195;
		at: 6195 put: #PropertyDialogFRC;
		at: 'RightEdit' put: 1001;
		at: 1001 put: #RightEdit;
		at: 'RightStatic' put: 1016;
		at: 1016 put: #RightStatic;
		at: 'Set' put: 1007;
		at: 1007 put: #Set;
		at: 'StringDialog' put: 500;
		at: 500 put: #StringDialog;
		at: 'StringDialogFRC' put: 6196;
		at: 6196 put: #StringDialogFRC;
		at: 'Tabs' put: 1022;
		at: 1022 put: #Tabs;
		at: 'TabsDialog' put: 802;
		at: 802 put: #TabsDialog;
		at: 'TabsDialogFRC' put: 6197;
		at: 6197 put: #TabsDialogFRC;
		at: 'TabStopPositionEdit' put: 1005;
		at: 1005 put: #TabStopPositionEdit;
		at: 'TabStopPositionList' put: 1006;
		at: 1006 put: #TabStopPositionList;
		yourself.!
   
initItemIDsPwAdmin
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	| dllDict |

	dllDict := self itemIDsByDLL at: 'PwAdmin' ifAbsent: [nil].
	dllDict ifNotNil: [^dllDict].

	dllDict := Dictionary new.
	self itemIDsByDLL at: 'PwAdmin' put: dllDict.
	self
		initItemIDsPwAdmin1: dllDict;
		initItemIDsPwAdmin2: dllDict;
		initItemIDsPwAdmin3: dllDict;
		yourself.
	^dllDict!
  
initItemIDsPwAdmin1: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'AddMissingPolicyNumbersDialog' put: 4300;
		at: 4300 put: #AddMissingPolicyNumbersDialog;
		at: 'AddMissingPolicyNumbersDialogFRC' put: 6196;
		at: 6196 put: #AddMissingPolicyNumbersDialogFRC;
		at: 'browseForWatermarkFile' put: 5180;
		at: 5180 put: #browseForWatermarkFile;
		at: 'Cancel' put: 2;
		at: 2 put: #Cancel;
		at: 'DirectoriesDialog' put: 6105;
		at: 6105 put: #DirectoriesDialog;
		at: 'DirectoriesDialogFRC' put: 6197;
		at: 6197 put: #DirectoriesDialogFRC;
		at: 'HighEdit' put: 502;
		at: 502 put: #HighEdit;
		at: 'IDB_ColorPreview' put: 6166;
		at: 6166 put: #IDB_ColorPreview;
		at: 'IDB_FIRST' put: 6256;
		at: 6256 put: #IDB_FIRST;
		at: 'IDB_FIRSTFrench' put: 6257;
		at: 6257 put: #IDB_FIRSTFrench;
		at: 'IDB_PolicyWorks' put: 6149;
		at: 6149 put: #IDB_PolicyWorks;
		at: 'IDB_PolicyWorksFrench' put: 6185;
		at: 6185 put: #IDB_PolicyWorksFrench;
		at: 'IDB_PowerBIExample' put: 6279;
		at: 6279 put: #IDB_PowerBIExample;
		at: 'IDB_PowerBIExampleFRC' put: 6284;
		at: 6284 put: #IDB_PowerBIExampleFRC;
		at: 'IDB_SmallImage' put: 6164;
		at: 6164 put: #IDB_SmallImage;
		at: 'IDB_StartupBitmap' put: 6110;
		at: 6110 put: #IDB_StartupBitmap;
		at: 'IDB_StartupBitmapFrench' put: 6186;
		at: 6186 put: #IDB_StartupBitmapFrench;
		at: 'IDB_Watermark' put: 6162;
		at: 6162 put: #IDB_Watermark;
		at: 'IDC_AccessRightsList' put: 5158;
		at: 5158 put: #IDC_AccessRightsList;
		at: 'IDC_Add' put: 5029;
		at: 5029 put: #IDC_Add;
		at: 'IDC_AddButton' put: 1414;
		at: 1414 put: #IDC_AddButton;
		at: 'IDC_Advanced' put: 5130;
		at: 5130 put: #IDC_Advanced;
		at: 'IDC_AdvancedSettingsButton' put: 5418;
		at: 5418 put: #IDC_AdvancedSettingsButton;
		at: 'IDC_AliasEdit' put: 5159;
		at: 5159 put: #IDC_AliasEdit;
		at: 'IDC_AllowSubscribersToReceiveAllUpdatesCheck' put: 5247;
		at: 5247 put: #IDC_AllowSubscribersToReceiveAllUpdatesCheck;
		at: 'IDC_AllowUsersCheck' put: 5337;
		at: 5337 put: #IDC_AllowUsersCheck;
		at: 'IDC_AllowUserToModifyShowPremiumsCheckbox' put: 5350;
		at: 5350 put: #IDC_AllowUserToModifyShowPremiumsCheckbox;
		at: 'IDC_AlwaysHidePasswordsCheck' put: 5334;
		at: 5334 put: #IDC_AlwaysHidePasswordsCheck;
		at: 'IDC_AlwaysUseEndorsementRequestsCheck' put: 5298;
		at: 5298 put: #IDC_AlwaysUseEndorsementRequestsCheck;
		at: 'IDC_AnalyticsDescription' put: 5440;
		at: 5440 put: #IDC_AnalyticsDescription;
		at: 'IDC_AnalyticsStatusText' put: 5441;
		at: 5441 put: #IDC_AnalyticsStatusText;
		at: 'IDC_ArchivePathEdit' put: 5142;
		at: 5142 put: #IDC_ArchivePathEdit;
		at: 'IDC_ArchiveProgress' put: 5137;
		at: 5137 put: #IDC_ArchiveProgress;
		at: 'IDC_AttachmentMaximumEdit' put: 5209;
		at: 5209 put: #IDC_AttachmentMaximumEdit;
		at: 'IDC_AttachmentTotalMaximumEdit' put: 5210;
		at: 5210 put: #IDC_AttachmentTotalMaximumEdit;
		at: 'IDC_AttachmentWarningEdit' put: 5211;
		at: 5211 put: #IDC_AttachmentWarningEdit;
		at: 'IDC_AutoDownloadCheck' put: 5402;
		at: 5402 put: #IDC_AutoDownloadCheck;
		at: 'IDC_BackupFolderEdit' put: 5302;
		at: 5302 put: #IDC_BackupFolderEdit;
		at: 'IDC_BlackAndWhiteTextCheck' put: 5208;
		at: 5208 put: #IDC_BlackAndWhiteTextCheck;
		at: 'IDC_BrokerageCombo' put: 5357;
		at: 5357 put: #IDC_BrokerageCombo;
		at: 'IDC_BrokerageSettingList' put: 5408;
		at: 5408 put: #IDC_BrokerageSettingList;
		at: 'IDC_BrokerIDEdit' put: 5397;
		at: 5397 put: #IDC_BrokerIDEdit;
		at: 'IDC_Browse' put: 5132;
		at: 5132 put: #IDC_Browse;
		at: 'IDC_BrowseForFile' put: 5243;
		at: 5243 put: #IDC_BrowseForFile;
		at: 'IDC_BrowseLogoSource' put: 5194;
		at: 5194 put: #IDC_BrowseLogoSource;
		at: 'IDC_BrowsePhotoSource' put: 5195;
		at: 5195 put: #IDC_BrowsePhotoSource;
		at: 'IDC_BrowsePolicyTypeSource' put: 5196;
		at: 5196 put: #IDC_BrowsePolicyTypeSource;
		at: 'IDC_CategoryList' put: 6245;
		at: 6245 put: #IDC_CategoryList;
		at: 'IDC_ChangePassword' put: 3909;
		at: 3909 put: #IDC_ChangePassword;
		at: 'IDC_CheckForUpdates' put: 5239;
		at: 5239 put: #IDC_CheckForUpdates;
		at: 'IDC_ChooseButton' put: 5420;
		at: 5420 put: #IDC_ChooseButton;
		at: 'IDC_ChooseSideBarColor' put: 5205;
		at: 5205 put: #IDC_ChooseSideBarColor;
		at: 'IDC_ColorButton1' put: 6233;
		at: 6233 put: #IDC_ColorButton1;
		at: 'IDC_ColorButton2' put: 6234;
		at: 6234 put: #IDC_ColorButton2;
		at: 'IDC_ColorButton3' put: 6235;
		at: 6235 put: #IDC_ColorButton3;
		at: 'IDC_ColorButton4' put: 6236;
		at: 6236 put: #IDC_ColorButton4;
		at: 'IDC_ColorButton5' put: 6237;
		at: 6237 put: #IDC_ColorButton5;
		at: 'IDC_ColorButton6' put: 6238;
		at: 6238 put: #IDC_ColorButton6;
		at: 'IDC_ColorButton7' put: 6239;
		at: 6239 put: #IDC_ColorButton7;
		at: 'IDC_ColorButton8' put: 6240;
		at: 6240 put: #IDC_ColorButton8;
		at: 'IDC_ColorButton9' put: 6241;
		at: 6241 put: #IDC_ColorButton9;
		at: 'IDC_COMBO1' put: 5129;
		at: 5129 put: #IDC_COMBO1;
		at: 'IDC_ConcurrentLicenseRadio' put: 5394;
		at: 5394 put: #IDC_ConcurrentLicenseRadio;
		at: 'IDC_ConfigureSingleSignOn' put: 5319;
		at: 5319 put: #IDC_ConfigureSingleSignOn;
		at: 'IDC_ContactCombo' put: 5412;
		at: 5412 put: #IDC_ContactCombo;
		at: 'IDC_ContentsList' put: 5375;
		at: 5375 put: #IDC_ContentsList;
		at: 'IDC_CopyBrokerageTextLink' put: 5373;
		at: 5373 put: #IDC_CopyBrokerageTextLink;
		at: 'IDC_CopyCombo' put: 5390;
		at: 5390 put: #IDC_CopyCombo;
		at: 'IDC_CopyLogoLink' put: 5370;
		at: 5370 put: #IDC_CopyLogoLink;
		at: 'IDC_CopyPhotoLink' put: 5371;
		at: 5371 put: #IDC_CopyPhotoLink;
		at: 'IDC_CopyPictureLink' put: 5372;
		at: 5372 put: #IDC_CopyPictureLink;
		at: 'IDC_CoverPagePanesTab' put: 5369;
		at: 5369 put: #IDC_CoverPagePanesTab;
		at: 'IDC_CustomColorButton' put: 6244;
		at: 6244 put: #IDC_CustomColorButton;
		at: 'IDC_CustomRadio' put: 5368;
		at: 5368 put: #IDC_CustomRadio;
		at: 'IDC_CustomWatermarkRadio' put: 5189;
		at: 5189 put: #IDC_CustomWatermarkRadio;
		at: 'IDC_DataPathsListView' put: 5305;
		at: 5305 put: #IDC_DataPathsListView;
		at: 'IDC_DataReplicationNoRadio' put: 5424;
		at: 5424 put: #IDC_DataReplicationNoRadio;
		at: 'IDC_DataReplicationYesRadio' put: 5423;
		at: 5423 put: #IDC_DataReplicationYesRadio;
		at: 'IDC_DateCombo' put: 5143;
		at: 5143 put: #IDC_DateCombo;
		at: 'IDC_DefaultItemsList' put: 5225;
		at: 5225 put: #IDC_DefaultItemsList;
		at: 'IDC_DefaultRadio' put: 5341;
		at: 5341 put: #IDC_DefaultRadio;
		at: 'IDC_DefaultWatermarkRadio' put: 5187;
		at: 5187 put: #IDC_DefaultWatermarkRadio;
		at: 'IDC_Delete' put: 5031;
		at: 5031 put: #IDC_Delete;
		at: 'IDC_DeleteButton' put: 1302;
		at: 1302 put: #IDC_DeleteButton;
		at: 'IDC_DescriptionText' put: 5141;
		at: 5141 put: #IDC_DescriptionText;
		at: 'IDC_DisablePageNumbersCheck' put: 5204;
		at: 5204 put: #IDC_DisablePageNumbersCheck;
		at: 'IDC_Download' put: 5407;
		at: 5407 put: #IDC_Download;
		at: 'IDC_DraftNoticeAtBottomRadio' put: 5406;
		at: 5406 put: #IDC_DraftNoticeAtBottomRadio;
		at: 'IDC_DraftNoticeDiagonallyRadio' put: 5405;
		at: 5405 put: #IDC_DraftNoticeDiagonallyRadio;
		at: 'IDC_DueDateDaysEdit' put: 5401;
		at: 5401 put: #IDC_DueDateDaysEdit;
		at: 'IDC_Edit' put: 5030;
		at: 5030 put: #IDC_Edit;
		at: 'IDC_EditBrokerSettings' put: 5409;
		at: 5409 put: #IDC_EditBrokerSettings;
		at: 'IDC_EditButton' put: 1269;
		at: 1269 put: #IDC_EditButton;
		at: 'IDC_EnabledCheck' put: 5348;
		at: 5348 put: #IDC_EnabledCheck;
		at: 'IDC_EnforceBillingCheckbox' put: 5355;
		at: 5355 put: #IDC_EnforceBillingCheckbox;
		at: 'IDC_EnforceCommissionsOnNonIBCCodedTransactionsCheck' put: 5287;
		at: 5287 put: #IDC_EnforceCommissionsOnNonIBCCodedTransactionsCheck;
		at: 'IDC_EnforceRatesCheckbox' put: 5353;
		at: 5353 put: #IDC_EnforceRatesCheckbox;
		at: 'IDC_EnforceRulesCheckbox' put: 5351;
		at: 5351 put: #IDC_EnforceRulesCheckbox;
		at: 'IDC_EnglishCheck' put: 5249;
		at: 5249 put: #IDC_EnglishCheck;
		at: 'IDC_EnglishRadio' put: 5339;
		at: 5339 put: #IDC_EnglishRadio;
		at: 'IDC_EnglishUSCheck' put: 5297;
		at: 5297 put: #IDC_EnglishUSCheck;
		yourself.!
   
initItemIDsPwAdmin2: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDC_EnglishUSRadio' put: 5342;
		at: 5342 put: #IDC_EnglishUSRadio;
		at: 'IDC_EnterPolicyNumbersCheck' put: 5170;
		at: 5170 put: #IDC_EnterPolicyNumbersCheck;
		at: 'IDC_ExampleLongDateEdit' put: 5294;
		at: 5294 put: #IDC_ExampleLongDateEdit;
		at: 'IDC_ExampleShortDateEdit' put: 5293;
		at: 5293 put: #IDC_ExampleShortDateEdit;
		at: 'IDC_Exclude' put: 5378;
		at: 5378 put: #IDC_Exclude;
		at: 'IDC_FileEdit' put: 5242;
		at: 5242 put: #IDC_FileEdit;
		at: 'IDC_FilesProcessedText' put: 5138;
		at: 5138 put: #IDC_FilesProcessedText;
		at: 'IDC_FilesRemainingText' put: 5139;
		at: 5139 put: #IDC_FilesRemainingText;
		at: 'IDC_FilesRemainingText2' put: 5140;
		at: 5140 put: #IDC_FilesRemainingText2;
		at: 'IDC_FileStatic' put: 5273;
		at: 5273 put: #IDC_FileStatic;
		at: 'IDC_FinalizeCheck' put: 5169;
		at: 5169 put: #IDC_FinalizeCheck;
		at: 'IDC_FolderCombo' put: 5299;
		at: 5299 put: #IDC_FolderCombo;
		at: 'IDC_FolderText' put: 5300;
		at: 5300 put: #IDC_FolderText;
		at: 'IDC_FrenchCheck' put: 5250;
		at: 5250 put: #IDC_FrenchCheck;
		at: 'IDC_FrenchRadio' put: 5340;
		at: 5340 put: #IDC_FrenchRadio;
		at: 'IDC_FrequencyCombo' put: 5241;
		at: 5241 put: #IDC_FrequencyCombo;
		at: 'IDC_GracePeriodEdit' put: 5306;
		at: 5306 put: #IDC_GracePeriodEdit;
		at: 'IDC_GracePeriodSpin' put: 5315;
		at: 5315 put: #IDC_GracePeriodSpin;
		at: 'IDC_HelpStatic' put: 5416;
		at: 5416 put: #IDC_HelpStatic;
		at: 'IDC_HighEdit' put: 5163;
		at: 5163 put: #IDC_HighEdit;
		at: 'IDC_HowToEditCRsStatic' put: 5387;
		at: 5387 put: #IDC_HowToEditCRsStatic;
		at: 'IDC_Include' put: 5377;
		at: 5377 put: #IDC_Include;
		at: 'IDC_IndustryCodeCheck' put: 5308;
		at: 5308 put: #IDC_IndustryCodeCheck;
		at: 'IDC_IsActiveCheck' put: 5354;
		at: 5354 put: #IDC_IsActiveCheck;
		at: 'IDC_ListCombo' put: 5230;
		at: 5230 put: #IDC_ListCombo;
		at: 'IDC_LoginIDEdit' put: 5171;
		at: 5171 put: #IDC_LoginIDEdit;
		at: 'IDC_Logo' put: 5415;
		at: 5415 put: #IDC_Logo;
		at: 'IDC_LogoPlacementCombo' put: 5191;
		at: 5191 put: #IDC_LogoPlacementCombo;
		at: 'IDC_LogoPlacementStatic' put: 5275;
		at: 5275 put: #IDC_LogoPlacementStatic;
		at: 'IDC_LogoSourceCombo' put: 5198;
		at: 5198 put: #IDC_LogoSourceCombo;
		at: 'IDC_LogoStatic' put: 5274;
		at: 5274 put: #IDC_LogoStatic;
		at: 'IDC_LogoThumbNail' put: 5199;
		at: 5199 put: #IDC_LogoThumbNail;
		at: 'IDC_LongDateCombo' put: 5295;
		at: 5295 put: #IDC_LongDateCombo;
		at: 'IDC_LowEdit' put: 5162;
		at: 5162 put: #IDC_LowEdit;
		at: 'IDC_MakeDefault' put: 5032;
		at: 5032 put: #IDC_MakeDefault;
		at: 'IDC_ModifyCheck' put: 5167;
		at: 5167 put: #IDC_ModifyCheck;
		at: 'IDC_ModuleListView' put: 5327;
		at: 5327 put: #IDC_ModuleListView;
		at: 'IDC_MoveDown' put: 5232;
		at: 5232 put: #IDC_MoveDown;
		at: 'IDC_MoveDownButton' put: 5292;
		at: 5292 put: #IDC_MoveDownButton;
		at: 'IDC_MoveUp' put: 5231;
		at: 5231 put: #IDC_MoveUp;
		at: 'IDC_MoveUpButton' put: 2457;
		at: 2457 put: #IDC_MoveUpButton;
		at: 'IDC_NameCombo' put: 6246;
		at: 6246 put: #IDC_NameCombo;
		at: 'IDC_NamedLicenseRadio' put: 5393;
		at: 5393 put: #IDC_NamedLicenseRadio;
		at: 'IDC_NameEdit' put: 5086;
		at: 5086 put: #IDC_NameEdit;
		at: 'IDC_NameStatic' put: 5174;
		at: 5174 put: #IDC_NameStatic;
		at: 'IDC_NextAvailableEdit' put: 503;
		at: 503 put: #IDC_NextAvailableEdit;
		at: 'IDC_NoGlobeCheck' put: 5374;
		at: 5374 put: #IDC_NoGlobeCheck;
		at: 'IDC_NoWatermarkRadio' put: 5188;
		at: 5188 put: #IDC_NoWatermarkRadio;
		at: 'IDC_ParticpateNoRadio' put: 5290;
		at: 5290 put: #IDC_ParticpateNoRadio;
		at: 'IDC_ParticpateYesRadio' put: 5289;
		at: 5289 put: #IDC_ParticpateYesRadio;
		at: 'IDC_PasswordEdit' put: 5166;
		at: 5166 put: #IDC_PasswordEdit;
		at: 'IDC_PathList' put: 5028;
		at: 5028 put: #IDC_PathList;
		at: 'IDC_PhotoPlacementCombo' put: 5193;
		at: 5193 put: #IDC_PhotoPlacementCombo;
		at: 'IDC_PhotoPlacementStatic' put: 5278;
		at: 5278 put: #IDC_PhotoPlacementStatic;
		at: 'IDC_PhotoSourceCombo' put: 5202;
		at: 5202 put: #IDC_PhotoSourceCombo;
		at: 'IDC_PhotoStatic' put: 5277;
		at: 5277 put: #IDC_PhotoStatic;
		at: 'IDC_PhotoThumbNail' put: 5201;
		at: 5201 put: #IDC_PhotoThumbNail;
		at: 'IDC_PolicyTypeCombo' put: 5383;
		at: 5383 put: #IDC_PolicyTypeCombo;
		at: 'IDC_PolicyTypeList' put: 511;
		at: 511 put: #IDC_PolicyTypeList;
		at: 'IDC_PolicyTypePlacementCombo' put: 5192;
		at: 5192 put: #IDC_PolicyTypePlacementCombo;
		at: 'IDC_PolicyTypePlacementStatic' put: 5281;
		at: 5281 put: #IDC_PolicyTypePlacementStatic;
		at: 'IDC_PolicyTypeSourceCombo' put: 5197;
		at: 5197 put: #IDC_PolicyTypeSourceCombo;
		at: 'IDC_PolicyTypeStatic' put: 5280;
		at: 5280 put: #IDC_PolicyTypeStatic;
		at: 'IDC_PolicyTypeThumbNail' put: 5200;
		at: 5200 put: #IDC_PolicyTypeThumbNail;
		at: 'IDC_PowerBIExample' put: 5442;
		at: 5442 put: #IDC_PowerBIExample;
		at: 'IDC_PrefixEdit' put: 5160;
		at: 5160 put: #IDC_PrefixEdit;
		at: 'IDC_PrintCheck' put: 5168;
		at: 5168 put: #IDC_PrintCheck;
		at: 'IDC_PrivacyPolicyLink' put: 5439;
		at: 5439 put: #IDC_PrivacyPolicyLink;
		at: 'IDC_QualityText' put: 5291;
		at: 5291 put: #IDC_QualityText;
		at: 'IDC_RateDecimalCountEdit' put: 5284;
		at: 5284 put: #IDC_RateDecimalCountEdit;
		at: 'IDC_RateDecimalCountSpin' put: 5285;
		at: 5285 put: #IDC_RateDecimalCountSpin;
		at: 'IDC_RatePlanCombo' put: 5411;
		at: 5411 put: #IDC_RatePlanCombo;
		at: 'IDC_RatingServiceCombo' put: 5417;
		at: 5417 put: #IDC_RatingServiceCombo;
		at: 'IDC_ReadCheck' put: 5165;
		at: 5165 put: #IDC_ReadCheck;
		at: 'IDC_Refresh' put: 5448;
		at: 5448 put: #IDC_Refresh;
		at: 'IDC_Reset' put: 5379;
		at: 5379 put: #IDC_Reset;
		at: 'IDC_ScheduleInitialLoad' put: 5438;
		at: 5438 put: #IDC_ScheduleInitialLoad;
		at: 'IDC_SelectAll' put: 5380;
		at: 5380 put: #IDC_SelectAll;
		at: 'IDC_SelectedColorStatic' put: 6243;
		at: 6243 put: #IDC_SelectedColorStatic;
		at: 'IDC_SendRecoveryEmail' put: 5447;
		at: 5447 put: #IDC_SendRecoveryEmail;
		at: 'IDC_SendVerifyEmail' put: 5446;
		at: 5446 put: #IDC_SendVerifyEmail;
		at: 'IDC_ServiceDescriptionLink' put: 5403;
		at: 5403 put: #IDC_ServiceDescriptionLink;
		at: 'IDC_SetDefaultPrintCopy' put: 5388;
		at: 5388 put: #IDC_SetDefaultPrintCopy;
		at: 'IDC_ShortDateCombo' put: 5296;
		at: 5296 put: #IDC_ShortDateCombo;
		at: 'IDC_ShouldTriggerDatabaseExternalEventsCheck' put: 5246;
		at: 5246 put: #IDC_ShouldTriggerDatabaseExternalEventsCheck;
		at: 'IDC_ShowBrokerageStatic' put: 5360;
		at: 5360 put: #IDC_ShowBrokerageStatic;
		at: 'IDC_ShowPasswordCheck' put: 5335;
		at: 5335 put: #IDC_ShowPasswordCheck;
		at: 'IDC_ShowSchedulePremiumsCheckbox' put: 5349;
		at: 5349 put: #IDC_ShowSchedulePremiumsCheckbox;
		at: 'IDC_SidebarColorThumbNail' put: 5206;
		at: 5206 put: #IDC_SidebarColorThumbNail;
		at: 'IDC_SideBarStatic' put: 5364;
		at: 5364 put: #IDC_SideBarStatic;
		at: 'IDC_SingleSignOnCheckName' put: 5324;
		at: 5324 put: #IDC_SingleSignOnCheckName;
		at: 'IDC_SplashPicture' put: 6248;
		at: 6248 put: #IDC_SplashPicture;
		at: 'IDC_StatusEdit' put: 5431;
		at: 5431 put: #IDC_StatusEdit;
		at: 'IDC_SuffixEdit' put: 5161;
		at: 5161 put: #IDC_SuffixEdit;
		at: 'IDC_SummaryStatic' put: 5414;
		at: 5414 put: #IDC_SummaryStatic;
		at: 'IDC_SYSLINK1' put: 5443;
		at: 5443 put: #IDC_SYSLINK1;
		at: 'IDC_TestAll' put: 5329;
		at: 5329 put: #IDC_TestAll;
		at: 'IDC_TestSelected' put: 5330;
		at: 5330 put: #IDC_TestSelected;
		at: 'IDC_ThresholdEdit' put: 504;
		at: 504 put: #IDC_ThresholdEdit;
		at: 'IDC_TitleText' put: 5134;
		at: 5134 put: #IDC_TitleText;
		at: 'IDC_TransactionCombo' put: 5376;
		at: 5376 put: #IDC_TransactionCombo;
		yourself.!
 
initItemIDsPwAdmin3: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDC_UpdatesOnly' put: 5386;
		at: 5386 put: #IDC_UpdatesOnly;
		at: 'IDC_UseCachedTransactionXMLCheck' put: 5248;
		at: 5248 put: #IDC_UseCachedTransactionXMLCheck;
		at: 'IDC_UseEmbeddedWebBrowserCheck' put: 5307;
		at: 5307 put: #IDC_UseEmbeddedWebBrowserCheck;
		at: 'IDC_UserDetailsTabControl' put: 5347;
		at: 5347 put: #IDC_UserDetailsTabControl;
		at: 'IDC_UsersCombo' put: 5240;
		at: 5240 put: #IDC_UsersCombo;
		at: 'IDC_VerEdit' put: 5245;
		at: 5245 put: #IDC_VerEdit;
		at: 'IDC_WarningStatic' put: 5366;
		at: 5366 put: #IDC_WarningStatic;
		at: 'IDC_WatermarkThumbNail' put: 5178;
		at: 5178 put: #IDC_WatermarkThumbNail;
		at: 'IDD_AdminOptionsDialogAttachmentsPage' put: 6167;
		at: 6167 put: #IDD_AdminOptionsDialogAttachmentsPage;
		at: 'IDD_AdminOptionsDialogAttachmentsPageFRC' put: 6198;
		at: 6198 put: #IDD_AdminOptionsDialogAttachmentsPageFRC;
		at: 'IDD_AdminOptionsDialogCommissionsPage' put: 6190;
		at: 6190 put: #IDD_AdminOptionsDialogCommissionsPage;
		at: 'IDD_AdminOptionsDialogCommissionsPageFRC' put: 6220;
		at: 6220 put: #IDD_AdminOptionsDialogCommissionsPageFRC;
		at: 'IDD_AdminOptionsDialogDataReplicationPage' put: 6278;
		at: 6278 put: #IDD_AdminOptionsDialogDataReplicationPage;
		at: 'IDD_AdminOptionsDialogDataReplicationPageFRC' put: 6283;
		at: 6283 put: #IDD_AdminOptionsDialogDataReplicationPageFRC;
		at: 'IDD_AdminOptionsDialogDateFormatsPage' put: 6193;
		at: 6193 put: #IDD_AdminOptionsDialogDateFormatsPage;
		at: 'IDD_AdminOptionsDialogDateFormatsPageFRC' put: 6222;
		at: 6222 put: #IDD_AdminOptionsDialogDateFormatsPageFRC;
		at: 'IDD_AdminOptionsDialogDefaultListItemsPage' put: 6170;
		at: 6170 put: #IDD_AdminOptionsDialogDefaultListItemsPage;
		at: 'IDD_AdminOptionsDialogDefaultListItemsPageFRC' put: 6199;
		at: 6199 put: #IDD_AdminOptionsDialogDefaultListItemsPageFRC;
		at: 'IDD_AdminOptionsDialogeElectronicPinkSlipsPage' put: 6275;
		at: 6275 put: #IDD_AdminOptionsDialogeElectronicPinkSlipsPage;
		at: 'IDD_AdminOptionsDialogeElectronicPinkSlipsPageFRC' put: 6276;
		at: 6276 put: #IDD_AdminOptionsDialogeElectronicPinkSlipsPageFRC;
		at: 'IDD_AdminOptionsDialogEndorsementRequestsPage' put: 6194;
		at: 6194 put: #IDD_AdminOptionsDialogEndorsementRequestsPage;
		at: 'IDD_AdminOptionsDialogEndorsementRequestsPageFRC' put: 6224;
		at: 6224 put: #IDD_AdminOptionsDialogEndorsementRequestsPageFRC;
		at: 'IDD_AdminOptionsDialogLanguagesPage' put: 6182;
		at: 6182 put: #IDD_AdminOptionsDialogLanguagesPage;
		at: 'IDD_AdminOptionsDialogLanguagesPageFRC' put: 6200;
		at: 6200 put: #IDD_AdminOptionsDialogLanguagesPageFRC;
		at: 'IDD_AdminOptionsDialogNotesPage' put: 6192;
		at: 6192 put: #IDD_AdminOptionsDialogNotesPage;
		at: 'IDD_AdminOptionsDialogNotesPageFRC' put: 6223;
		at: 6223 put: #IDD_AdminOptionsDialogNotesPageFRC;
		at: 'IDD_AdminOptionsDialogPremiumFinanceServicePage' put: 6269;
		at: 6269 put: #IDD_AdminOptionsDialogPremiumFinanceServicePage;
		at: 'IDD_AdminOptionsDialogPremiumFinanceServicePageFRC' put: 6270;
		at: 6270 put: #IDD_AdminOptionsDialogPremiumFinanceServicePageFRC;
		at: 'IDD_AdminOptionsDialogPrintPage' put: 6271;
		at: 6271 put: #IDD_AdminOptionsDialogPrintPage;
		at: 'IDD_AdminOptionsDialogPrintPageFRC' put: 6272;
		at: 6272 put: #IDD_AdminOptionsDialogPrintPageFRC;
		at: 'IDD_AdminOptionsDialogQualityPage' put: 6191;
		at: 6191 put: #IDD_AdminOptionsDialogQualityPage;
		at: 'IDD_AdminOptionsDialogQualityPageFRC' put: 6221;
		at: 6221 put: #IDD_AdminOptionsDialogQualityPageFRC;
		at: 'IDD_AdminOptionsDialogRatingPage' put: 6187;
		at: 6187 put: #IDD_AdminOptionsDialogRatingPage;
		at: 'IDD_AdminOptionsDialogRatingPageFRC' put: 6218;
		at: 6218 put: #IDD_AdminOptionsDialogRatingPageFRC;
		at: 'IDD_AdminOptionsDialogTableOfContentsDefaultsPage' put: 6260;
		at: 6260 put: #IDD_AdminOptionsDialogTableOfContentsDefaultsPage;
		at: 'IDD_AdminOptionsDialogTableOfContentsDefaultsPageFRC' put: 6268;
		at: 6268 put: #IDD_AdminOptionsDialogTableOfContentsDefaultsPageFRC;
		at: 'IDD_AdminOptionsDialogTransactionDatabasePage' put: 6181;
		at: 6181 put: #IDD_AdminOptionsDialogTransactionDatabasePage;
		at: 'IDD_AdminOptionsDialogTransactionDatabasePageFRC' put: 6201;
		at: 6201 put: #IDD_AdminOptionsDialogTransactionDatabasePageFRC;
		at: 'IDD_AdminOptionsDialogUpdateNotificationPage' put: 6178;
		at: 6178 put: #IDD_AdminOptionsDialogUpdateNotificationPage;
		at: 'IDD_AdminOptionsDialogUpdateNotificationPageFRC' put: 6202;
		at: 6202 put: #IDD_AdminOptionsDialogUpdateNotificationPageFRC;
		at: 'IDD_AdminOptionsDialogViewPage' put: 6226;
		at: 6226 put: #IDD_AdminOptionsDialogViewPage;
		at: 'IDD_AdminOptionsDialogViewPageFRC' put: 6249;
		at: 6249 put: #IDD_AdminOptionsDialogViewPageFRC;
		at: 'IDD_ArchiveTransactionsDialog' put: 6147;
		at: 6147 put: #IDD_ArchiveTransactionsDialog;
		at: 'IDD_ArchiveTransactionsDialogFRC' put: 6203;
		at: 6203 put: #IDD_ArchiveTransactionsDialogFRC;
		at: 'IDD_ArchiveWizardDestinationPage' put: 6150;
		at: 6150 put: #IDD_ArchiveWizardDestinationPage;
		at: 'IDD_ArchiveWizardDestinationPageFRC' put: 6204;
		at: 6204 put: #IDD_ArchiveWizardDestinationPageFRC;
		at: 'IDD_ArchiveWizardProgressPage' put: 6151;
		at: 6151 put: #IDD_ArchiveWizardProgressPage;
		at: 'IDD_ArchiveWizardProgressPageFRC' put: 6205;
		at: 6205 put: #IDD_ArchiveWizardProgressPageFRC;
		at: 'IDD_ArchiveWizardTransactionsPage' put: 6148;
		at: 6148 put: #IDD_ArchiveWizardTransactionsPage;
		at: 'IDD_ArchiveWizardTransactionsPageFRC' put: 6206;
		at: 6206 put: #IDD_ArchiveWizardTransactionsPageFRC;
		at: 'IDD_ArchiveWizardWelcomePage' put: 6152;
		at: 6152 put: #IDD_ArchiveWizardWelcomePage;
		at: 'IDD_ArchiveWizardWelcomePageFRC' put: 6207;
		at: 6207 put: #IDD_ArchiveWizardWelcomePageFRC;
		at: 'IDD_PolicyNoRangeDialog' put: 500;
		at: 500 put: #IDD_PolicyNoRangeDialog;
		at: 'IDD_PolicyNoRangeDialogFRC' put: 6208;
		at: 6208 put: #IDD_PolicyNoRangeDialogFRC;
		at: 'IDD_SplashScreen' put: 6188;
		at: 6188 put: #IDD_SplashScreen;
		at: 'IDD_SplashScreenFRC' put: 6219;
		at: 6219 put: #IDD_SplashScreenFRC;
		at: 'IDD_T4AnalyticsStatusPage' put: 6281;
		at: 6281 put: #IDD_T4AnalyticsStatusPage;
		at: 'IDD_T4AnalyticsStatusPageFRC' put: 6282;
		at: 6282 put: #IDD_T4AnalyticsStatusPageFRC;
		at: 'IDD_T4NoteCategoryDialog' put: 6247;
		at: 6247 put: #IDD_T4NoteCategoryDialog;
		at: 'IDD_T4NoteCategoryDialogFRC' put: 6254;
		at: 6254 put: #IDD_T4NoteCategoryDialogFRC;
		at: 'IDD_T4PremiumFinanceFirstBrokerageSettingsDialog' put: 6273;
		at: 6273 put: #IDD_T4PremiumFinanceFirstBrokerageSettingsDialog;
		at: 'IDD_T4PremiumFinanceFirstBrokerageSettingsDialogFRC' put: 6274;
		at: 6274 put: #IDD_T4PremiumFinanceFirstBrokerageSettingsDialogFRC;
		at: 'IDD_T4SiteDataBackupDialog' put: 6225;
		at: 6225 put: #IDD_T4SiteDataBackupDialog;
		at: 'IDD_T4ThemeDialogCoverPagePage' put: 6163;
		at: 6163 put: #IDD_T4ThemeDialogCoverPagePage;
		at: 'IDD_T4ThemeDialogCoverPagePageFRC' put: 6263;
		at: 6263 put: #IDD_T4ThemeDialogCoverPagePageFRC;
		at: 'IDD_T4ThemeDialogCustomCoverPagePane' put: 6262;
		at: 6262 put: #IDD_T4ThemeDialogCustomCoverPagePane;
		at: 'IDD_T4ThemeDialogCustomCoverPagePaneFRC' put: 6264;
		at: 6264 put: #IDD_T4ThemeDialogCustomCoverPagePaneFRC;
		at: 'IDD_T4ThemeDialogDefaultCoverPagePane' put: 6261;
		at: 6261 put: #IDD_T4ThemeDialogDefaultCoverPagePane;
		at: 'IDD_T4ThemeDialogDefaultCoverPagePaneFRC' put: 6265;
		at: 6265 put: #IDD_T4ThemeDialogDefaultCoverPagePaneFRC;
		at: 'IDD_T4ThemeDialogGeneralPage' put: 6160;
		at: 6160 put: #IDD_T4ThemeDialogGeneralPage;
		at: 'IDD_T4ThemeDialogGeneralPageFRC' put: 6266;
		at: 6266 put: #IDD_T4ThemeDialogGeneralPageFRC;
		at: 'IDD_T4ThemeDialogPageLayoutPage' put: 6255;
		at: 6255 put: #IDD_T4ThemeDialogPageLayoutPage;
		at: 'IDD_T4ThemeDialogPageLayoutPageFRC' put: 6267;
		at: 6267 put: #IDD_T4ThemeDialogPageLayoutPageFRC;
		at: 'IDD_T4UserDialogDetailsPage' put: 6258;
		at: 6258 put: #IDD_T4UserDialogDetailsPage;
		at: 'IDD_T4UserDialogDetailsPageFRC' put: 6259;
		at: 6259 put: #IDD_T4UserDialogDetailsPageFRC;
		at: 'IDD_T4UserDialogEMarketingPage' put: 6252;
		at: 6252 put: #IDD_T4UserDialogEMarketingPage;
		at: 'IDD_T4UserDialogEMarketingPageFRC' put: 6253;
		at: 6253 put: #IDD_T4UserDialogEMarketingPageFRC;
		at: 'IDD_T4UserDialogGeneralPage' put: 3900;
		at: 3900 put: #IDD_T4UserDialogGeneralPage;
		at: 'IDD_T4UserDialogGeneralPageFRC' put: 6251;
		at: 6251 put: #IDD_T4UserDialogGeneralPageFRC;
		at: 'IDD_T4UserDialogPermissionsPage' put: 6157;
		at: 6157 put: #IDD_T4UserDialogPermissionsPage;
		at: 'IDD_T4UserDialogPermissionsPageFRC' put: 6214;
		at: 6214 put: #IDD_T4UserDialogPermissionsPageFRC;
		at: 'IDD_T4UserDialogProductLinePermissionsPage' put: 6158;
		at: 6158 put: #IDD_T4UserDialogProductLinePermissionsPage;
		at: 'IDD_T4UserDialogProductLinePermissionsPageFRC' put: 6215;
		at: 6215 put: #IDD_T4UserDialogProductLinePermissionsPageFRC;
		at: 'IDD_T4UserSingleSignOnDialog' put: 102;
		at: 102 put: #IDD_T4UserSingleSignOnDialog;
		at: 'IDD_T4UserSingleSignOnDialogFRC' put: 6250;
		at: 6250 put: #IDD_T4UserSingleSignOnDialogFRC;
		at: 'IDI_AdminLogo' put: 6138;
		at: 6138 put: #IDI_AdminLogo;
		at: 'LowEdit' put: 501;
		at: 501 put: #LowEdit;
		at: 'OK' put: 1;
		at: 1 put: #OK;
		at: 'PrefixEdit' put: 505;
		at: 505 put: #PrefixEdit;
		at: 'SingleSignOnBox' put: 5322;
		at: 5322 put: #SingleSignOnBox;
		at: 'SuffixEdit' put: 506;
		at: 506 put: #SuffixEdit;
		at: 'UPNDescriptionStaticText' put: 5323;
		at: 5323 put: #UPNDescriptionStaticText;
		at: 'UPNEdit' put: 5316;
		at: 5316 put: #UPNEdit;
		at: 'UPNStaticText' put: 5317;
		at: 5317 put: #UPNStaticText;
		at: 'UserUPN' put: 5318;
		at: 5318 put: #UserUPN;
		yourself.!
 
initItemIDsPwMain
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	| dllDict |

	dllDict := self itemIDsByDLL at: 'PwMain' ifAbsent: [nil].
	dllDict ifNotNil: [^dllDict].

	dllDict := Dictionary new.
	self itemIDsByDLL at: 'PwMain' put: dllDict.
	self
		initItemIDsPwMain1: dllDict;
		initItemIDsPwMain2: dllDict;
		initItemIDsPwMain3: dllDict;
		initItemIDsPwMain4: dllDict;
		initItemIDsPwMain5: dllDict;
		initItemIDsPwMain6: dllDict;
		initItemIDsPwMain7: dllDict;
		initItemIDsPwMain8: dllDict;
		initItemIDsPwMain9: dllDict;
		initItemIDsPwMain10: dllDict;
		initItemIDsPwMain11: dllDict;
		initItemIDsPwMain12: dllDict;
		initItemIDsPwMain13: dllDict;
		initItemIDsPwMain14: dllDict;
		initItemIDsPwMain15: dllDict;
		initItemIDsPwMain16: dllDict;
		initItemIDsPwMain17: dllDict;
		yourself.
	^dllDict!

initItemIDsPwMain1: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'AddPropertyIcon' put: 33;
		at: 33 put: #AddPropertyIcon;
		at: 'AddRiskDialog' put: 20;
		at: 20 put: #AddRiskDialog;
		at: 'AddRiskDialogFRC' put: 16;
		at: 16 put: #AddRiskDialogFRC;
		at: 'AllRadio' put: 21;
		at: 21 put: #AllRadio;
		at: 'AreaCodeEdit' put: 40;
		at: 40 put: #AreaCodeEdit;
		at: 'Browse' put: 39;
		at: 39 put: #Browse;
		at: 'browseForLogoFile' put: 43;
		at: 43 put: #browseForLogoFile;
		at: 'browseForSignatureFile' put: 18;
		at: 18 put: #browseForSignatureFile;
		at: 'Cancel' put: 2;
		at: 2 put: #Cancel;
		at: 'CannotFindSitePrompt' put: 29;
		at: 29 put: #CannotFindSitePrompt;
		at: 'CannotFindSitePromptFRC' put: 45;
		at: 45 put: #CannotFindSitePromptFRC;
		at: 'CityEdit' put: 32;
		at: 32 put: #CityEdit;
		at: 'clearLogo' put: 26;
		at: 26 put: #clearLogo;
		at: 'clearSignature' put: 55;
		at: 55 put: #clearSignature;
		at: 'CopiesEdit' put: 63;
		at: 63 put: #CopiesEdit;
		at: 'CountryEdit' put: 64;
		at: 64 put: #CountryEdit;
		at: 'Create' put: 49;
		at: 49 put: #Create;
		at: 'CreateSiteFilesDialog' put: 38;
		at: 38 put: #CreateSiteFilesDialog;
		at: 'CreateSiteFilesDialogFRC' put: 51;
		at: 51 put: #CreateSiteFilesDialogFRC;
		at: 'DoTasks' put: 59;
		at: 59 put: #DoTasks;
		at: 'EffectiveText' put: 15;
		at: 15 put: #EffectiveText;
		at: 'EnableSystemSoundsCheckBox' put: 35;
		at: 35 put: #EnableSystemSoundsCheckBox;
		at: 'Exit' put: 12;
		at: 12 put: #Exit;
		at: 'FromText' put: 17;
		at: 17 put: #FromText;
		at: 'FromWord' put: 27;
		at: 27 put: #FromWord;
		at: 'IDB_AttachmentPreview' put: 5019;
		at: 5019 put: #IDB_AttachmentPreview;
		at: 'IDB_AttachmentPreviewFR' put: 5025;
		at: 5025 put: #IDB_AttachmentPreviewFR;
		at: 'IDB_Calculator' put: 6073;
		at: 6073 put: #IDB_Calculator;
		at: 'IDB_Calendar' put: 5014;
		at: 5014 put: #IDB_Calendar;
		at: 'IDB_CompanyLogo' put: 5016;
		at: 5016 put: #IDB_CompanyLogo;
		at: 'IDB_CompanySignature' put: 5017;
		at: 5017 put: #IDB_CompanySignature;
		at: 'IDB_CompanyWatermark' put: 5020;
		at: 5020 put: #IDB_CompanyWatermark;
		at: 'IDB_eMarketingWizardAviva' put: 5004;
		at: 5004 put: #IDB_eMarketingWizardAviva;
		at: 'IDB_eMarketingWizardAvivaFRC' put: 5009;
		at: 5009 put: #IDB_eMarketingWizardAvivaFRC;
		at: 'IDB_eMarketingWizardAXA' put: 5030;
		at: 5030 put: #IDB_eMarketingWizardAXA;
		at: 'IDB_eMarketingWizardAXAFRC' put: 5031;
		at: 5031 put: #IDB_eMarketingWizardAXAFRC;
		at: 'IDB_eMarketingWizardCNS' put: 6047;
		at: 6047 put: #IDB_eMarketingWizardCNS;
		at: 'IDB_eMarketingWizardCoachman' put: 5034;
		at: 5034 put: #IDB_eMarketingWizardCoachman;
		at: 'IDB_eMarketingWizardCoachmanFRC' put: 5035;
		at: 5035 put: #IDB_eMarketingWizardCoachmanFRC;
		at: 'IDB_eMarketingWizardDemo' put: 5008;
		at: 5008 put: #IDB_eMarketingWizardDemo;
		at: 'IDB_eMarketingWizardDemoFRC' put: 5010;
		at: 5010 put: #IDB_eMarketingWizardDemoFRC;
		at: 'IDB_eMarketingWizardDominion' put: 5041;
		at: 5041 put: #IDB_eMarketingWizardDominion;
		at: 'IDB_eMarketingWizardDominionFRC' put: 5042;
		at: 5042 put: #IDB_eMarketingWizardDominionFRC;
		at: 'IDB_eMarketingWizardError' put: 5040;
		at: 5040 put: #IDB_eMarketingWizardError;
		at: 'IDB_eMarketingWizardICPEI' put: 5036;
		at: 5036 put: #IDB_eMarketingWizardICPEI;
		at: 'IDB_eMarketingWizardICPEIFRC' put: 5037;
		at: 5037 put: #IDB_eMarketingWizardICPEIFRC;
		at: 'IDB_eMarketingWizardING' put: 5006;
		at: 5006 put: #IDB_eMarketingWizardING;
		at: 'IDB_eMarketingWizardINGFRC' put: 5012;
		at: 5012 put: #IDB_eMarketingWizardINGFRC;
		at: 'IDB_eMarketingWizardLUnique' put: 5023;
		at: 5023 put: #IDB_eMarketingWizardLUnique;
		at: 'IDB_eMarketingWizardLUniqueFRC' put: 5024;
		at: 5024 put: #IDB_eMarketingWizardLUniqueFRC;
		at: 'IDB_eMarketingWizardMissisquoi' put: 5028;
		at: 5028 put: #IDB_eMarketingWizardMissisquoi;
		at: 'IDB_eMarketingWizardMissisquoiFRC' put: 5029;
		at: 5029 put: #IDB_eMarketingWizardMissisquoiFRC;
		at: 'IDB_eMarketingWizardRedRiver' put: 6061;
		at: 6061 put: #IDB_eMarketingWizardRedRiver;
		at: 'IDB_eMarketingWizardRedRiverFRC' put: 6062;
		at: 6062 put: #IDB_eMarketingWizardRedRiverFRC;
		at: 'IDB_eMarketingWizardRSA' put: 6046;
		at: 6046 put: #IDB_eMarketingWizardRSA;
		at: 'IDB_eMarketingWizardSgi' put: 5032;
		at: 5032 put: #IDB_eMarketingWizardSgi;
		at: 'IDB_eMarketingWizardSgiFRC' put: 5033;
		at: 5033 put: #IDB_eMarketingWizardSgiFRC;
		at: 'IDB_eMarketingWizardTeig' put: 5026;
		at: 5026 put: #IDB_eMarketingWizardTeig;
		at: 'IDB_eMarketingWizardTeigFRC' put: 5027;
		at: 5027 put: #IDB_eMarketingWizardTeigFRC;
		at: 'IDB_eMarketingWizardUC' put: 5038;
		at: 5038 put: #IDB_eMarketingWizardUC;
		at: 'IDB_eMarketingWizardUCFRC' put: 5039;
		at: 5039 put: #IDB_eMarketingWizardUCFRC;
		at: 'IDB_Exclamation' put: 5000;
		at: 5000 put: #IDB_Exclamation;
		at: 'IDB_First' put: 6071;
		at: 6071 put: #IDB_First;
		at: 'IDB_FirstFrench' put: 6072;
		at: 6072 put: #IDB_FirstFrench;
		at: 'IDB_IICC' put: 5018;
		at: 5018 put: #IDB_IICC;
		at: 'IDB_MyProofOfInsuranceLogo' put: 6095;
		at: 6095 put: #IDB_MyProofOfInsuranceLogo;
		at: 'IDB_MyProofOfInsuranceLogoFRC' put: 6094;
		at: 6094 put: #IDB_MyProofOfInsuranceLogoFRC;
		at: 'IDB_PolicyWorks' put: 5015;
		at: 5015 put: #IDB_PolicyWorks;
		at: 'IDB_PolicyWorksFRC' put: 5002;
		at: 5002 put: #IDB_PolicyWorksFRC;
		at: 'IDB_SortAscending' put: 6044;
		at: 6044 put: #IDB_SortAscending;
		at: 'IDB_SortDescending' put: 6045;
		at: 6045 put: #IDB_SortDescending;
		at: 'IDB_StartupBitmap' put: 5001;
		at: 5001 put: #IDB_StartupBitmap;
		at: 'IDB_StartupBitmapFRC' put: 5003;
		at: 5003 put: #IDB_StartupBitmapFRC;
		at: 'IDB_ThirdPartyLDPi' put: 2096;
		at: 2096 put: #IDB_ThirdPartyLDPi;
		at: 'IDB_ViewContract' put: 5022;
		at: 5022 put: #IDB_ViewContract;
		at: 'IDB_ViewExpand' put: 5021;
		at: 5021 put: #IDB_ViewExpand;
		at: 'IDC_AccidentLimitEdit' put: 1727;
		at: 1727 put: #IDC_AccidentLimitEdit;
		at: 'IDC_AccountCombo' put: 2009;
		at: 2009 put: #IDC_AccountCombo;
		at: 'IDC_AccountNoEdit' put: 1397;
		at: 1397 put: #IDC_AccountNoEdit;
		at: 'IDC_AccountNumberEdit' put: 1519;
		at: 1519 put: #IDC_AccountNumberEdit;
		at: 'IDC_AccountNumberLabel' put: 1809;
		at: 1809 put: #IDC_AccountNumberLabel;
		at: 'IDC_AccountNumberText' put: 1110;
		at: 1110 put: #IDC_AccountNumberText;
		at: 'IDC_AccurateRadio' put: 1041;
		at: 1041 put: #IDC_AccurateRadio;
		at: 'IDC_ActualCashValueCheckbox' put: 1941;
		at: 1941 put: #IDC_ActualCashValueCheckbox;
		at: 'IDC_Add' put: 1517;
		at: 1517 put: #IDC_Add;
		at: 'IDC_AddButton' put: 1207;
		at: 1207 put: #IDC_AddButton;
		at: 'IDC_AddFolder' put: 1569;
		at: 1569 put: #IDC_AddFolder;
		at: 'IDC_AdditionalInfoEdit' put: 1289;
		at: 1289 put: #IDC_AdditionalInfoEdit;
		at: 'IDC_AdditionalInsuredCheck' put: 1758;
		at: 1758 put: #IDC_AdditionalInsuredCheck;
		at: 'IDC_AddressCombo' put: 2104;
		at: 2104 put: #IDC_AddressCombo;
		at: 'IDC_AddressPanesTab' put: 1026;
		at: 1026 put: #IDC_AddressPanesTab;
		at: 'IDC_AddressTypeCombo' put: 1445;
		at: 1445 put: #IDC_AddressTypeCombo;
		at: 'IDC_AddressTypeGroupBox' put: 1032;
		at: 1032 put: #IDC_AddressTypeGroupBox;
		at: 'IDC_Adjust' put: 1899;
		at: 1899 put: #IDC_Adjust;
		at: 'IDC_Advanced' put: 1236;
		at: 1236 put: #IDC_Advanced;
		at: 'IDC_AgencyBillOption' put: 1547;
		at: 1547 put: #IDC_AgencyBillOption;
		at: 'IDC_AggregateDeductibleEdit' put: 1326;
		at: 1326 put: #IDC_AggregateDeductibleEdit;
		at: 'IDC_AggregateLimitEdit' put: 1121;
		at: 1121 put: #IDC_AggregateLimitEdit;
		at: 'IDC_AllLocationsRadio' put: 1552;
		at: 1552 put: #IDC_AllLocationsRadio;
		at: 'IDC_Allocate' put: 1422;
		at: 1422 put: #IDC_Allocate;
		at: 'IDC_AllOwnedCheckbox' put: 1008;
		at: 1008 put: #IDC_AllOwnedCheckbox;
		yourself.!
  
initItemIDsPwMain10: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDC_RestoreDefaults' put: 1195;
		at: 1195 put: #IDC_RestoreDefaults;
		at: 'IDC_ResultsList' put: 1969;
		at: 1969 put: #IDC_ResultsList;
		at: 'IDC_RetailPostalOutletCheck' put: 1366;
		at: 1366 put: #IDC_RetailPostalOutletCheck;
		at: 'IDC_RetentionCheckbox' put: 1716;
		at: 1716 put: #IDC_RetentionCheckbox;
		at: 'IDC_RetroactiveDateEdit' put: 1579;
		at: 1579 put: #IDC_RetroactiveDateEdit;
		at: 'IDC_RetroactiveDateEditCalendar' put: 1358;
		at: 1358 put: #IDC_RetroactiveDateEditCalendar;
		at: 'IDC_RevisionNumberEdit' put: 1761;
		at: 1761 put: #IDC_RevisionNumberEdit;
		at: 'IDC_RevisionNumberStatic' put: 1763;
		at: 1763 put: #IDC_RevisionNumberStatic;
		at: 'IDC_RiskCombo' put: 1198;
		at: 1198 put: #IDC_RiskCombo;
		at: 'IDC_RiskImage' put: 1353;
		at: 1353 put: #IDC_RiskImage;
		at: 'IDC_RisksCombo' put: 1408;
		at: 1408 put: #IDC_RisksCombo;
		at: 'IDC_RiskStatic' put: 1259;
		at: 1259 put: #IDC_RiskStatic;
		at: 'IDC_RiskTypeCombo' put: 1452;
		at: 1452 put: #IDC_RiskTypeCombo;
		at: 'IDC_RiskTypeRadio' put: 1456;
		at: 1456 put: #IDC_RiskTypeRadio;
		at: 'IDC_RouteEdit' put: 1525;
		at: 1525 put: #IDC_RouteEdit;
		at: 'IDC_RRIdentifierCombo' put: 1595;
		at: 1595 put: #IDC_RRIdentifierCombo;
		at: 'IDC_RTFRadio' put: 1335;
		at: 1335 put: #IDC_RTFRadio;
		at: 'IDC_SalutationCombo' put: 1143;
		at: 1143 put: #IDC_SalutationCombo;
		at: 'IDC_SalutationEdit' put: 1556;
		at: 1556 put: #IDC_SalutationEdit;
		at: 'IDC_SameRadio' put: 1571;
		at: 1571 put: #IDC_SameRadio;
		at: 'IDC_SaveAs' put: 1187;
		at: 1187 put: #IDC_SaveAs;
		at: 'IDC_SaveAsDefault' put: 1282;
		at: 1282 put: #IDC_SaveAsDefault;
		at: 'IDC_SaveAsDefaultButton' put: 1504;
		at: 1504 put: #IDC_SaveAsDefaultButton;
		at: 'IDC_SaveAsDefaultLossPayeeStatement' put: 1375;
		at: 1375 put: #IDC_SaveAsDefaultLossPayeeStatement;
		at: 'IDC_SaveAsDefaultMortgageeStatement' put: 1138;
		at: 1138 put: #IDC_SaveAsDefaultMortgageeStatement;
		at: 'IDC_SavedEdit' put: 1252;
		at: 1252 put: #IDC_SavedEdit;
		at: 'IDC_SaveMemoAsDefaultCheck' put: 1867;
		at: 1867 put: #IDC_SaveMemoAsDefaultCheck;
		at: 'IDC_SchedDiscountEdit' put: 1018;
		at: 1018 put: #IDC_SchedDiscountEdit;
		at: 'IDC_SchedDiscountText' put: 1324;
		at: 1324 put: #IDC_SchedDiscountText;
		at: 'IDC_SchedPremiumEdit' put: 1584;
		at: 1584 put: #IDC_SchedPremiumEdit;
		at: 'IDC_SchedPremiumText' put: 1593;
		at: 1593 put: #IDC_SchedPremiumText;
		at: 'IDC_ScheduleCombo' put: 1068;
		at: 1068 put: #IDC_ScheduleCombo;
		at: 'IDC_ScheduledCheckbox' put: 1709;
		at: 1709 put: #IDC_ScheduledCheckbox;
		at: 'IDC_ScheduleDiscountsList' put: 1460;
		at: 1460 put: #IDC_ScheduleDiscountsList;
		at: 'IDC_ScheduledTaskList' put: 2151;
		at: 2151 put: #IDC_ScheduledTaskList;
		at: 'IDC_ScheduleEdit' put: 1013;
		at: 1013 put: #IDC_ScheduleEdit;
		at: 'IDC_ScheduleGroup' put: 1426;
		at: 1426 put: #IDC_ScheduleGroup;
		at: 'IDC_ScheduleSettingsList' put: 1402;
		at: 1402 put: #IDC_ScheduleSettingsList;
		at: 'IDC_ScheduleTask' put: 2152;
		at: 2152 put: #IDC_ScheduleTask;
		at: 'IDC_Search' put: 1421;
		at: 1421 put: #IDC_Search;
		at: 'IDC_SearchButton' put: 1296;
		at: 1296 put: #IDC_SearchButton;
		at: 'IDC_SearchCombo' put: 1240;
		at: 1240 put: #IDC_SearchCombo;
		at: 'IDC_SearchEdit' put: 1566;
		at: 1566 put: #IDC_SearchEdit;
		at: 'IDC_SectionCombo' put: 1331;
		at: 1331 put: #IDC_SectionCombo;
		at: 'IDC_SectionLabel' put: 1116;
		at: 1116 put: #IDC_SectionLabel;
		at: 'IDC_Select' put: 1176;
		at: 1176 put: #IDC_Select;
		at: 'IDC_SelectAll' put: 1136;
		at: 1136 put: #IDC_SelectAll;
		at: 'IDC_SelectButton' put: 1064;
		at: 1064 put: #IDC_SelectButton;
		at: 'IDC_SelectContract' put: 1797;
		at: 1797 put: #IDC_SelectContract;
		at: 'IDC_SelectCopyFrom' put: 1819;
		at: 1819 put: #IDC_SelectCopyFrom;
		at: 'IDC_SelectedColumnsLabel' put: 1903;
		at: 1903 put: #IDC_SelectedColumnsLabel;
		at: 'IDC_SelectedList' put: 1888;
		at: 1888 put: #IDC_SelectedList;
		at: 'IDC_SelectedListView' put: 1021;
		at: 1021 put: #IDC_SelectedListView;
		at: 'IDC_SelectEndorsementRequests' put: 1882;
		at: 1882 put: #IDC_SelectEndorsementRequests;
		at: 'IDC_SelectInsurer' put: 1798;
		at: 1798 put: #IDC_SelectInsurer;
		at: 'IDC_SelectPolicy' put: 1874;
		at: 1874 put: #IDC_SelectPolicy;
		at: 'IDC_SelectTransaction' put: 1876;
		at: 1876 put: #IDC_SelectTransaction;
		at: 'IDC_SelectVehicles' put: 6085;
		at: 6085 put: #IDC_SelectVehicles;
		at: 'IDC_SelectVehiclesRadio' put: 6083;
		at: 6083 put: #IDC_SelectVehiclesRadio;
		at: 'IDC_Send' put: 1597;
		at: 1597 put: #IDC_Send;
		at: 'IDC_SendEMail' put: 1291;
		at: 1291 put: #IDC_SendEMail;
		at: 'IDC_SendRecipDisplayNameCheck' put: 1285;
		at: 1285 put: #IDC_SendRecipDisplayNameCheck;
		at: 'IDC_SendWalletAndPDFRadio' put: 2101;
		at: 2101 put: #IDC_SendWalletAndPDFRadio;
		at: 'IDC_SendWalletRadio' put: 2100;
		at: 2100 put: #IDC_SendWalletRadio;
		at: 'IDC_SeparateInsuranceScheduleRadio' put: 1496;
		at: 1496 put: #IDC_SeparateInsuranceScheduleRadio;
		at: 'IDC_SetAllDateFormats' put: 1908;
		at: 1908 put: #IDC_SetAllDateFormats;
		at: 'IDC_SetDefaults' put: 1305;
		at: 1305 put: #IDC_SetDefaults;
		at: 'IDC_SettingNameCombo' put: 2042;
		at: 2042 put: #IDC_SettingNameCombo;
		at: 'IDC_SetupAccount' put: 1802;
		at: 1802 put: #IDC_SetupAccount;
		at: 'IDC_SetupPrinter' put: 1838;
		at: 1838 put: #IDC_SetupPrinter;
		at: 'IDC_SetViewStyle' put: 1815;
		at: 1815 put: #IDC_SetViewStyle;
		at: 'IDC_SewerBackupCheckbox' put: 1691;
		at: 1691 put: #IDC_SewerBackupCheckbox;
		at: 'IDC_SewerBackupDeductibleEdit' put: 1693;
		at: 1693 put: #IDC_SewerBackupDeductibleEdit;
		at: 'IDC_SewerBackupLimitEdit' put: 1440;
		at: 1440 put: #IDC_SewerBackupLimitEdit;
		at: 'IDC_ShortFormEdit' put: 1410;
		at: 1410 put: #IDC_ShortFormEdit;
		at: 'IDC_ShowImagesInListsCheckBox' put: 1482;
		at: 1482 put: #IDC_ShowImagesInListsCheckBox;
		at: 'IDC_ShowImagesOnMenusCheckBox' put: 1148;
		at: 1148 put: #IDC_ShowImagesOnMenusCheckBox;
		at: 'IDC_ShowImagesOnTabsCheckBox' put: 1150;
		at: 1150 put: #IDC_ShowImagesOnTabsCheckBox;
		at: 'IDC_ShowPasswordCheck' put: 1793;
		at: 1793 put: #IDC_ShowPasswordCheck;
		at: 'IDC_SignatureCombo' put: 1834;
		at: 1834 put: #IDC_SignatureCombo;
		at: 'IDC_SignatureEdit' put: 1354;
		at: 1354 put: #IDC_SignatureEdit;
		at: 'IDC_SignatureThumbNail' put: 1399;
		at: 1399 put: #IDC_SignatureThumbNail;
		at: 'IDC_SingleEmailRadio' put: 1835;
		at: 1835 put: #IDC_SingleEmailRadio;
		at: 'IDC_SitePathCombo' put: 2113;
		at: 2113 put: #IDC_SitePathCombo;
		at: 'IDC_SiteText' put: 1465;
		at: 1465 put: #IDC_SiteText;
		at: 'IDC_SizeEdit' put: 1394;
		at: 1394 put: #IDC_SizeEdit;
		at: 'IDC_SOICheck' put: 1817;
		at: 1817 put: #IDC_SOICheck;
		at: 'IDC_SOIFlatChargeEdit' put: 999;
		at: 999 put: #IDC_SOIFlatChargeEdit;
		at: 'IDC_SOIIcon' put: 1818;
		at: 1818 put: #IDC_SOIIcon;
		at: 'IDC_SOIPremiumEdit' put: 998;
		at: 998 put: #IDC_SOIPremiumEdit;
		at: 'IDC_SOITotalEdit' put: 997;
		at: 997 put: #IDC_SOITotalEdit;
		at: 'IDC_SoundCheckBox' put: 1676;
		at: 1676 put: #IDC_SoundCheckBox;
		at: 'IDC_SourceGUIDEdit' put: 1526;
		at: 1526 put: #IDC_SourceGUIDEdit;
		at: 'IDC_SourceNameEdit' put: 1247;
		at: 1247 put: #IDC_SourceNameEdit;
		at: 'IDC_SpecialCircumstancesEdit' put: 1475;
		at: 1475 put: #IDC_SpecialCircumstancesEdit;
		at: 'IDC_SpecialFrameNotesText' put: 1170;
		at: 1170 put: #IDC_SpecialFrameNotesText;
		at: 'IDC_SpecialInstructionsEdit' put: 1864;
		at: 1864 put: #IDC_SpecialInstructionsEdit;
		at: 'IDC_SpecificTransactionsRadio' put: 1184;
		at: 1184 put: #IDC_SpecificTransactionsRadio;
		at: 'IDC_SplashPicture' put: 1490;
		at: 1490 put: #IDC_SplashPicture;
		at: 'IDC_SSNEdit' put: 1319;
		at: 1319 put: #IDC_SSNEdit;
		at: 'IDC_StandardRadio' put: 1537;
		at: 1537 put: #IDC_StandardRadio;
		yourself.!
   
initItemIDsPwMain11: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDC_StartDateEdit' put: 1591;
		at: 1591 put: #IDC_StartDateEdit;
		at: 'IDC_StartDateEditCalendar' put: 1645;
		at: 1645 put: #IDC_StartDateEditCalendar;
		at: 'IDC_StartDatePicker' put: 2142;
		at: 2142 put: #IDC_StartDatePicker;
		at: 'IDC_StartingTransactionCombo' put: 1558;
		at: 1558 put: #IDC_StartingTransactionCombo;
		at: 'IDC_StartingTransactionLabel' put: 1810;
		at: 1810 put: #IDC_StartingTransactionLabel;
		at: 'IDC_StartPageEdit' put: 1234;
		at: 1234 put: #IDC_StartPageEdit;
		at: 'IDC_StartSectionsOnNewCheck' put: 1730;
		at: 1730 put: #IDC_StartSectionsOnNewCheck;
		at: 'IDC_StartTimePicker' put: 2143;
		at: 2143 put: #IDC_StartTimePicker;
		at: 'IDC_StatedAmountCheckbox' put: 1917;
		at: 1917 put: #IDC_StatedAmountCheckbox;
		at: 'IDC_StatementEdit' put: 1074;
		at: 1074 put: #IDC_StatementEdit;
		at: 'IDC_StateNumberEdit' put: 1765;
		at: 1765 put: #IDC_StateNumberEdit;
		at: 'IDC_STATIC10' put: 1414;
		at: 1414 put: #IDC_STATIC10;
		at: 'IDC_STATIC11' put: 1528;
		at: 1528 put: #IDC_STATIC11;
		at: 'IDC_STATIC12' put: 1665;
		at: 1665 put: #IDC_STATIC12;
		at: 'IDC_STATIC14' put: 1250;
		at: 1250 put: #IDC_STATIC14;
		at: 'IDC_STATIC15' put: 1400;
		at: 1400 put: #IDC_STATIC15;
		at: 'IDC_STATIC16' put: 1523;
		at: 1523 put: #IDC_STATIC16;
		at: 'IDC_STATIC2' put: 1019;
		at: 1019 put: #IDC_STATIC2;
		at: 'IDC_STATIC3' put: 1655;
		at: 1655 put: #IDC_STATIC3;
		at: 'IDC_STATIC4' put: 1602;
		at: 1602 put: #IDC_STATIC4;
		at: 'IDC_STATIC9' put: 1346;
		at: 1346 put: #IDC_STATIC9;
		at: 'IDC_StationEdit' put: 1436;
		at: 1436 put: #IDC_StationEdit;
		at: 'IDC_StatusCombo' put: 1278;
		at: 1278 put: #IDC_StatusCombo;
		at: 'IDC_StatusIcon' put: 1813;
		at: 1813 put: #IDC_StatusIcon;
		at: 'IDC_StatusStatic' put: 2071;
		at: 2071 put: #IDC_StatusStatic;
		at: 'IDC_StatutoryCheckbox' put: 1726;
		at: 1726 put: #IDC_StatutoryCheckbox;
		at: 'IDC_StockACvCheckbox' put: 1633;
		at: 1633 put: #IDC_StockACvCheckbox;
		at: 'IDC_StockCheckbox' put: 1927;
		at: 1927 put: #IDC_StockCheckbox;
		at: 'IDC_StockDeductibleEdit' put: 1928;
		at: 1928 put: #IDC_StockDeductibleEdit;
		at: 'IDC_StockLimitEdit' put: 1929;
		at: 1929 put: #IDC_StockLimitEdit;
		at: 'IDC_StockRCCheckbox' put: 1617;
		at: 1617 put: #IDC_StockRCCheckbox;
		at: 'IDC_StreetDirectionCombo' put: 1539;
		at: 1539 put: #IDC_StreetDirectionCombo;
		at: 'IDC_StreetEdit' put: 1541;
		at: 1541 put: #IDC_StreetEdit;
		at: 'IDC_StreetNameEdit' put: 1464;
		at: 1464 put: #IDC_StreetNameEdit;
		at: 'IDC_StreetTypeCombo' put: 1280;
		at: 1280 put: #IDC_StreetTypeCombo;
		at: 'IDC_SubbrokerageCombo' put: 1137;
		at: 1137 put: #IDC_SubbrokerageCombo;
		at: 'IDC_SubbrokerageExclamation' put: 1455;
		at: 1455 put: #IDC_SubbrokerageExclamation;
		at: 'IDC_SubBrokerageGroup' put: 1210;
		at: 1210 put: #IDC_SubBrokerageGroup;
		at: 'IDC_SubjectEdit' put: 1507;
		at: 1507 put: #IDC_SubjectEdit;
		at: 'IDC_SubmissionCheck' put: 1081;
		at: 1081 put: #IDC_SubmissionCheck;
		at: 'IDC_SubrogationWaivedCheck' put: 1759;
		at: 1759 put: #IDC_SubrogationWaivedCheck;
		at: 'IDC_SubscriberCommissionEdit' put: 1657;
		at: 1657 put: #IDC_SubscriberCommissionEdit;
		at: 'IDC_SubscriberCommissionStatic' put: 1242;
		at: 1242 put: #IDC_SubscriberCommissionStatic;
		at: 'IDC_SubscriberEdit' put: 1581;
		at: 1581 put: #IDC_SubscriberEdit;
		at: 'IDC_SubscriberExclamation' put: 1438;
		at: 1438 put: #IDC_SubscriberExclamation;
		at: 'IDC_SubscriberPropertiesButton' put: 1498;
		at: 1498 put: #IDC_SubscriberPropertiesButton;
		at: 'IDC_SubscribersList' put: 6039;
		at: 6039 put: #IDC_SubscribersList;
		at: 'IDC_SubscriberStatic' put: 1303;
		at: 1303 put: #IDC_SubscriberStatic;
		at: 'IDC_SubscriberUseDefaultButton' put: 1228;
		at: 1228 put: #IDC_SubscriberUseDefaultButton;
		at: 'IDC_SubscriptionStatic' put: 1165;
		at: 1165 put: #IDC_SubscriptionStatic;
		at: 'IDC_SummaryRichEdit' put: 2048;
		at: 2048 put: #IDC_SummaryRichEdit;
		at: 'IDC_SurveyFamilyCombo' put: 1599;
		at: 1599 put: #IDC_SurveyFamilyCombo;
		at: 'IDC_SurveyOnlyRadio' put: 1347;
		at: 1347 put: #IDC_SurveyOnlyRadio;
		at: 'IDC_TAMConfirmationCheck' put: 1574;
		at: 1574 put: #IDC_TAMConfirmationCheck;
		at: 'IDC_TAMIcon' put: 1647;
		at: 1647 put: #IDC_TAMIcon;
		at: 'IDC_TaskCombo' put: 2137;
		at: 2137 put: #IDC_TaskCombo;
		at: 'IDC_TaxesCombo' put: 2074;
		at: 2074 put: #IDC_TaxesCombo;
		at: 'IDC_TaxExemptCombo' put: 1194;
		at: 1194 put: #IDC_TaxExemptCombo;
		at: 'IDC_TaxExemptText' put: 1208;
		at: 1208 put: #IDC_TaxExemptText;
		at: 'IDC_TemplateBitmap' put: 1659;
		at: 1659 put: #IDC_TemplateBitmap;
		at: 'IDC_TemplateCombo' put: 1775;
		at: 1775 put: #IDC_TemplateCombo;
		at: 'IDC_TemplateList' put: 1057;
		at: 1057 put: #IDC_TemplateList;
		at: 'IDC_TemplateTab' put: 1130;
		at: 1130 put: #IDC_TemplateTab;
		at: 'IDC_TenantsCheckbox' put: 1323;
		at: 1323 put: #IDC_TenantsCheckbox;
		at: 'IDC_TenantsDeductibleEdit' put: 1386;
		at: 1386 put: #IDC_TenantsDeductibleEdit;
		at: 'IDC_TenantsLimitEdit' put: 1204;
		at: 1204 put: #IDC_TenantsLimitEdit;
		at: 'IDC_TermFromEdit' put: 2088;
		at: 2088 put: #IDC_TermFromEdit;
		at: 'IDC_TerminatedCombo' put: 1159;
		at: 1159 put: #IDC_TerminatedCombo;
		at: 'IDC_TermLengthEdit' put: 2090;
		at: 2090 put: #IDC_TermLengthEdit;
		at: 'IDC_TermPremiumEdit' put: 2094;
		at: 2094 put: #IDC_TermPremiumEdit;
		at: 'IDC_TermPremiumLabel' put: 2095;
		at: 2095 put: #IDC_TermPremiumLabel;
		at: 'IDC_TermToEdit' put: 2089;
		at: 2089 put: #IDC_TermToEdit;
		at: 'IDC_Test' put: 1795;
		at: 1795 put: #IDC_Test;
		at: 'IDC_TestAll' put: 1784;
		at: 1784 put: #IDC_TestAll;
		at: 'IDC_TestSelected' put: 1794;
		at: 1794 put: #IDC_TestSelected;
		at: 'IDC_TextSizeCombo' put: 1868;
		at: 1868 put: #IDC_TextSizeCombo;
		at: 'IDC_Thumbnail' put: 1499;
		at: 1499 put: #IDC_Thumbnail;
		at: 'IDC_TitleStatic' put: 1205;
		at: 1205 put: #IDC_TitleStatic;
		at: 'IDC_TitleText' put: 1363;
		at: 1363 put: #IDC_TitleText;
		at: 'IDC_ToEdit' put: 6081;
		at: 6081 put: #IDC_ToEdit;
		at: 'IDC_ToEditCalendar' put: 6082;
		at: 6082 put: #IDC_ToEditCalendar;
		at: 'IDC_ToLetter' put: 1039;
		at: 1039 put: #IDC_ToLetter;
		at: 'IDC_ToolbarLabelsCombo' put: 1731;
		at: 1731 put: #IDC_ToolbarLabelsCombo;
		at: 'IDC_ToolbarLabelsText' put: 1732;
		at: 1732 put: #IDC_ToolbarLabelsText;
		at: 'IDC_TownshipCombo' put: 1545;
		at: 1545 put: #IDC_TownshipCombo;
		at: 'IDC_TownshipEdit' put: 1501;
		at: 1501 put: #IDC_TownshipEdit;
		at: 'IDC_TownshipLabel' put: 1398;
		at: 1398 put: #IDC_TownshipLabel;
		at: 'IDC_ToWord' put: 1246;
		at: 1246 put: #IDC_ToWord;
		at: 'IDC_TransactionCombo' put: 1875;
		at: 1875 put: #IDC_TransactionCombo;
		at: 'IDC_TransactionGroupBox' put: 2091;
		at: 2091 put: #IDC_TransactionGroupBox;
		at: 'IDC_TransitCodeEdit' put: 1108;
		at: 1108 put: #IDC_TransitCodeEdit;
		at: 'IDC_TransitCodeText' put: 1200;
		at: 1200 put: #IDC_TransitCodeText;
		at: 'IDC_TreeView' put: 1453;
		at: 1453 put: #IDC_TreeView;
		at: 'IDC_TypeCombo' put: 1094;
		at: 1094 put: #IDC_TypeCombo;
		at: 'IDC_TypeEdit' put: 1392;
		at: 1392 put: #IDC_TypeEdit;
		at: 'IDC_TypeEdit1' put: 1561;
		at: 1561 put: #IDC_TypeEdit1;
		at: 'IDC_TypeEdit2' put: 1576;
		at: 1576 put: #IDC_TypeEdit2;
		at: 'IDC_TypeEdit3' put: 1589;
		at: 1589 put: #IDC_TypeEdit3;
		at: 'IDC_TypeEdit4' put: 1613;
		at: 1613 put: #IDC_TypeEdit4;
		at: 'IDC_UmbrellaCheckbox' put: 1118;
		at: 1118 put: #IDC_UmbrellaCheckbox;
		at: 'IDC_UmbrellaLiabCheckbox' put: 1680;
		at: 1680 put: #IDC_UmbrellaLiabCheckbox;
		yourself.!
   
initItemIDsPwMain12: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDC_UMRNumberEdit' put: 1901;
		at: 1901 put: #IDC_UMRNumberEdit;
		at: 'IDC_Uncheck' put: 1612;
		at: 1612 put: #IDC_Uncheck;
		at: 'IDC_UncheckAll' put: 1106;
		at: 1106 put: #IDC_UncheckAll;
		at: 'IDC_UnderwriterCheck' put: 1626;
		at: 1626 put: #IDC_UnderwriterCheck;
		at: 'IDC_UnderwriterCombo' put: 1614;
		at: 1614 put: #IDC_UnderwriterCombo;
		at: 'IDC_UnderwriterExclamation' put: 1385;
		at: 1385 put: #IDC_UnderwriterExclamation;
		at: 'IDC_UnderwriterPhoneEdit' put: 1105;
		at: 1105 put: #IDC_UnderwriterPhoneEdit;
		at: 'IDC_UnderwritingDetailsGroupBox' put: 1826;
		at: 1826 put: #IDC_UnderwritingDetailsGroupBox;
		at: 'IDC_UnitDesignatorCombo' put: 1590;
		at: 1590 put: #IDC_UnitDesignatorCombo;
		at: 'IDC_UnitNumberEdit' put: 1201;
		at: 1201 put: #IDC_UnitNumberEdit;
		at: 'IDC_Unselect' put: 1615;
		at: 1615 put: #IDC_Unselect;
		at: 'IDC_UnselectAll' put: 6040;
		at: 6040 put: #IDC_UnselectAll;
		at: 'IDC_UnverifiedCompanyOption' put: 1973;
		at: 1973 put: #IDC_UnverifiedCompanyOption;
		at: 'IDC_UnverifiedIconStatic' put: 1977;
		at: 1977 put: #IDC_UnverifiedIconStatic;
		at: 'IDC_Update' put: 1841;
		at: 1841 put: #IDC_Update;
		at: 'IDC_UpdateDatabaseCheck' put: 1958;
		at: 1958 put: #IDC_UpdateDatabaseCheck;
		at: 'IDC_UpdateNotificationCheck' put: 1472;
		at: 1472 put: #IDC_UpdateNotificationCheck;
		at: 'IDC_UpdateRadio' put: 1751;
		at: 1751 put: #IDC_UpdateRadio;
		at: 'IDC_UpgradeApplicationCombo' put: 1744;
		at: 1744 put: #IDC_UpgradeApplicationCombo;
		at: 'IDC_URLList' put: 1123;
		at: 1123 put: #IDC_URLList;
		at: 'IDC_Use' put: 1248;
		at: 1248 put: #IDC_Use;
		at: 'IDC_UseDefault' put: 1286;
		at: 1286 put: #IDC_UseDefault;
		at: 'IDC_UseDefaultButton' put: 1287;
		at: 1287 put: #IDC_UseDefaultButton;
		at: 'IDC_UseDefaultPackageNameButton' put: 1002;
		at: 1002 put: #IDC_UseDefaultPackageNameButton;
		at: 'IDC_UseDefaultPolicyTypeButton' put: 1768;
		at: 1768 put: #IDC_UseDefaultPolicyTypeButton;
		at: 'IDC_UseEmbeddedWebBrowserCheck' put: 1770;
		at: 1770 put: #IDC_UseEmbeddedWebBrowserCheck;
		at: 'IDC_UseHeadersCheck' put: 1907;
		at: 1907 put: #IDC_UseHeadersCheck;
		at: 'IDC_UserEdit' put: 1785;
		at: 1785 put: #IDC_UserEdit;
		at: 'IDC_UserIDText' put: 1699;
		at: 1699 put: #IDC_UserIDText;
		at: 'IDC_UWIcon' put: 1822;
		at: 1822 put: #IDC_UWIcon;
		at: 'IDC_UWIcon2' put: 1823;
		at: 1823 put: #IDC_UWIcon2;
		at: 'IDC_ValueCombo' put: 2051;
		at: 2051 put: #IDC_ValueCombo;
		at: 'IDC_VehicleCountEdit' put: 6088;
		at: 6088 put: #IDC_VehicleCountEdit;
		at: 'IDC_VehicleCountLabel' put: 6087;
		at: 6087 put: #IDC_VehicleCountLabel;
		at: 'IDC_VehicleDescriptionEdit' put: 6089;
		at: 6089 put: #IDC_VehicleDescriptionEdit;
		at: 'IDC_VehiclesEdit' put: 6084;
		at: 6084 put: #IDC_VehiclesEdit;
		at: 'IDC_VerEdit' put: 1450;
		at: 1450 put: #IDC_VerEdit;
		at: 'IDC_VerifiedCompanyOption' put: 1974;
		at: 1974 put: #IDC_VerifiedCompanyOption;
		at: 'IDC_VerifiedIconStatic' put: 1976;
		at: 1976 put: #IDC_VerifiedIconStatic;
		at: 'IDC_VerifiedStatic' put: 1970;
		at: 1970 put: #IDC_VerifiedStatic;
		at: 'IDC_VerifyButton' put: 1971;
		at: 1971 put: #IDC_VerifyButton;
		at: 'IDC_VersionEdit' put: 1746;
		at: 1746 put: #IDC_VersionEdit;
		at: 'IDC_VersionNoEdit' put: 1061;
		at: 1061 put: #IDC_VersionNoEdit;
		at: 'IDC_View' put: 1872;
		at: 1872 put: #IDC_View;
		at: 'IDC_ViewAfterPrintToFileCheck' put: 1191;
		at: 1191 put: #IDC_ViewAfterPrintToFileCheck;
		at: 'IDC_ViewEMarketingButton' put: 1221;
		at: 1221 put: #IDC_ViewEMarketingButton;
		at: 'IDC_ViewLink' put: 2003;
		at: 2003 put: #IDC_ViewLink;
		at: 'IDC_ViewResponseButton' put: 1546;
		at: 1546 put: #IDC_ViewResponseButton;
		at: 'IDC_VoiceMemoEdit' put: 1865;
		at: 1865 put: #IDC_VoiceMemoEdit;
		at: 'IDC_WaiveMRPRadio' put: 1090;
		at: 1090 put: #IDC_WaiveMRPRadio;
		at: 'IDC_WaiverOfSubrogationCheck' put: 2121;
		at: 2121 put: #IDC_WaiverOfSubrogationCheck;
		at: 'IDC_WarningsEdit' put: 1900;
		at: 1900 put: #IDC_WarningsEdit;
		at: 'IDC_WarningSizeDescription' put: 1337;
		at: 1337 put: #IDC_WarningSizeDescription;
		at: 'IDC_WarningStatic' put: 1752;
		at: 1752 put: #IDC_WarningStatic;
		at: 'IDC_WarningText' put: 1434;
		at: 1434 put: #IDC_WarningText;
		at: 'IDC_WebSiteEdit' put: 1495;
		at: 1495 put: #IDC_WebSiteEdit;
		at: 'IDC_WhatIsCompanyReferenceNumber' put: 1827;
		at: 1827 put: #IDC_WhatIsCompanyReferenceNumber;
		at: 'IDC_WizardImage' put: 1049;
		at: 1049 put: #IDC_WizardImage;
		at: 'IDC_YesOption' put: 1473;
		at: 1473 put: #IDC_YesOption;
		at: 'IDC_YesRadio' put: 1423;
		at: 1423 put: #IDC_YesRadio;
		at: 'IDCANCEL2' put: 3;
		at: 3 put: #IDCANCEL2;
		at: 'IDD_FileAttachmentDialog' put: 238;
		at: 238 put: #IDD_FileAttachmentDialog;
		at: 'IDD_FileAttachmentDialogFRC' put: 215;
		at: 215 put: #IDD_FileAttachmentDialogFRC;
		at: 'IDD_NoteDialog' put: 189;
		at: 189 put: #IDD_NoteDialog;
		at: 'IDD_NoteDialogFRC' put: 232;
		at: 232 put: #IDD_NoteDialogFRC;
		at: 'IDD_ReceiveFilesDialog' put: 279;
		at: 279 put: #IDD_ReceiveFilesDialog;
		at: 'IDD_ReceiveFilesDialogFRC' put: 135;
		at: 135 put: #IDD_ReceiveFilesDialogFRC;
		at: 'IDD_ScheduleofInsuranceDialog' put: 311;
		at: 311 put: #IDD_ScheduleofInsuranceDialog;
		at: 'IDD_ScheduleofInsuranceDialogFRC' put: 128;
		at: 128 put: #IDD_ScheduleofInsuranceDialogFRC;
		at: 'IDD_SplashScreen' put: 133;
		at: 133 put: #IDD_SplashScreen;
		at: 'IDD_SplashScreenFRC' put: 256;
		at: 256 put: #IDD_SplashScreenFRC;
		at: 'IDD_T4AddApplicationFormDefinitionWizardImportPage' put: 362;
		at: 362 put: #IDD_T4AddApplicationFormDefinitionWizardImportPage;
		at: 'IDD_T4AddApplicationFormDefinitionWizardImportPageFRC' put: 370;
		at: 370 put: #IDD_T4AddApplicationFormDefinitionWizardImportPageFRC;
		at: 'IDD_T4AddApplicationFormDefinitionWizardNewApplicationPage' put: 363;
		at: 363 put: #IDD_T4AddApplicationFormDefinitionWizardNewApplicationPage;
		at: 'IDD_T4AddApplicationFormDefinitionWizardNewApplicationPageFRC' put: 371;
		at: 371 put: #IDD_T4AddApplicationFormDefinitionWizardNewApplicationPageFRC;
		at: 'IDD_T4AddApplicationFormDefinitionWizardNewVersionPage' put: 367;
		at: 367 put: #IDD_T4AddApplicationFormDefinitionWizardNewVersionPage;
		at: 'IDD_T4AddApplicationFormDefinitionWizardNewVersionPageFRC' put: 372;
		at: 372 put: #IDD_T4AddApplicationFormDefinitionWizardNewVersionPageFRC;
		at: 'IDD_T4AddApplicationFormDefinitionWizardReadyPage' put: 360;
		at: 360 put: #IDD_T4AddApplicationFormDefinitionWizardReadyPage;
		at: 'IDD_T4AddApplicationFormDefinitionWizardReadyPageFRC' put: 375;
		at: 375 put: #IDD_T4AddApplicationFormDefinitionWizardReadyPageFRC;
		at: 'IDD_T4AddApplicationFormDefinitionWizardUpdatePage' put: 366;
		at: 366 put: #IDD_T4AddApplicationFormDefinitionWizardUpdatePage;
		at: 'IDD_T4AddApplicationFormDefinitionWizardUpdatePageFRC' put: 373;
		at: 373 put: #IDD_T4AddApplicationFormDefinitionWizardUpdatePageFRC;
		at: 'IDD_T4AddApplicationFormDefinitionWizardWelcomePage' put: 361;
		at: 361 put: #IDD_T4AddApplicationFormDefinitionWizardWelcomePage;
		at: 'IDD_T4AddApplicationFormDefinitionWizardWelcomePageFRC' put: 374;
		at: 374 put: #IDD_T4AddApplicationFormDefinitionWizardWelcomePageFRC;
		at: 'IDD_T4AddApplicationFormWizardChooseApplicationPage' put: 356;
		at: 356 put: #IDD_T4AddApplicationFormWizardChooseApplicationPage;
		at: 'IDD_T4AddApplicationFormWizardChooseApplicationPageFRC' put: 376;
		at: 376 put: #IDD_T4AddApplicationFormWizardChooseApplicationPageFRC;
		at: 'IDD_T4AddApplicationFormWizardImportPage' put: 359;
		at: 359 put: #IDD_T4AddApplicationFormWizardImportPage;
		at: 'IDD_T4AddApplicationFormWizardImportPageFRC' put: 381;
		at: 381 put: #IDD_T4AddApplicationFormWizardImportPageFRC;
		at: 'IDD_T4AddApplicationFormWizardReadyPage' put: 357;
		at: 357 put: #IDD_T4AddApplicationFormWizardReadyPage;
		at: 'IDD_T4AddApplicationFormWizardReadyPageFRC' put: 377;
		at: 377 put: #IDD_T4AddApplicationFormWizardReadyPageFRC;
		at: 'IDD_T4AddApplicationFormWizardUpgradePage' put: 358;
		at: 358 put: #IDD_T4AddApplicationFormWizardUpgradePage;
		at: 'IDD_T4AddApplicationFormWizardUpgradePageFRC' put: 382;
		at: 382 put: #IDD_T4AddApplicationFormWizardUpgradePageFRC;
		at: 'IDD_T4AddCertificateDialog' put: 417;
		at: 417 put: #IDD_T4AddCertificateDialog;
		at: 'IDD_T4AddCertificateDialogFRC' put: 464;
		at: 464 put: #IDD_T4AddCertificateDialogFRC;
		at: 'IDD_T4AddEndorsementRequestDialog' put: 444;
		at: 444 put: #IDD_T4AddEndorsementRequestDialog;
		at: 'IDD_T4AddEndorsementRequestDialogFRC' put: 468;
		at: 468 put: #IDD_T4AddEndorsementRequestDialogFRC;
		at: 'IDD_T4AddInsuredDialog' put: 393;
		at: 393 put: #IDD_T4AddInsuredDialog;
		at: 'IDD_T4AddInsuredDialogFRC' put: 400;
		at: 400 put: #IDD_T4AddInsuredDialogFRC;
		at: 'IDD_T4AddInsuredDialogXP' put: 399;
		at: 399 put: #IDD_T4AddInsuredDialogXP;
		at: 'IDD_T4AddInsuredDialogXPFRC' put: 401;
		at: 401 put: #IDD_T4AddInsuredDialogXPFRC;
		at: 'IDD_T4AddInsuredFromEMarketingDownloadDialog' put: 395;
		at: 395 put: #IDD_T4AddInsuredFromEMarketingDownloadDialog;
		at: 'IDD_T4AddInsuredFromEMarketingDownloadDialogFRC' put: 405;
		at: 405 put: #IDD_T4AddInsuredFromEMarketingDownloadDialogFRC;
		yourself.!
   
initItemIDsPwMain13: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDD_T4AddInsuredFromFileDialog' put: 394;
		at: 394 put: #IDD_T4AddInsuredFromFileDialog;
		at: 'IDD_T4AddInsuredFromFileDialogFRC' put: 402;
		at: 402 put: #IDD_T4AddInsuredFromFileDialogFRC;
		at: 'IDD_T4AddInsuredFromPolicyDialog' put: 398;
		at: 398 put: #IDD_T4AddInsuredFromPolicyDialog;
		at: 'IDD_T4AddInsuredFromPolicyDialogFRC' put: 403;
		at: 403 put: #IDD_T4AddInsuredFromPolicyDialogFRC;
		at: 'IDD_T4AddInsuredFromTemplateDialog' put: 396;
		at: 396 put: #IDD_T4AddInsuredFromTemplateDialog;
		at: 'IDD_T4AddInsuredFromTemplateDialogFRC' put: 404;
		at: 404 put: #IDD_T4AddInsuredFromTemplateDialogFRC;
		at: 'IDD_T4AddPropertyCertificateDialog' put: 503;
		at: 503 put: #IDD_T4AddPropertyCertificateDialog;
		at: 'IDD_T4AddPropertyCertificateDialogFRC' put: 513;
		at: 513 put: #IDD_T4AddPropertyCertificateDialogFRC;
		at: 'IDD_T4AddressEditor' put: 300;
		at: 300 put: #IDD_T4AddressEditor;
		at: 'IDD_T4AddressEditorFRC' put: 182;
		at: 182 put: #IDD_T4AddressEditorFRC;
		at: 'IDD_T4AddressPage' put: 104;
		at: 104 put: #IDD_T4AddressPage;
		at: 'IDD_T4AddressPageFRC' put: 320;
		at: 320 put: #IDD_T4AddressPageFRC;
		at: 'IDD_T4AddressPaneCivicStreet' put: 153;
		at: 153 put: #IDD_T4AddressPaneCivicStreet;
		at: 'IDD_T4AddressPaneCivicStreetFRC' put: 100;
		at: 100 put: #IDD_T4AddressPaneCivicStreetFRC;
		at: 'IDD_T4AddressPaneEasternCanadaLandDescription' put: 172;
		at: 172 put: #IDD_T4AddressPaneEasternCanadaLandDescription;
		at: 'IDD_T4AddressPaneEasternCanadaLandDescriptionFRC' put: 178;
		at: 178 put: #IDD_T4AddressPaneEasternCanadaLandDescriptionFRC;
		at: 'IDD_T4AddressPaneGeneralDelivery' put: 278;
		at: 278 put: #IDD_T4AddressPaneGeneralDelivery;
		at: 'IDD_T4AddressPaneGeneralDeliveryFRC' put: 124;
		at: 124 put: #IDD_T4AddressPaneGeneralDeliveryFRC;
		at: 'IDD_T4AddressPanePostOfficeBox' put: 252;
		at: 252 put: #IDD_T4AddressPanePostOfficeBox;
		at: 'IDD_T4AddressPanePostOfficeBoxFRC' put: 181;
		at: 181 put: #IDD_T4AddressPanePostOfficeBoxFRC;
		at: 'IDD_T4AddressPaneRuralRoute' put: 177;
		at: 177 put: #IDD_T4AddressPaneRuralRoute;
		at: 'IDD_T4AddressPaneRuralRouteFRC' put: 285;
		at: 285 put: #IDD_T4AddressPaneRuralRouteFRC;
		at: 'IDD_T4AddressPaneUnparsedStreet' put: 269;
		at: 269 put: #IDD_T4AddressPaneUnparsedStreet;
		at: 'IDD_T4AddressPaneUnparsedStreetFRC' put: 110;
		at: 110 put: #IDD_T4AddressPaneUnparsedStreetFRC;
		at: 'IDD_T4AddressPaneWesternCanadaRuralLandDescription' put: 236;
		at: 236 put: #IDD_T4AddressPaneWesternCanadaRuralLandDescription;
		at: 'IDD_T4AddressPaneWesternCanadaRuralLandDescriptionFRC' put: 208;
		at: 208 put: #IDD_T4AddressPaneWesternCanadaRuralLandDescriptionFRC;
		at: 'IDD_T4AddTemplateDialog' put: 407;
		at: 407 put: #IDD_T4AddTemplateDialog;
		at: 'IDD_T4AddTemplateDialogFRC' put: 409;
		at: 409 put: #IDD_T4AddTemplateDialogFRC;
		at: 'IDD_T4AddTemplateDialogXP' put: 408;
		at: 408 put: #IDD_T4AddTemplateDialogXP;
		at: 'IDD_T4AddTemplateDialogXPFRC' put: 410;
		at: 410 put: #IDD_T4AddTemplateDialogXPFRC;
		at: 'IDD_T4AddTemplateFormsDialog' put: 385;
		at: 385 put: #IDD_T4AddTemplateFormsDialog;
		at: 'IDD_T4AddTemplateFormsDialogFRC' put: 386;
		at: 386 put: #IDD_T4AddTemplateFormsDialogFRC;
		at: 'IDD_T4AdvancedSettingsDialog' put: 6066;
		at: 6066 put: #IDD_T4AdvancedSettingsDialog;
		at: 'IDD_T4AdvancedSettingsDialogFRC' put: 6070;
		at: 6070 put: #IDD_T4AdvancedSettingsDialogFRC;
		at: 'IDD_T4ApplicationFormDefinitionAdvancedPage' put: 365;
		at: 365 put: #IDD_T4ApplicationFormDefinitionAdvancedPage;
		at: 'IDD_T4ApplicationFormDefinitionAdvancedPageFRC' put: 378;
		at: 378 put: #IDD_T4ApplicationFormDefinitionAdvancedPageFRC;
		at: 'IDD_T4ApplicationFormDefinitionGeneralPage' put: 364;
		at: 364 put: #IDD_T4ApplicationFormDefinitionGeneralPage;
		at: 'IDD_T4ApplicationFormDefinitionGeneralPageFRC' put: 379;
		at: 379 put: #IDD_T4ApplicationFormDefinitionGeneralPageFRC;
		at: 'IDD_T4ApplicationFormGeneralPage' put: 355;
		at: 355 put: #IDD_T4ApplicationFormGeneralPage;
		at: 'IDD_T4ApplicationFormGeneralPageFRC' put: 380;
		at: 380 put: #IDD_T4ApplicationFormGeneralPageFRC;
		at: 'IDD_T4AttachmentsPage' put: 199;
		at: 199 put: #IDD_T4AttachmentsPage;
		at: 'IDD_T4AttachmentsPageFRC' put: 255;
		at: 255 put: #IDD_T4AttachmentsPageFRC;
		at: 'IDD_T4AutomaticDebitPage' put: 226;
		at: 226 put: #IDD_T4AutomaticDebitPage;
		at: 'IDD_T4AutomaticDebitPageFRC' put: 191;
		at: 191 put: #IDD_T4AutomaticDebitPageFRC;
		at: 'IDD_T4Certificate2DialogAdditionalInsuredACORDLiabilityPage' put: 324;
		at: 324 put: #IDD_T4Certificate2DialogAdditionalInsuredACORDLiabilityPage;
		at: 'IDD_T4Certificate2DialogAdditionalInsuredACORDLiabilityPage2' put: 348;
		at: 348 put: #IDD_T4Certificate2DialogAdditionalInsuredACORDLiabilityPage2;
		at: 'IDD_T4Certificate2DialogAdditionalInsuredACORDLiabilityPage2FRC' put: 351;
		at: 351 put: #IDD_T4Certificate2DialogAdditionalInsuredACORDLiabilityPage2FRC;
		at: 'IDD_T4Certificate2DialogAdditionalInsuredACORDLiabilityPageFRC' put: 332;
		at: 332 put: #IDD_T4Certificate2DialogAdditionalInsuredACORDLiabilityPageFRC;
		at: 'IDD_T4Certificate2DialogAdditionalInsuredCSIOPage' put: 206;
		at: 206 put: #IDD_T4Certificate2DialogAdditionalInsuredCSIOPage;
		at: 'IDD_T4Certificate2DialogAdditionalInsuredCSIOPageFRC' put: 214;
		at: 214 put: #IDD_T4Certificate2DialogAdditionalInsuredCSIOPageFRC;
		at: 'IDD_T4Certificate2DialogAutoCoveragesACORDLiabilityPage' put: 327;
		at: 327 put: #IDD_T4Certificate2DialogAutoCoveragesACORDLiabilityPage;
		at: 'IDD_T4Certificate2DialogAutoCoveragesACORDLiabilityPage2' put: 349;
		at: 349 put: #IDD_T4Certificate2DialogAutoCoveragesACORDLiabilityPage2;
		at: 'IDD_T4Certificate2DialogAutoCoveragesACORDLiabilityPage2FRC' put: 352;
		at: 352 put: #IDD_T4Certificate2DialogAutoCoveragesACORDLiabilityPage2FRC;
		at: 'IDD_T4Certificate2DialogAutoCoveragesACORDLiabilityPage3' put: 487;
		at: 487 put: #IDD_T4Certificate2DialogAutoCoveragesACORDLiabilityPage3;
		at: 'IDD_T4Certificate2DialogAutoCoveragesACORDLiabilityPage3FRC' put: 489;
		at: 489 put: #IDD_T4Certificate2DialogAutoCoveragesACORDLiabilityPage3FRC;
		at: 'IDD_T4Certificate2DialogAutoCoveragesACORDLiabilityPageFRC' put: 342;
		at: 342 put: #IDD_T4Certificate2DialogAutoCoveragesACORDLiabilityPageFRC;
		at: 'IDD_T4Certificate2DialogAutoCoveragesCSIOPage' put: 237;
		at: 237 put: #IDD_T4Certificate2DialogAutoCoveragesCSIOPage;
		at: 'IDD_T4Certificate2DialogAutoCoveragesCSIOPage2' put: 495;
		at: 495 put: #IDD_T4Certificate2DialogAutoCoveragesCSIOPage2;
		at: 'IDD_T4Certificate2DialogAutoCoveragesCSIOPage2FRC' put: 496;
		at: 496 put: #IDD_T4Certificate2DialogAutoCoveragesCSIOPage2FRC;
		at: 'IDD_T4Certificate2DialogAutoCoveragesCSIOPageFRC' put: 319;
		at: 319 put: #IDD_T4Certificate2DialogAutoCoveragesCSIOPageFRC;
		at: 'IDD_T4Certificate2DialogBrokeragePage' put: 113;
		at: 113 put: #IDD_T4Certificate2DialogBrokeragePage;
		at: 'IDD_T4Certificate2DialogBrokeragePageENU' put: 336;
		at: 336 put: #IDD_T4Certificate2DialogBrokeragePageENU;
		at: 'IDD_T4Certificate2DialogBrokeragePageFRC' put: 291;
		at: 291 put: #IDD_T4Certificate2DialogBrokeragePageFRC;
		at: 'IDD_T4Certificate2DialogCancellationPage' put: 310;
		at: 310 put: #IDD_T4Certificate2DialogCancellationPage;
		at: 'IDD_T4Certificate2DialogCancellationPageFRC' put: 301;
		at: 301 put: #IDD_T4Certificate2DialogCancellationPageFRC;
		at: 'IDD_T4Certificate2DialogCGLCoveragesACORDLiabilityPage' put: 326;
		at: 326 put: #IDD_T4Certificate2DialogCGLCoveragesACORDLiabilityPage;
		at: 'IDD_T4Certificate2DialogCGLCoveragesACORDLiabilityPageFRC' put: 341;
		at: 341 put: #IDD_T4Certificate2DialogCGLCoveragesACORDLiabilityPageFRC;
		at: 'IDD_T4Certificate2DialogCGLCoveragesCSIOLiabilityPage2' put: 491;
		at: 491 put: #IDD_T4Certificate2DialogCGLCoveragesCSIOLiabilityPage2;
		at: 'IDD_T4Certificate2DialogCGLCoveragesCSIOLiabilityPage201609' put: 6105;
		at: 6105 put: #IDD_T4Certificate2DialogCGLCoveragesCSIOLiabilityPage201609;
		at: 'IDD_T4Certificate2DialogCGLCoveragesCSIOLiabilityPage201609FRC' put: 6106;
		at: 6106 put: #IDD_T4Certificate2DialogCGLCoveragesCSIOLiabilityPage201609FRC;
		at: 'IDD_T4Certificate2DialogCGLCoveragesCSIOLiabilityPage2FRC' put: 492;
		at: 492 put: #IDD_T4Certificate2DialogCGLCoveragesCSIOLiabilityPage2FRC;
		at: 'IDD_T4Certificate2DialogCGLCoveragesCSIOPage' put: 304;
		at: 304 put: #IDD_T4Certificate2DialogCGLCoveragesCSIOPage;
		at: 'IDD_T4Certificate2DialogCGLCoveragesCSIOPageFRC' put: 298;
		at: 298 put: #IDD_T4Certificate2DialogCGLCoveragesCSIOPageFRC;
		at: 'IDD_T4Certificate2DialogExcessCoveragesACORDLiabilityPage' put: 329;
		at: 329 put: #IDD_T4Certificate2DialogExcessCoveragesACORDLiabilityPage;
		at: 'IDD_T4Certificate2DialogExcessCoveragesACORDLiabilityPage2' put: 350;
		at: 350 put: #IDD_T4Certificate2DialogExcessCoveragesACORDLiabilityPage2;
		at: 'IDD_T4Certificate2DialogExcessCoveragesACORDLiabilityPage2FRC' put: 353;
		at: 353 put: #IDD_T4Certificate2DialogExcessCoveragesACORDLiabilityPage2FRC;
		at: 'IDD_T4Certificate2DialogExcessCoveragesACORDLiabilityPage3' put: 488;
		at: 488 put: #IDD_T4Certificate2DialogExcessCoveragesACORDLiabilityPage3;
		at: 'IDD_T4Certificate2DialogExcessCoveragesACORDLiabilityPage3FRC' put: 490;
		at: 490 put: #IDD_T4Certificate2DialogExcessCoveragesACORDLiabilityPage3FRC;
		at: 'IDD_T4Certificate2DialogExcessCoveragesACORDLiabilityPageFRC' put: 344;
		at: 344 put: #IDD_T4Certificate2DialogExcessCoveragesACORDLiabilityPageFRC;
		at: 'IDD_T4Certificate2DialogExcessCoveragesCSIOPage' put: 201;
		at: 201 put: #IDD_T4Certificate2DialogExcessCoveragesCSIOPage;
		at: 'IDD_T4Certificate2DialogExcessCoveragesCSIOPageFRC' put: 245;
		at: 245 put: #IDD_T4Certificate2DialogExcessCoveragesCSIOPageFRC;
		at: 'IDD_T4Certificate2DialogGarageCoveragesACORDLiabilityPage' put: 328;
		at: 328 put: #IDD_T4Certificate2DialogGarageCoveragesACORDLiabilityPage;
		at: 'IDD_T4Certificate2DialogGarageCoveragesACORDLiabilityPageFRC' put: 343;
		at: 343 put: #IDD_T4Certificate2DialogGarageCoveragesACORDLiabilityPageFRC;
		at: 'IDD_T4Certificate2DialogGeneralPage' put: 145;
		at: 145 put: #IDD_T4Certificate2DialogGeneralPage;
		at: 'IDD_T4Certificate2DialogGeneralPage2' put: 347;
		at: 347 put: #IDD_T4Certificate2DialogGeneralPage2;
		at: 'IDD_T4Certificate2DialogGeneralPage2FRC' put: 346;
		at: 346 put: #IDD_T4Certificate2DialogGeneralPage2FRC;
		at: 'IDD_T4Certificate2DialogGeneralPageFRC' put: 146;
		at: 146 put: #IDD_T4Certificate2DialogGeneralPageFRC;
		at: 'IDD_T4Certificate2DialogHolderPage' put: 116;
		at: 116 put: #IDD_T4Certificate2DialogHolderPage;
		at: 'IDD_T4Certificate2DialogHolderPageFRC' put: 270;
		at: 270 put: #IDD_T4Certificate2DialogHolderPageFRC;
		at: 'IDD_T4Certificate2DialogInlandMarineCoveragesCSIOProperty201109Page' put: 498;
		at: 498 put: #IDD_T4Certificate2DialogInlandMarineCoveragesCSIOProperty201109Page;
		at: 'IDD_T4Certificate2DialogInlandMarineCoveragesCSIOProperty201109PageFRC' put: 509;
		at: 509 put: #IDD_T4Certificate2DialogInlandMarineCoveragesCSIOProperty201109PageFRC;
		at: 'IDD_T4Certificate2DialogInsuredACORDLiabilityPage' put: 323;
		at: 323 put: #IDD_T4Certificate2DialogInsuredACORDLiabilityPage;
		at: 'IDD_T4Certificate2DialogInsuredACORDLiabilityPageFRC' put: 333;
		at: 333 put: #IDD_T4Certificate2DialogInsuredACORDLiabilityPageFRC;
		at: 'IDD_T4Certificate2DialogInsuredCSIOPage' put: 294;
		at: 294 put: #IDD_T4Certificate2DialogInsuredCSIOPage;
		at: 'IDD_T4Certificate2DialogInsuredCSIOPageFRC' put: 295;
		at: 295 put: #IDD_T4Certificate2DialogInsuredCSIOPageFRC;
		at: 'IDD_T4Certificate2DialogInsuredCSIOProperty201109Page' put: 502;
		at: 502 put: #IDD_T4Certificate2DialogInsuredCSIOProperty201109Page;
		at: 'IDD_T4Certificate2DialogInsuredCSIOProperty201109PageFRC' put: 508;
		at: 508 put: #IDD_T4Certificate2DialogInsuredCSIOProperty201109PageFRC;
		at: 'IDD_T4Certificate2DialogLocationCSIOProperty201109Page' put: 422;
		at: 422 put: #IDD_T4Certificate2DialogLocationCSIOProperty201109Page;
		at: 'IDD_T4Certificate2DialogLocationCSIOProperty201109PageFRC' put: 507;
		at: 507 put: #IDD_T4Certificate2DialogLocationCSIOProperty201109PageFRC;
		at: 'IDD_T4Certificate2DialogMachineryBreakdownCoveragesCSIOProperty201109Page' put: 499;
		at: 499 put: #IDD_T4Certificate2DialogMachineryBreakdownCoveragesCSIOProperty201109Page;
		at: 'IDD_T4Certificate2DialogMachineryBreakdownCoveragesCSIOProperty201109PageFRC' put: 506;
		at: 506 put: #IDD_T4Certificate2DialogMachineryBreakdownCoveragesCSIOProperty201109PageFRC;
		yourself.!
 
initItemIDsPwMain14: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDD_T4Certificate2DialogOtherCoveragesACORDLiabilityPage' put: 330;
		at: 330 put: #IDD_T4Certificate2DialogOtherCoveragesACORDLiabilityPage;
		at: 'IDD_T4Certificate2DialogOtherCoveragesACORDLiabilityPageFRC' put: 334;
		at: 334 put: #IDD_T4Certificate2DialogOtherCoveragesACORDLiabilityPageFRC;
		at: 'IDD_T4Certificate2DialogOtherCoveragesCSIOPage' put: 235;
		at: 235 put: #IDD_T4Certificate2DialogOtherCoveragesCSIOPage;
		at: 'IDD_T4Certificate2DialogOtherCoveragesCSIOPage2' put: 494;
		at: 494 put: #IDD_T4Certificate2DialogOtherCoveragesCSIOPage2;
		at: 'IDD_T4Certificate2DialogOtherCoveragesCSIOPage2FRC' put: 493;
		at: 493 put: #IDD_T4Certificate2DialogOtherCoveragesCSIOPage2FRC;
		at: 'IDD_T4Certificate2DialogOtherCoveragesCSIOPageFRC' put: 162;
		at: 162 put: #IDD_T4Certificate2DialogOtherCoveragesCSIOPageFRC;
		at: 'IDD_T4Certificate2DialogOtherCoveragesCSIOProperty201109Page' put: 500;
		at: 500 put: #IDD_T4Certificate2DialogOtherCoveragesCSIOProperty201109Page;
		at: 'IDD_T4Certificate2DialogOtherCoveragesCSIOProperty201109PageFRC' put: 505;
		at: 505 put: #IDD_T4Certificate2DialogOtherCoveragesCSIOProperty201109PageFRC;
		at: 'IDD_T4Certificate2DialogPolicyInfoACORDLiabilityPage' put: 325;
		at: 325 put: #IDD_T4Certificate2DialogPolicyInfoACORDLiabilityPage;
		at: 'IDD_T4Certificate2DialogPolicyInfoACORDLiabilityPageENU' put: 337;
		at: 337 put: #IDD_T4Certificate2DialogPolicyInfoACORDLiabilityPageENU;
		at: 'IDD_T4Certificate2DialogPolicyInfoACORDLiabilityPageFRC' put: 335;
		at: 335 put: #IDD_T4Certificate2DialogPolicyInfoACORDLiabilityPageFRC;
		at: 'IDD_T4Certificate2DialogPolicyInfoCSIOPage' put: 303;
		at: 303 put: #IDD_T4Certificate2DialogPolicyInfoCSIOPage;
		at: 'IDD_T4Certificate2DialogPolicyInfoCSIOPageFRC' put: 120;
		at: 120 put: #IDD_T4Certificate2DialogPolicyInfoCSIOPageFRC;
		at: 'IDD_T4Certificate2DialogPropertyCoveragesCSIOProperty201109Page' put: 497;
		at: 497 put: #IDD_T4Certificate2DialogPropertyCoveragesCSIOProperty201109Page;
		at: 'IDD_T4Certificate2DialogPropertyCoveragesCSIOProperty201109PageFRC' put: 504;
		at: 504 put: #IDD_T4Certificate2DialogPropertyCoveragesCSIOProperty201109PageFRC;
		at: 'IDD_T4Certificate2DialogWCELCoveragesACORDLiabilityPage' put: 331;
		at: 331 put: #IDD_T4Certificate2DialogWCELCoveragesACORDLiabilityPage;
		at: 'IDD_T4Certificate2DialogWCELCoveragesACORDLiabilityPageFRC' put: 345;
		at: 345 put: #IDD_T4Certificate2DialogWCELCoveragesACORDLiabilityPageFRC;
		at: 'IDD_T4ChangePolicyPremiumsDialog' put: 6042;
		at: 6042 put: #IDD_T4ChangePolicyPremiumsDialog;
		at: 'IDD_T4ChangePolicyPremiumsDialogFRC' put: 6043;
		at: 6043 put: #IDD_T4ChangePolicyPremiumsDialogFRC;
		at: 'IDD_T4CompanyDialogGeneralPage' put: 229;
		at: 229 put: #IDD_T4CompanyDialogGeneralPage;
		at: 'IDD_T4CompanyDialogGeneralPageFRC' put: 159;
		at: 159 put: #IDD_T4CompanyDialogGeneralPageFRC;
		at: 'IDD_T4CompanyDialogLogoPage' put: 160;
		at: 160 put: #IDD_T4CompanyDialogLogoPage;
		at: 'IDD_T4CompanyDialogLogoPageFRC' put: 274;
		at: 274 put: #IDD_T4CompanyDialogLogoPageFRC;
		at: 'IDD_T4CompleteEndorsementRequestDialog' put: 447;
		at: 447 put: #IDD_T4CompleteEndorsementRequestDialog;
		at: 'IDD_T4CompleteEndorsementRequestDialogFRC' put: 423;
		at: 423 put: #IDD_T4CompleteEndorsementRequestDialogFRC;
		at: 'IDD_T4ContactDialogAutoGeneralPage' put: 515;
		at: 515 put: #IDD_T4ContactDialogAutoGeneralPage;
		at: 'IDD_T4ContactDialogAutoGeneralPageFRC' put: 516;
		at: 516 put: #IDD_T4ContactDialogAutoGeneralPageFRC;
		at: 'IDD_T4ContactDialogBrokerageRolesPage' put: 240;
		at: 240 put: #IDD_T4ContactDialogBrokerageRolesPage;
		at: 'IDD_T4ContactDialogBrokerageRolesPageFRC' put: 200;
		at: 200 put: #IDD_T4ContactDialogBrokerageRolesPageFRC;
		at: 'IDD_T4ContactDialogCommunicationPage' put: 173;
		at: 173 put: #IDD_T4ContactDialogCommunicationPage;
		at: 'IDD_T4ContactDialogCommunicationPageFRC' put: 239;
		at: 239 put: #IDD_T4ContactDialogCommunicationPageFRC;
		at: 'IDD_T4ContactDialogGeneralPage' put: 234;
		at: 234 put: #IDD_T4ContactDialogGeneralPage;
		at: 'IDD_T4ContactDialogGeneralPageENU' put: 111;
		at: 111 put: #IDD_T4ContactDialogGeneralPageENU;
		at: 'IDD_T4ContactDialogGeneralPageFRC' put: 171;
		at: 171 put: #IDD_T4ContactDialogGeneralPageFRC;
		at: 'IDD_T4ContractDialog' put: 244;
		at: 244 put: #IDD_T4ContractDialog;
		at: 'IDD_T4ContractDialogFRC' put: 313;
		at: 313 put: #IDD_T4ContractDialogFRC;
		at: 'IDD_T4ContractsPage' put: 316;
		at: 316 put: #IDD_T4ContractsPage;
		at: 'IDD_T4ContractsPageFRC' put: 203;
		at: 203 put: #IDD_T4ContractsPageFRC;
		at: 'IDD_T4CreditCardPage' put: 164;
		at: 164 put: #IDD_T4CreditCardPage;
		at: 'IDD_T4CreditCardPageFRC' put: 242;
		at: 242 put: #IDD_T4CreditCardPageFRC;
		at: 'IDD_T4CustomFormDialog' put: 6050;
		at: 6050 put: #IDD_T4CustomFormDialog;
		at: 'IDD_T4CustomFormDialogFRC' put: 6049;
		at: 6049 put: #IDD_T4CustomFormDialogFRC;
		at: 'IDD_T4CustomRFQBuilderDialog' put: 432;
		at: 432 put: #IDD_T4CustomRFQBuilderDialog;
		at: 'IDD_T4CustomRFQBuilderDialogFRC' put: 429;
		at: 429 put: #IDD_T4CustomRFQBuilderDialogFRC;
		at: 'IDD_T4DirectoryTreeBrowserDialog' put: 211;
		at: 211 put: #IDD_T4DirectoryTreeBrowserDialog;
		at: 'IDD_T4DirectoryTreeBrowserDialogFRC' put: 290;
		at: 290 put: #IDD_T4DirectoryTreeBrowserDialogFRC;
		at: 'IDD_T4EditDiscountsDialog' put: 445;
		at: 445 put: #IDD_T4EditDiscountsDialog;
		at: 'IDD_T4EditDiscountsDialogFRC' put: 465;
		at: 465 put: #IDD_T4EditDiscountsDialogFRC;
		at: 'IDD_T4EditEMarketingFieldsDialog' put: 443;
		at: 443 put: #IDD_T4EditEMarketingFieldsDialog;
		at: 'IDD_T4EditEMarketingFieldsDialogFRC' put: 442;
		at: 442 put: #IDD_T4EditEMarketingFieldsDialogFRC;
		at: 'IDD_T4ElectronicPinkSlipsCustomizationDialog' put: 6098;
		at: 6098 put: #IDD_T4ElectronicPinkSlipsCustomizationDialog;
		at: 'IDD_T4ElectronicPinkSlipsCustomizationDialogFRC' put: 6102;
		at: 6102 put: #IDD_T4ElectronicPinkSlipsCustomizationDialogFRC;
		at: 'IDD_T4ElectronicPinkSlipsEmailDialog' put: 6097;
		at: 6097 put: #IDD_T4ElectronicPinkSlipsEmailDialog;
		at: 'IDD_T4ElectronicPinkSlipsEmailDialogFRC' put: 6101;
		at: 6101 put: #IDD_T4ElectronicPinkSlipsEmailDialogFRC;
		at: 'IDD_T4ElectronicPinkSlipsGeneralDialog' put: 6099;
		at: 6099 put: #IDD_T4ElectronicPinkSlipsGeneralDialog;
		at: 'IDD_T4ElectronicPinkSlipsGeneralDialogFRC' put: 6100;
		at: 6100 put: #IDD_T4ElectronicPinkSlipsGeneralDialogFRC;
		at: 'IDD_T4EMarketingCredentialsAndBrokerNumberDialog' put: 6057;
		at: 6057 put: #IDD_T4EMarketingCredentialsAndBrokerNumberDialog;
		at: 'IDD_T4EMarketingCredentialsAndBrokerNumberDialogFRC' put: 6058;
		at: 6058 put: #IDD_T4EMarketingCredentialsAndBrokerNumberDialogFRC;
		at: 'IDD_T4EMarketingCredentialsDialog' put: 390;
		at: 390 put: #IDD_T4EMarketingCredentialsDialog;
		at: 'IDD_T4EMarketingCredentialsDialogFRC' put: 392;
		at: 392 put: #IDD_T4EMarketingCredentialsDialogFRC;
		at: 'IDD_T4eMarketingFieldsPage' put: 305;
		at: 305 put: #IDD_T4eMarketingFieldsPage;
		at: 'IDD_T4eMarketingFieldsPageFRC' put: 340;
		at: 340 put: #IDD_T4eMarketingFieldsPageFRC;
		at: 'IDD_T4EndorsementRequestBrokeragePage' put: 266;
		at: 266 put: #IDD_T4EndorsementRequestBrokeragePage;
		at: 'IDD_T4EndorsementRequestBrokeragePageFRC' put: 220;
		at: 220 put: #IDD_T4EndorsementRequestBrokeragePageFRC;
		at: 'IDD_T4EndorsementRequestChangesPage' put: 223;
		at: 223 put: #IDD_T4EndorsementRequestChangesPage;
		at: 'IDD_T4EndorsementRequestChangesPageFRC' put: 225;
		at: 225 put: #IDD_T4EndorsementRequestChangesPageFRC;
		at: 'IDD_T4EndorsementRequestInsurerPage' put: 102;
		at: 102 put: #IDD_T4EndorsementRequestInsurerPage;
		at: 'IDD_T4EndorsementRequestInsurerPageFRC' put: 105;
		at: 105 put: #IDD_T4EndorsementRequestInsurerPageFRC;
		at: 'IDD_T4eSlipsBrokerageSettingsDialog' put: 6092;
		at: 6092 put: #IDD_T4eSlipsBrokerageSettingsDialog;
		at: 'IDD_T4eSlipsBrokerageSettingsDialogFRC' put: 6093;
		at: 6093 put: #IDD_T4eSlipsBrokerageSettingsDialogFRC;
		at: 'IDD_T4FIFRequestPremiumFinanceQuoteDialog' put: 6064;
		at: 6064 put: #IDD_T4FIFRequestPremiumFinanceQuoteDialog;
		at: 'IDD_T4FIFRequestPremiumFinanceQuoteDialogFRC' put: 6067;
		at: 6067 put: #IDD_T4FIFRequestPremiumFinanceQuoteDialogFRC;
		at: 'IDD_T4FlatChargeCoverageDialog' put: 6048;
		at: 6048 put: #IDD_T4FlatChargeCoverageDialog;
		at: 'IDD_T4FlatChargeCoverageDialogFRC' put: 6051;
		at: 6051 put: #IDD_T4FlatChargeCoverageDialogFRC;
		at: 'IDD_T4IBCCodeSearchDialog' put: 112;
		at: 112 put: #IDD_T4IBCCodeSearchDialog;
		at: 'IDD_T4IBCCodeSearchDialogFRC' put: 138;
		at: 138 put: #IDD_T4IBCCodeSearchDialogFRC;
		at: 'IDD_T4InsuranceScheduleDialog' put: 517;
		at: 517 put: #IDD_T4InsuranceScheduleDialog;
		at: 'IDD_T4InsuranceScheduleDialogFRC' put: 6041;
		at: 6041 put: #IDD_T4InsuranceScheduleDialogFRC;
		at: 'IDD_T4InsuredDialogBrokeragePage' put: 183;
		at: 183 put: #IDD_T4InsuredDialogBrokeragePage;
		at: 'IDD_T4InsuredDialogBrokeragePageFRC' put: 275;
		at: 275 put: #IDD_T4InsuredDialogBrokeragePageFRC;
		at: 'IDD_T4InsuredDialogBusinessOperationPage' put: 109;
		at: 109 put: #IDD_T4InsuredDialogBusinessOperationPage;
		at: 'IDD_T4InsuredDialogBusinessOperationPageFRC' put: 321;
		at: 321 put: #IDD_T4InsuredDialogBusinessOperationPageFRC;
		at: 'IDD_T4InsuredDialogClaimsPage' put: 168;
		at: 168 put: #IDD_T4InsuredDialogClaimsPage;
		at: 'IDD_T4InsuredDialogClaimsPageFRC' put: 228;
		at: 228 put: #IDD_T4InsuredDialogClaimsPageFRC;
		at: 'IDD_T4InsuredDialogGeneralPage' put: 106;
		at: 106 put: #IDD_T4InsuredDialogGeneralPage;
		at: 'IDD_T4InsuredDialogGeneralPageFRC' put: 264;
		at: 264 put: #IDD_T4InsuredDialogGeneralPageFRC;
		at: 'IDD_T4InsuredDialogLloydsPage' put: 406;
		at: 406 put: #IDD_T4InsuredDialogLloydsPage;
		at: 'IDD_T4InsuredDialogLloydsPageFRC' put: 433;
		at: 433 put: #IDD_T4InsuredDialogLloydsPageFRC;
		at: 'IDD_T4InsuredDialogMiscPage' put: 129;
		at: 129 put: #IDD_T4InsuredDialogMiscPage;
		at: 'IDD_T4InsuredDialogMiscPageFRC' put: 230;
		at: 230 put: #IDD_T4InsuredDialogMiscPageFRC;
		at: 'IDD_T4InsuredDialogPreviousPolicyPage' put: 195;
		at: 195 put: #IDD_T4InsuredDialogPreviousPolicyPage;
		at: 'IDD_T4InsuredDialogPreviousPolicyPageFRC' put: 149;
		at: 149 put: #IDD_T4InsuredDialogPreviousPolicyPageFRC;
		at: 'IDD_T4InterestedPartyDialogGeneralPage' put: 141;
		at: 141 put: #IDD_T4InterestedPartyDialogGeneralPage;
		at: 'IDD_T4InterestedPartyDialogGeneralPageFRC' put: 179;
		at: 179 put: #IDD_T4InterestedPartyDialogGeneralPageFRC;
		at: 'IDD_T4LegacyCertificateDialogCoveragesPage' put: 204;
		at: 204 put: #IDD_T4LegacyCertificateDialogCoveragesPage;
		at: 'IDD_T4LegacyCertificateDialogCoveragesPageFRC' put: 267;
		at: 267 put: #IDD_T4LegacyCertificateDialogCoveragesPageFRC;
		at: 'IDD_T4LegacyCertificateDialogHolderPage' put: 148;
		at: 148 put: #IDD_T4LegacyCertificateDialogHolderPage;
		at: 'IDD_T4LegacyCertificateDialogHolderPageFRC' put: 134;
		at: 134 put: #IDD_T4LegacyCertificateDialogHolderPageFRC;
		at: 'IDD_T4LegacyCertificateDialogInterestedPartyPage' put: 161;
		at: 161 put: #IDD_T4LegacyCertificateDialogInterestedPartyPage;
		at: 'IDD_T4LegacyCertificateDialogInterestedPartyPageFRC' put: 114;
		at: 114 put: #IDD_T4LegacyCertificateDialogInterestedPartyPageFRC;
		at: 'IDD_T4ListViewDialog' put: 397;
		at: 397 put: #IDD_T4ListViewDialog;
		yourself.!
 
initItemIDsPwMain15: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDD_T4ListViewDialogFRC' put: 436;
		at: 436 put: #IDD_T4ListViewDialogFRC;
		at: 'IDD_T4LloydsLineageExportReportDialog' put: 510;
		at: 510 put: #IDD_T4LloydsLineageExportReportDialog;
		at: 'IDD_T4LloydsLineageExportReportDialogFRC' put: 514;
		at: 514 put: #IDD_T4LloydsLineageExportReportDialogFRC;
		at: 'IDD_T4LocationDialogCodingPage' put: 139;
		at: 139 put: #IDD_T4LocationDialogCodingPage;
		at: 'IDD_T4LocationDialogCodingPage2' put: 338;
		at: 338 put: #IDD_T4LocationDialogCodingPage2;
		at: 'IDD_T4LocationDialogCodingPage2FRC' put: 339;
		at: 339 put: #IDD_T4LocationDialogCodingPage2FRC;
		at: 'IDD_T4LocationDialogCodingPageFRC' put: 306;
		at: 306 put: #IDD_T4LocationDialogCodingPageFRC;
		at: 'IDD_T4LocationDialogGeneralPage' put: 167;
		at: 167 put: #IDD_T4LocationDialogGeneralPage;
		at: 'IDD_T4LocationDialogGeneralPageENU' put: 262;
		at: 262 put: #IDD_T4LocationDialogGeneralPageENU;
		at: 'IDD_T4LocationDialogGeneralPageFRC' put: 233;
		at: 233 put: #IDD_T4LocationDialogGeneralPageFRC;
		at: 'IDD_T4LoginDialog' put: 391;
		at: 391 put: #IDD_T4LoginDialog;
		at: 'IDD_T4LoginWithSiteSelectorDialog' put: 6107;
		at: 6107 put: #IDD_T4LoginWithSiteSelectorDialog;
		at: 'IDD_T4LossPayeeOnDialog' put: 249;
		at: 249 put: #IDD_T4LossPayeeOnDialog;
		at: 'IDD_T4LossPayeeOnDialogFRC' put: 253;
		at: 253 put: #IDD_T4LossPayeeOnDialogFRC;
		at: 'IDD_T4MultiRFQBuilderDialog' put: 411;
		at: 411 put: #IDD_T4MultiRFQBuilderDialog;
		at: 'IDD_T4MultiRFQBuilderDialogFRC' put: 437;
		at: 437 put: #IDD_T4MultiRFQBuilderDialogFRC;
		at: 'IDD_T4NoPaymentPage' put: 155;
		at: 155 put: #IDD_T4NoPaymentPage;
		at: 'IDD_T4OccupancyDialog' put: 243;
		at: 243 put: #IDD_T4OccupancyDialog;
		at: 'IDD_T4OccupancyDialogFRC' put: 296;
		at: 296 put: #IDD_T4OccupancyDialogFRC;
		at: 'IDD_T4OptionsDialogCmPrintPage' put: 119;
		at: 119 put: #IDD_T4OptionsDialogCmPrintPage;
		at: 'IDD_T4OptionsDialogCmPrintPageFRC' put: 286;
		at: 286 put: #IDD_T4OptionsDialogCmPrintPageFRC;
		at: 'IDD_T4OptionsDialogDeltekPage' put: 368;
		at: 368 put: #IDD_T4OptionsDialogDeltekPage;
		at: 'IDD_T4OptionsDialogDeltekPageFRC' put: 369;
		at: 369 put: #IDD_T4OptionsDialogDeltekPageFRC;
		at: 'IDD_T4OptionsDialogEmailPage' put: 265;
		at: 265 put: #IDD_T4OptionsDialogEmailPage;
		at: 'IDD_T4OptionsDialogEmailPageFRC' put: 202;
		at: 202 put: #IDD_T4OptionsDialogEmailPageFRC;
		at: 'IDD_T4OptionsDialogEMarketingPage' put: 273;
		at: 273 put: #IDD_T4OptionsDialogEMarketingPage;
		at: 'IDD_T4OptionsDialogEMarketingPageFRC' put: 259;
		at: 259 put: #IDD_T4OptionsDialogEMarketingPageFRC;
		at: 'IDD_T4OptionsDialogLocationPage' put: 297;
		at: 297 put: #IDD_T4OptionsDialogLocationPage;
		at: 'IDD_T4OptionsDialogLocationPageFRC' put: 127;
		at: 127 put: #IDD_T4OptionsDialogLocationPageFRC;
		at: 'IDD_T4OptionsDialogPolicyPage' put: 222;
		at: 222 put: #IDD_T4OptionsDialogPolicyPage;
		at: 'IDD_T4OptionsDialogPolicyPageFRC' put: 271;
		at: 271 put: #IDD_T4OptionsDialogPolicyPageFRC;
		at: 'IDD_T4OptionsDialogPowerBrokerPage' put: 121;
		at: 121 put: #IDD_T4OptionsDialogPowerBrokerPage;
		at: 'IDD_T4OptionsDialogPowerBrokerPageFRC' put: 282;
		at: 282 put: #IDD_T4OptionsDialogPowerBrokerPageFRC;
		at: 'IDD_T4OptionsDialogPreviewerPage' put: 184;
		at: 184 put: #IDD_T4OptionsDialogPreviewerPage;
		at: 'IDD_T4OptionsDialogPreviewerPageFRC' put: 276;
		at: 276 put: #IDD_T4OptionsDialogPreviewerPageFRC;
		at: 'IDD_T4OptionsDialogPrintPage' put: 281;
		at: 281 put: #IDD_T4OptionsDialogPrintPage;
		at: 'IDD_T4OptionsDialogPrintPageFRC' put: 216;
		at: 216 put: #IDD_T4OptionsDialogPrintPageFRC;
		at: 'IDD_T4OptionsDialogSchedulePage' put: 152;
		at: 152 put: #IDD_T4OptionsDialogSchedulePage;
		at: 'IDD_T4OptionsDialogSchedulePageFRC' put: 217;
		at: 217 put: #IDD_T4OptionsDialogSchedulePageFRC;
		at: 'IDD_T4OptionsDialogSearchPage' put: 175;
		at: 175 put: #IDD_T4OptionsDialogSearchPage;
		at: 'IDD_T4OptionsDialogSearchPageFRC' put: 117;
		at: 117 put: #IDD_T4OptionsDialogSearchPageFRC;
		at: 'IDD_T4OptionsDialogSesamePage' put: 434;
		at: 434 put: #IDD_T4OptionsDialogSesamePage;
		at: 'IDD_T4OptionsDialogSesamePageFRC' put: 435;
		at: 435 put: #IDD_T4OptionsDialogSesamePageFRC;
		at: 'IDD_T4OptionsDialogSigXPPage' put: 6052;
		at: 6052 put: #IDD_T4OptionsDialogSigXPPage;
		at: 'IDD_T4OptionsDialogSigXPPageFRC' put: 6055;
		at: 6055 put: #IDD_T4OptionsDialogSigXPPageFRC;
		at: 'IDD_T4OptionsDialogTAMPage' put: 293;
		at: 293 put: #IDD_T4OptionsDialogTAMPage;
		at: 'IDD_T4OptionsDialogTAMPageFRC' put: 251;
		at: 251 put: #IDD_T4OptionsDialogTAMPageFRC;
		at: 'IDD_T4OptionsDialogUG2Page' put: 6068;
		at: 6068 put: #IDD_T4OptionsDialogUG2Page;
		at: 'IDD_T4OptionsDialogUG2PageFRC' put: 6069;
		at: 6069 put: #IDD_T4OptionsDialogUG2PageFRC;
		at: 'IDD_T4OptionsDialogUpdateNotifyPage' put: 194;
		at: 194 put: #IDD_T4OptionsDialogUpdateNotifyPage;
		at: 'IDD_T4OptionsDialogUpdateNotifyPageFRC' put: 197;
		at: 197 put: #IDD_T4OptionsDialogUpdateNotifyPageFRC;
		at: 'IDD_T4OptionsDialogViewPage' put: 103;
		at: 103 put: #IDD_T4OptionsDialogViewPage;
		at: 'IDD_T4OptionsDialogViewPageFRC' put: 193;
		at: 193 put: #IDD_T4OptionsDialogViewPageFRC;
		at: 'IDD_T4PaymentPlanPage' put: 261;
		at: 261 put: #IDD_T4PaymentPlanPage;
		at: 'IDD_T4PaymentPlanPageFRC' put: 312;
		at: 312 put: #IDD_T4PaymentPlanPageFRC;
		at: 'IDD_T4PDFPolicyPrintDialog' put: 258;
		at: 258 put: #IDD_T4PDFPolicyPrintDialog;
		at: 'IDD_T4PDFPolicyPrintDialogFRC' put: 210;
		at: 210 put: #IDD_T4PDFPolicyPrintDialogFRC;
		at: 'IDD_T4PinkSlipsConfigurationDialog' put: 6096;
		at: 6096 put: #IDD_T4PinkSlipsConfigurationDialog;
		at: 'IDD_T4PinkSlipsConfigurationDialogFRC' put: 6103;
		at: 6103 put: #IDD_T4PinkSlipsConfigurationDialogFRC;
		at: 'IDD_T4PinkSlipsPrintDialog' put: 6076;
		at: 6076 put: #IDD_T4PinkSlipsPrintDialog;
		at: 'IDD_T4PinkSlipsPrintDialogFRC' put: 6104;
		at: 6104 put: #IDD_T4PinkSlipsPrintDialogFRC;
		at: 'IDD_T4PinkSlipsTemplatePropertiesDialog' put: 354;
		at: 354 put: #IDD_T4PinkSlipsTemplatePropertiesDialog;
		at: 'IDD_T4PinkSlipsTemplatePropertiesDialogFRC' put: 426;
		at: 426 put: #IDD_T4PinkSlipsTemplatePropertiesDialogFRC;
		at: 'IDD_T4PolicyDialogBinderPage' put: 118;
		at: 118 put: #IDD_T4PolicyDialogBinderPage;
		at: 'IDD_T4PolicyDialogBinderPageFRC' put: 284;
		at: 284 put: #IDD_T4PolicyDialogBinderPageFRC;
		at: 'IDD_T4PolicyDialogCancellationPage' put: 248;
		at: 248 put: #IDD_T4PolicyDialogCancellationPage;
		at: 'IDD_T4PolicyDialogCancellationPageFRC' put: 165;
		at: 165 put: #IDD_T4PolicyDialogCancellationPageFRC;
		at: 'IDD_T4PolicyDialogEndorsementPage' put: 108;
		at: 108 put: #IDD_T4PolicyDialogEndorsementPage;
		at: 'IDD_T4PolicyDialogEndorsementPage2' put: 180;
		at: 180 put: #IDD_T4PolicyDialogEndorsementPage2;
		at: 'IDD_T4PolicyDialogEndorsementPage2FRC' put: 6059;
		at: 6059 put: #IDD_T4PolicyDialogEndorsementPage2FRC;
		at: 'IDD_T4PolicyDialogEndorsementPageFRC' put: 308;
		at: 308 put: #IDD_T4PolicyDialogEndorsementPageFRC;
		at: 'IDD_T4PolicyDialogExtensionPage' put: 224;
		at: 224 put: #IDD_T4PolicyDialogExtensionPage;
		at: 'IDD_T4PolicyDialogExtensionPageFRC' put: 424;
		at: 424 put: #IDD_T4PolicyDialogExtensionPageFRC;
		at: 'IDD_T4PolicyDialogGeneralPage' put: 218;
		at: 218 put: #IDD_T4PolicyDialogGeneralPage;
		at: 'IDD_T4PolicyDialogGeneralPageENU' put: 250;
		at: 250 put: #IDD_T4PolicyDialogGeneralPageENU;
		at: 'IDD_T4PolicyDialogGeneralPageFRC' put: 268;
		at: 268 put: #IDD_T4PolicyDialogGeneralPageFRC;
		at: 'IDD_T4PolicyDialogLapsedPolicyPage' put: 140;
		at: 140 put: #IDD_T4PolicyDialogLapsedPolicyPage;
		at: 'IDD_T4PolicyDialogLapsedPolicyPageFRC' put: 425;
		at: 425 put: #IDD_T4PolicyDialogLapsedPolicyPageFRC;
		at: 'IDD_T4PolicyDialogNewPolicyPage' put: 130;
		at: 130 put: #IDD_T4PolicyDialogNewPolicyPage;
		at: 'IDD_T4PolicyDialogNewPolicyPageFRC' put: 188;
		at: 188 put: #IDD_T4PolicyDialogNewPolicyPageFRC;
		at: 'IDD_T4PolicyDialogPaymentPage' put: 213;
		at: 213 put: #IDD_T4PolicyDialogPaymentPage;
		at: 'IDD_T4PolicyDialogPremiumFinancePage' put: 6063;
		at: 6063 put: #IDD_T4PolicyDialogPremiumFinancePage;
		at: 'IDD_T4PolicyDialogPremiumFinancePageFRC' put: 6065;
		at: 6065 put: #IDD_T4PolicyDialogPremiumFinancePageFRC;
		at: 'IDD_T4PolicyDialogPremiumsPage' put: 227;
		at: 227 put: #IDD_T4PolicyDialogPremiumsPage;
		at: 'IDD_T4PolicyDialogPremiumsPageFRC' put: 157;
		at: 157 put: #IDD_T4PolicyDialogPremiumsPageFRC;
		at: 'IDD_T4PolicyDialogSubscriptionPage' put: 174;
		at: 174 put: #IDD_T4PolicyDialogSubscriptionPage;
		at: 'IDD_T4PolicyDialogSubscriptionPageFRC' put: 115;
		at: 115 put: #IDD_T4PolicyDialogSubscriptionPageFRC;
		at: 'IDD_T4PortfolioTransferReportDialog' put: 421;
		at: 421 put: #IDD_T4PortfolioTransferReportDialog;
		at: 'IDD_T4PortfolioTransferReportDialogFRC' put: 466;
		at: 466 put: #IDD_T4PortfolioTransferReportDialogFRC;
		at: 'IDD_T4PremiumPayableCalculatorDialog' put: 6074;
		at: 6074 put: #IDD_T4PremiumPayableCalculatorDialog;
		at: 'IDD_T4PremiumPayableCalculatorDialogFRC' put: 6075;
		at: 6075 put: #IDD_T4PremiumPayableCalculatorDialogFRC;
		at: 'IDD_T4PreviousPolicyDialog' put: 176;
		at: 176 put: #IDD_T4PreviousPolicyDialog;
		at: 'IDD_T4PreviousPolicyDialogENU' put: 287;
		at: 287 put: #IDD_T4PreviousPolicyDialogENU;
		at: 'IDD_T4PreviousPolicyDialogFRC' put: 136;
		at: 136 put: #IDD_T4PreviousPolicyDialogFRC;
		at: 'IDD_T4PrintCopyDetailsEditor' put: 185;
		at: 185 put: #IDD_T4PrintCopyDetailsEditor;
		at: 'IDD_T4PrintCopyDetailsEditorFRC' put: 125;
		at: 125 put: #IDD_T4PrintCopyDetailsEditorFRC;
		at: 'IDD_T4PrintCopyEditor' put: 260;
		at: 260 put: #IDD_T4PrintCopyEditor;
		at: 'IDD_T4PrintCopyEditorFRC' put: 309;
		at: 309 put: #IDD_T4PrintCopyEditorFRC;
		at: 'IDD_T4ProductLineInfoPage' put: 288;
		at: 288 put: #IDD_T4ProductLineInfoPage;
		at: 'IDD_T4ProductLineInfoPageFRC' put: 318;
		at: 318 put: #IDD_T4ProductLineInfoPageFRC;
		at: 'IDD_T4ProductLineModelPage' put: 257;
		at: 257 put: #IDD_T4ProductLineModelPage;
		yourself.!
 
initItemIDsPwMain16: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDD_T4ProductLineModelPageFRC' put: 207;
		at: 207 put: #IDD_T4ProductLineModelPageFRC;
		at: 'IDD_T4QuotationClientResponsePage' put: 289;
		at: 289 put: #IDD_T4QuotationClientResponsePage;
		at: 'IDD_T4QuotationClientResponsePageFRC' put: 272;
		at: 272 put: #IDD_T4QuotationClientResponsePageFRC;
		at: 'IDD_T4QuotationCompanyResponsePage' put: 247;
		at: 247 put: #IDD_T4QuotationCompanyResponsePage;
		at: 'IDD_T4QuotationCompanyResponsePageFRC' put: 163;
		at: 163 put: #IDD_T4QuotationCompanyResponsePageFRC;
		at: 'IDD_T4QuotationDetailsPage' put: 209;
		at: 209 put: #IDD_T4QuotationDetailsPage;
		at: 'IDD_T4QuotationDetailsPageFRC' put: 156;
		at: 156 put: #IDD_T4QuotationDetailsPageFRC;
		at: 'IDD_T4ReceiveQuotationDownloadDialog' put: 416;
		at: 416 put: #IDD_T4ReceiveQuotationDownloadDialog;
		at: 'IDD_T4ReceiveQuotationDownloadDialogFRC' put: 427;
		at: 427 put: #IDD_T4ReceiveQuotationDownloadDialogFRC;
		at: 'IDD_T4RenumberRisksDialog' put: 212;
		at: 212 put: #IDD_T4RenumberRisksDialog;
		at: 'IDD_T4RenumberRisksDialogFRC' put: 241;
		at: 241 put: #IDD_T4RenumberRisksDialogFRC;
		at: 'IDD_T4ReplaceCreateNewRiskDialog' put: 192;
		at: 192 put: #IDD_T4ReplaceCreateNewRiskDialog;
		at: 'IDD_T4ReplaceCreateNewRiskDialogFRC' put: 280;
		at: 280 put: #IDD_T4ReplaceCreateNewRiskDialogFRC;
		at: 'IDD_T4RFQBuilderOptionsDialog' put: 413;
		at: 413 put: #IDD_T4RFQBuilderOptionsDialog;
		at: 'IDD_T4RFQBuilderOptionsDialogFRC' put: 439;
		at: 439 put: #IDD_T4RFQBuilderOptionsDialogFRC;
		at: 'IDD_T4RFQDefinitionDialog' put: 431;
		at: 431 put: #IDD_T4RFQDefinitionDialog;
		at: 'IDD_T4RFQDefinitionDialogFRC' put: 440;
		at: 440 put: #IDD_T4RFQDefinitionDialogFRC;
		at: 'IDD_T4RiskChangeDialog' put: 292;
		at: 292 put: #IDD_T4RiskChangeDialog;
		at: 'IDD_T4RiskChangeDialogFRC' put: 150;
		at: 150 put: #IDD_T4RiskChangeDialogFRC;
		at: 'IDD_T4RiskDialogGeneralLocationPage' put: 166;
		at: 166 put: #IDD_T4RiskDialogGeneralLocationPage;
		at: 'IDD_T4RiskDialogGeneralLocationPageFRC' put: 170;
		at: 170 put: #IDD_T4RiskDialogGeneralLocationPageFRC;
		at: 'IDD_T4RiskDialogGeneralPage' put: 302;
		at: 302 put: #IDD_T4RiskDialogGeneralPage;
		at: 'IDD_T4RiskDialogGeneralPageENU' put: 123;
		at: 123 put: #IDD_T4RiskDialogGeneralPageENU;
		at: 'IDD_T4RiskDialogGeneralPageFRC' put: 169;
		at: 169 put: #IDD_T4RiskDialogGeneralPageFRC;
		at: 'IDD_T4RiskDialogLossPayeesPage' put: 107;
		at: 107 put: #IDD_T4RiskDialogLossPayeesPage;
		at: 'IDD_T4RiskDialogLossPayeesPageFRC' put: 263;
		at: 263 put: #IDD_T4RiskDialogLossPayeesPageFRC;
		at: 'IDD_T4SaveTemplateDialog' put: 299;
		at: 299 put: #IDD_T4SaveTemplateDialog;
		at: 'IDD_T4SaveTemplateDialogFRC' put: 277;
		at: 277 put: #IDD_T4SaveTemplateDialogFRC;
		at: 'IDD_T4SelectAttachmentsDialog' put: 412;
		at: 412 put: #IDD_T4SelectAttachmentsDialog;
		at: 'IDD_T4SelectAttachmentsDialogFRC' put: 438;
		at: 438 put: #IDD_T4SelectAttachmentsDialogFRC;
		at: 'IDD_T4SelectDefinitionsDialog' put: 315;
		at: 315 put: #IDD_T4SelectDefinitionsDialog;
		at: 'IDD_T4SelectDefinitionsDialogFRC' put: 131;
		at: 131 put: #IDD_T4SelectDefinitionsDialogFRC;
		at: 'IDD_T4SelectPrintCopySectionsEditor' put: 142;
		at: 142 put: #IDD_T4SelectPrintCopySectionsEditor;
		at: 'IDD_T4SelectPrintCopySectionsEditorFRC' put: 144;
		at: 144 put: #IDD_T4SelectPrintCopySectionsEditorFRC;
		at: 'IDD_T4SimpleContactDialog' put: 414;
		at: 414 put: #IDD_T4SimpleContactDialog;
		at: 'IDD_T4SimpleContactDialogFRC' put: 441;
		at: 441 put: #IDD_T4SimpleContactDialogFRC;
		at: 'IDD_T4SubscriberDialogEMarketingPage' put: 221;
		at: 221 put: #IDD_T4SubscriberDialogEMarketingPage;
		at: 'IDD_T4SubscriberDialogEMarketingPageFRC' put: 151;
		at: 151 put: #IDD_T4SubscriberDialogEMarketingPageFRC;
		at: 'IDD_T4SubscriberDialogGeneralPageUS' put: 187;
		at: 187 put: #IDD_T4SubscriberDialogGeneralPageUS;
		at: 'IDD_T4SubscriptionDialog' put: 122;
		at: 122 put: #IDD_T4SubscriptionDialog;
		at: 'IDD_T4SubscriptionDialogFRC' put: 322;
		at: 322 put: #IDD_T4SubscriptionDialogFRC;
		at: 'IDD_T4TableImportExportDialog' put: 419;
		at: 419 put: #IDD_T4TableImportExportDialog;
		at: 'IDD_T4TableImportExportDialogFRC' put: 484;
		at: 484 put: #IDD_T4TableImportExportDialogFRC;
		at: 'IDD_T4TableImportExportLayoutDialog' put: 463;
		at: 463 put: #IDD_T4TableImportExportLayoutDialog;
		at: 'IDD_T4TableImportExportLayoutDialogFRC' put: 485;
		at: 485 put: #IDD_T4TableImportExportLayoutDialogFRC;
		at: 'IDD_T4TableImportExportLayoutManagerDialog' put: 420;
		at: 420 put: #IDD_T4TableImportExportLayoutManagerDialog;
		at: 'IDD_T4TableImportExportLayoutManagerDialogFRC' put: 486;
		at: 486 put: #IDD_T4TableImportExportLayoutManagerDialogFRC;
		at: 'IDD_T4TableOfContentsDialog' put: 317;
		at: 317 put: #IDD_T4TableOfContentsDialog;
		at: 'IDD_T4TableOfContentsDialogFRC' put: 137;
		at: 137 put: #IDD_T4TableOfContentsDialogFRC;
		at: 'IDD_T4ThirdPartyServiceDialog' put: 6053;
		at: 6053 put: #IDD_T4ThirdPartyServiceDialog;
		at: 'IDD_T4ThirdPartyServiceDialogFRC' put: 6054;
		at: 6054 put: #IDD_T4ThirdPartyServiceDialogFRC;
		at: 'IDD_T4TransitionDialog' put: 449;
		at: 449 put: #IDD_T4TransitionDialog;
		at: 'IDD_T4TransitionDialogBindPolicyPage' put: 418;
		at: 418 put: #IDD_T4TransitionDialogBindPolicyPage;
		at: 'IDD_T4TransitionDialogBindPolicyPageFRC' put: 467;
		at: 467 put: #IDD_T4TransitionDialogBindPolicyPageFRC;
		at: 'IDD_T4TransitionDialogCancelPolicyPage' put: 451;
		at: 451 put: #IDD_T4TransitionDialogCancelPolicyPage;
		at: 'IDD_T4TransitionDialogCancelPolicyPageFRC' put: 469;
		at: 469 put: #IDD_T4TransitionDialogCancelPolicyPageFRC;
		at: 'IDD_T4TransitionDialogEndorsePolicyPage' put: 446;
		at: 446 put: #IDD_T4TransitionDialogEndorsePolicyPage;
		at: 'IDD_T4TransitionDialogEndorsePolicyPageFRC' put: 470;
		at: 470 put: #IDD_T4TransitionDialogEndorsePolicyPageFRC;
		at: 'IDD_T4TransitionDialogExportLloydsLineagePage' put: 501;
		at: 501 put: #IDD_T4TransitionDialogExportLloydsLineagePage;
		at: 'IDD_T4TransitionDialogExportLloydsLineagePageFRC' put: 430;
		at: 430 put: #IDD_T4TransitionDialogExportLloydsLineagePageFRC;
		at: 'IDD_T4TransitionDialogExtendPolicyPage' put: 448;
		at: 448 put: #IDD_T4TransitionDialogExtendPolicyPage;
		at: 'IDD_T4TransitionDialogExtendPolicyPageFRC' put: 471;
		at: 471 put: #IDD_T4TransitionDialogExtendPolicyPageFRC;
		at: 'IDD_T4TransitionDialogInquiryPage' put: 462;
		at: 462 put: #IDD_T4TransitionDialogInquiryPage;
		at: 'IDD_T4TransitionDialogInquiryPageFRC' put: 472;
		at: 472 put: #IDD_T4TransitionDialogInquiryPageFRC;
		at: 'IDD_T4TransitionDialogIssuePolicyPage' put: 453;
		at: 453 put: #IDD_T4TransitionDialogIssuePolicyPage;
		at: 'IDD_T4TransitionDialogIssuePolicyPageFRC' put: 473;
		at: 473 put: #IDD_T4TransitionDialogIssuePolicyPageFRC;
		at: 'IDD_T4TransitionDialogLapsePolicyPage' put: 454;
		at: 454 put: #IDD_T4TransitionDialogLapsePolicyPage;
		at: 'IDD_T4TransitionDialogLapsePolicyPageFRC' put: 474;
		at: 474 put: #IDD_T4TransitionDialogLapsePolicyPageFRC;
		at: 'IDD_T4TransitionDialogPortfolioTransferPage' put: 461;
		at: 461 put: #IDD_T4TransitionDialogPortfolioTransferPage;
		at: 'IDD_T4TransitionDialogPortfolioTransferPageFRC' put: 475;
		at: 475 put: #IDD_T4TransitionDialogPortfolioTransferPageFRC;
		at: 'IDD_T4TransitionDialogReceiveClientResponsePage' put: 459;
		at: 459 put: #IDD_T4TransitionDialogReceiveClientResponsePage;
		at: 'IDD_T4TransitionDialogReceiveClientResponsePageFRC' put: 476;
		at: 476 put: #IDD_T4TransitionDialogReceiveClientResponsePageFRC;
		at: 'IDD_T4TransitionDialogReceiveQuotationPage' put: 455;
		at: 455 put: #IDD_T4TransitionDialogReceiveQuotationPage;
		at: 'IDD_T4TransitionDialogReceiveQuotationPageFRC' put: 477;
		at: 477 put: #IDD_T4TransitionDialogReceiveQuotationPageFRC;
		at: 'IDD_T4TransitionDialogReinstatePolicyPage' put: 456;
		at: 456 put: #IDD_T4TransitionDialogReinstatePolicyPage;
		at: 'IDD_T4TransitionDialogReinstatePolicyPageFRC' put: 478;
		at: 478 put: #IDD_T4TransitionDialogReinstatePolicyPageFRC;
		at: 'IDD_T4TransitionDialogReissuePolicyPage' put: 452;
		at: 452 put: #IDD_T4TransitionDialogReissuePolicyPage;
		at: 'IDD_T4TransitionDialogReissuePolicyPageFRC' put: 479;
		at: 479 put: #IDD_T4TransitionDialogReissuePolicyPageFRC;
		at: 'IDD_T4TransitionDialogRemarketPolicyPage' put: 457;
		at: 457 put: #IDD_T4TransitionDialogRemarketPolicyPage;
		at: 'IDD_T4TransitionDialogRemarketPolicyPageFRC' put: 480;
		at: 480 put: #IDD_T4TransitionDialogRemarketPolicyPageFRC;
		at: 'IDD_T4TransitionDialogRenewPolicyPage' put: 450;
		at: 450 put: #IDD_T4TransitionDialogRenewPolicyPage;
		at: 'IDD_T4TransitionDialogRenewPolicyPageFRC' put: 481;
		at: 481 put: #IDD_T4TransitionDialogRenewPolicyPageFRC;
		at: 'IDD_T4TransitionDialogReplaceBinderForNewPolicyPage' put: 460;
		at: 460 put: #IDD_T4TransitionDialogReplaceBinderForNewPolicyPage;
		at: 'IDD_T4TransitionDialogReplaceBinderForNewPolicyPageFRC' put: 482;
		at: 482 put: #IDD_T4TransitionDialogReplaceBinderForNewPolicyPageFRC;
		at: 'IDD_T4TransitionDialogReplaceBinderPage' put: 458;
		at: 458 put: #IDD_T4TransitionDialogReplaceBinderPage;
		at: 'IDD_T4TransitionDialogReplaceBinderPageFRC' put: 483;
		at: 483 put: #IDD_T4TransitionDialogReplaceBinderPageFRC;
		at: 'IDD_T4URLsDialog' put: 198;
		at: 198 put: #IDD_T4URLsDialog;
		at: 'IDD_T4URLsDialogFRC' put: 314;
		at: 314 put: #IDD_T4URLsDialogFRC;
		at: 'IDD_T4USIndustryCodeSearchDialog' put: 126;
		at: 126 put: #IDD_T4USIndustryCodeSearchDialog;
		at: 'IDD_T4VerifyCompanyDialog' put: 511;
		at: 511 put: #IDD_T4VerifyCompanyDialog;
		at: 'IDD_T4VerifyCompanyDialogFRC' put: 512;
		at: 512 put: #IDD_T4VerifyCompanyDialogFRC;
		at: 'IDD_T4WebSubmissionPropertiesGeneralPage' put: 415;
		at: 415 put: #IDD_T4WebSubmissionPropertiesGeneralPage;
		at: 'IDD_T4WebSubmissionPropertiesGeneralPageFRC' put: 428;
		at: 428 put: #IDD_T4WebSubmissionPropertiesGeneralPageFRC;
		at: 'IDD_T4WindowsTaskSchedulerDialog' put: 6108;
		at: 6108 put: #IDD_T4WindowsTaskSchedulerDialog;
		at: 'IDD_T4WindowsTaskSchedulerDialogFRC' put: 6109;
		at: 6109 put: #IDD_T4WindowsTaskSchedulerDialogFRC;
		at: 'IDD_TemplatePropertiesPage' put: 387;
		at: 387 put: #IDD_TemplatePropertiesPage;
		at: 'IDD_TemplatePropertiesPageFRC' put: 388;
		at: 388 put: #IDD_TemplatePropertiesPageFRC;
		at: 'IDD_VersionInfoActivationPage' put: 143;
		at: 143 put: #IDD_VersionInfoActivationPage;
		at: 'IDD_VersionInfoActivationPageFRC' put: 186;
		at: 186 put: #IDD_VersionInfoActivationPageFRC;
		at: 'IDD_VersionInfoPage' put: 307;
		at: 307 put: #IDD_VersionInfoPage;
		at: 'IDD_VersionInfoPageFRC' put: 190;
		at: 190 put: #IDD_VersionInfoPageFRC;
		yourself.!
 
initItemIDsPwMain17: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDI_Aviva' put: 6033;
		at: 6033 put: #IDI_Aviva;
		at: 'IDI_Axa' put: 6003;
		at: 6003 put: #IDI_Axa;
		at: 'IDI_Blank' put: 6015;
		at: 6015 put: #IDI_Blank;
		at: 'IDI_CNS' put: 6037;
		at: 6037 put: #IDI_CNS;
		at: 'IDI_Coachman' put: 6029;
		at: 6029 put: #IDI_Coachman;
		at: 'IDI_Deltek' put: 6014;
		at: 6014 put: #IDI_Deltek;
		at: 'IDI_Dominion' put: 6036;
		at: 6036 put: #IDI_Dominion;
		at: 'IDI_Email' put: 6016;
		at: 6016 put: #IDI_Email;
		at: 'IDI_EMarketing' put: 6026;
		at: 6026 put: #IDI_EMarketing;
		at: 'IDI_EMarketingD' put: 6028;
		at: 6028 put: #IDI_EMarketingD;
		at: 'IDI_EMarketingH' put: 6027;
		at: 6027 put: #IDI_EMarketingH;
		at: 'IDI_Fax' put: 6005;
		at: 6005 put: #IDI_Fax;
		at: 'IDI_Field' put: 6009;
		at: 6009 put: #IDI_Field;
		at: 'IDI_ICPEI' put: 6030;
		at: 6030 put: #IDI_ICPEI;
		at: 'IDI_INGLion' put: 6000;
		at: 6000 put: #IDI_INGLion;
		at: 'IDI_InsuredFile' put: 6017;
		at: 6017 put: #IDI_InsuredFile;
		at: 'IDI_InsuredFileD' put: 6023;
		at: 6023 put: #IDI_InsuredFileD;
		at: 'IDI_InsuredFileH' put: 6020;
		at: 6020 put: #IDI_InsuredFileH;
		at: 'IDI_Intact' put: 6034;
		at: 6034 put: #IDI_Intact;
		at: 'IDI_InternetExplorer' put: 6013;
		at: 6013 put: #IDI_InternetExplorer;
		at: 'IDI_Lloyds' put: 6035;
		at: 6035 put: #IDI_Lloyds;
		at: 'IDI_ModelFile' put: 6018;
		at: 6018 put: #IDI_ModelFile;
		at: 'IDI_ModelFileD' put: 6024;
		at: 6024 put: #IDI_ModelFileD;
		at: 'IDI_ModelFileH' put: 6021;
		at: 6021 put: #IDI_ModelFileH;
		at: 'IDI_Number2' put: 6012;
		at: 6012 put: #IDI_Number2;
		at: 'IDI_PDF' put: 6002;
		at: 6002 put: #IDI_PDF;
		at: 'IDI_Printer' put: 6006;
		at: 6006 put: #IDI_Printer;
		at: 'IDI_PWorksLogo' put: 6007;
		at: 6007 put: #IDI_PWorksLogo;
		at: 'IDI_PWorksWordLogo' put: 6008;
		at: 6008 put: #IDI_PWorksWordLogo;
		at: 'IDI_RSA' put: 6038;
		at: 6038 put: #IDI_RSA;
		at: 'IDI_SGICanada' put: 6031;
		at: 6031 put: #IDI_SGICanada;
		at: 'IDI_SiteFile' put: 6019;
		at: 6019 put: #IDI_SiteFile;
		at: 'IDI_SiteFileD' put: 6025;
		at: 6025 put: #IDI_SiteFileD;
		at: 'IDI_SiteFileH' put: 6022;
		at: 6022 put: #IDI_SiteFileH;
		at: 'IDI_String' put: 6032;
		at: 6032 put: #IDI_String;
		at: 'IDI_TableColumn' put: 6011;
		at: 6011 put: #IDI_TableColumn;
		at: 'IDI_TableRow' put: 6010;
		at: 6010 put: #IDI_TableRow;
		at: 'IDI_TAM' put: 6001;
		at: 6001 put: #IDI_TAM;
		at: 'IDI_ToDoList' put: 6004;
		at: 6004 put: #IDI_ToDoList;
		at: 'IIDC_UseDefaultThemeNameButton' put: 50;
		at: 50 put: #IIDC_UseDefaultThemeNameButton;
		at: 'LocationCombo' put: 46;
		at: 46 put: #LocationCombo;
		at: 'NameEdit' put: 22;
		at: 22 put: #NameEdit;
		at: 'No' put: 41;
		at: 41 put: #No;
		at: 'NumberEdit' put: 52;
		at: 52 put: #NumberEdit;
		at: 'OK' put: 1;
		at: 1 put: #OK;
		at: 'OutstandingTasksDialog' put: 56;
		at: 56 put: #OutstandingTasksDialog;
		at: 'OutstandingTasksDialogFRC' put: 19;
		at: 19 put: #OutstandingTasksDialogFRC;
		at: 'PathText' put: 65;
		at: 65 put: #PathText;
		at: 'PolicyViewFindReplaceDialog' put: 30;
		at: 30 put: #PolicyViewFindReplaceDialog;
		at: 'PolicyViewFindReplaceDialogFRC' put: 53;
		at: 53 put: #PolicyViewFindReplaceDialogFRC;
		at: 'PrintDraft' put: 36;
		at: 36 put: #PrintDraft;
		at: 'PromptForPostalAddressCheckBox' put: 60;
		at: 60 put: #PromptForPostalAddressCheckBox;
		at: 'ProvinceEdit' put: 48;
		at: 48 put: #ProvinceEdit;
		at: 'PseudoLocationDialog' put: 57;
		at: 57 put: #PseudoLocationDialog;
		at: 'PseudoLocationDialogFRC' put: 14;
		at: 14 put: #PseudoLocationDialogFRC;
		at: 'RiskDefList' put: 44;
		at: 44 put: #RiskDefList;
		at: 'ShowContentsCheck' put: 31;
		at: 31 put: #ShowContentsCheck;
		at: 'SitePromptIcon' put: 34;
		at: 34 put: #SitePromptIcon;
		at: 'StatusBarCheckBox' put: 47;
		at: 47 put: #StatusBarCheckBox;
		at: 'SubtotalsRadio' put: 58;
		at: 58 put: #SubtotalsRadio;
		at: 'ToLetter' put: 37;
		at: 37 put: #ToLetter;
		at: 'ToolbarCheckBox' put: 54;
		at: 54 put: #ToolbarCheckBox;
		at: 'TotalsRadio' put: 67;
		at: 67 put: #TotalsRadio;
		at: 'ToText' put: 66;
		at: 66 put: #ToText;
		at: 'UpdatePolicyIcon' put: 25;
		at: 25 put: #UpdatePolicyIcon;
		at: 'UseShortRateOnCancellationsCheckBox' put: 61;
		at: 61 put: #UseShortRateOnCancellationsCheckBox;
		at: 'Yes' put: 70;
		at: 70 put: #Yes;
		yourself.!
 
initItemIDsPwMain2: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDC_AllRadio' put: 1197;
		at: 1197 put: #IDC_AllRadio;
		at: 'IDC_AllRiskTypesRadio' put: 1639;
		at: 1639 put: #IDC_AllRiskTypesRadio;
		at: 'IDC_AllTransactionsRadio' put: 1087;
		at: 1087 put: #IDC_AllTransactionsRadio;
		at: 'IDC_AmountPremiumPaidEdit' put: 1570;
		at: 1570 put: #IDC_AmountPremiumPaidEdit;
		at: 'IDC_AmountPremiumPaidStatic' put: 1348;
		at: 1348 put: #IDC_AmountPremiumPaidStatic;
		at: 'IDC_AnticipatedPremiumEdit' put: 1380;
		at: 1380 put: #IDC_AnticipatedPremiumEdit;
		at: 'IDC_AnyCheckbox' put: 1708;
		at: 1708 put: #IDC_AnyCheckbox;
		at: 'IDC_AppIDEdit' put: 1748;
		at: 1748 put: #IDC_AppIDEdit;
		at: 'IDC_AppliesLocationCheckbox' put: 1702;
		at: 1702 put: #IDC_AppliesLocationCheckbox;
		at: 'IDC_AppliesPolicyCheckbox' put: 1700;
		at: 1700 put: #IDC_AppliesPolicyCheckbox;
		at: 'IDC_AppliesProjectCheckbox' put: 1701;
		at: 1701 put: #IDC_AppliesProjectCheckbox;
		at: 'IDC_Apply' put: 2092;
		at: 2092 put: #IDC_Apply;
		at: 'IDC_ApplyMRPRadio' put: 1127;
		at: 1127 put: #IDC_ApplyMRPRadio;
		at: 'IDC_AssignedUserCombo' put: 1241;
		at: 1241 put: #IDC_AssignedUserCombo;
		at: 'IDC_AssignPolicyNumber' put: 1027;
		at: 1027 put: #IDC_AssignPolicyNumber;
		at: 'IDC_AttachApplication' put: 1738;
		at: 1738 put: #IDC_AttachApplication;
		at: 'IDC_AttachFile' put: 1362;
		at: 1362 put: #IDC_AttachFile;
		at: 'IDC_AttachmentFilterCombo' put: 1565;
		at: 1565 put: #IDC_AttachmentFilterCombo;
		at: 'IDC_Attachments' put: 1832;
		at: 1832 put: #IDC_Attachments;
		at: 'IDC_AttachmentsList' put: 1619;
		at: 1619 put: #IDC_AttachmentsList;
		at: 'IDC_AttachmentsStatic' put: 1350;
		at: 1350 put: #IDC_AttachmentsStatic;
		at: 'IDC_AttachNote' put: 1189;
		at: 1189 put: #IDC_AttachNote;
		at: 'IDC_AttentionCombo' put: 1083;
		at: 1083 put: #IDC_AttentionCombo;
		at: 'IDC_AttentionEdit' put: 1000;
		at: 1000 put: #IDC_AttentionEdit;
		at: 'IDC_AttentionStatic' put: 1134;
		at: 1134 put: #IDC_AttentionStatic;
		at: 'IDC_AudienceEdit' put: 1628;
		at: 1628 put: #IDC_AudienceEdit;
		at: 'IDC_AuthorCombo' put: 1508;
		at: 1508 put: #IDC_AuthorCombo;
		at: 'IDC_AuthorizedRepCombo' put: 1088;
		at: 1088 put: #IDC_AuthorizedRepCombo;
		at: 'IDC_AutoEALimitEdit' put: 1712;
		at: 1712 put: #IDC_AutoEALimitEdit;
		at: 'IDC_AutomaticResetCommissionsCheck' put: 1271;
		at: 1271 put: #IDC_AutomaticResetCommissionsCheck;
		at: 'IDC_AvailableColumnsLabel2' put: 1904;
		at: 1904 put: #IDC_AvailableColumnsLabel2;
		at: 'IDC_AvailableList' put: 1890;
		at: 1890 put: #IDC_AvailableList;
		at: 'IDC_AvailableListView' put: 1411;
		at: 1411 put: #IDC_AvailableListView;
		at: 'IDC_BackgroundStatic' put: 1791;
		at: 1791 put: #IDC_BackgroundStatic;
		at: 'IDC_BIAccidentDeductibleEdit' put: 1144;
		at: 1144 put: #IDC_BIAccidentDeductibleEdit;
		at: 'IDC_BIAccidentLimitEdit' put: 1478;
		at: 1478 put: #IDC_BIAccidentLimitEdit;
		at: 'IDC_BillingTypeFrame' put: 1261;
		at: 1261 put: #IDC_BillingTypeFrame;
		at: 'IDC_BinderCheck' put: 1578;
		at: 1578 put: #IDC_BinderCheck;
		at: 'IDC_BinderNotificationCheckbox' put: 1869;
		at: 1869 put: #IDC_BinderNotificationCheckbox;
		at: 'IDC_BinderNumberEdit' put: 1067;
		at: 1067 put: #IDC_BinderNumberEdit;
		at: 'IDC_BindTimeEdit' put: 6080;
		at: 6080 put: #IDC_BindTimeEdit;
		at: 'IDC_BIPDAggregateLimitEdit' put: 1483;
		at: 1483 put: #IDC_BIPDAggregateLimitEdit;
		at: 'IDC_BIPDDeductibleEdit' put: 1317;
		at: 1317 put: #IDC_BIPDDeductibleEdit;
		at: 'IDC_BIPDLimitEdit' put: 1443;
		at: 1443 put: #IDC_BIPDLimitEdit;
		at: 'IDC_BIPDOccurrenceLimitEdit' put: 1316;
		at: 1316 put: #IDC_BIPDOccurrenceLimitEdit;
		at: 'IDC_BIPersonDeductibleEdit' put: 1638;
		at: 1638 put: #IDC_BIPersonDeductibleEdit;
		at: 'IDC_BIPersonLimitEdit' put: 1107;
		at: 1107 put: #IDC_BIPersonLimitEdit;
		at: 'IDC_BlanketRadio' put: 6086;
		at: 6086 put: #IDC_BlanketRadio;
		at: 'IDC_BlankRadio' put: 1045;
		at: 1045 put: #IDC_BlankRadio;
		at: 'IDC_BothRadio' put: 1779;
		at: 1779 put: #IDC_BothRadio;
		at: 'IDC_BroadRadio' put: 1373;
		at: 1373 put: #IDC_BroadRadio;
		at: 'IDC_BrokerageCombo' put: 1627;
		at: 1627 put: #IDC_BrokerageCombo;
		at: 'IDC_BrokerageCommissionEdit' put: 1153;
		at: 1153 put: #IDC_BrokerageCommissionEdit;
		at: 'IDC_BrokerageCommissionStatic' put: 1605;
		at: 1605 put: #IDC_BrokerageCommissionStatic;
		at: 'IDC_BrokerageEdit' put: 2107;
		at: 2107 put: #IDC_BrokerageEdit;
		at: 'IDC_BrokerageExclamation' put: 1529;
		at: 1529 put: #IDC_BrokerageExclamation;
		at: 'IDC_BrokerageGroup' put: 1520;
		at: 1520 put: #IDC_BrokerageGroup;
		at: 'IDC_BrokerageStatic' put: 1669;
		at: 1669 put: #IDC_BrokerageStatic;
		at: 'IDC_BrokerageUseDefaultButton' put: 1304;
		at: 1304 put: #IDC_BrokerageUseDefaultButton;
		at: 'IDC_BrokerBillOption' put: 1128;
		at: 1128 put: #IDC_BrokerBillOption;
		at: 'IDC_BrokerEdit' put: 1020;
		at: 1020 put: #IDC_BrokerEdit;
		at: 'IDC_BrokerFeesAmountEdit' put: 2067;
		at: 2067 put: #IDC_BrokerFeesAmountEdit;
		at: 'IDC_BrokerNumberCombo' put: 1695;
		at: 1695 put: #IDC_BrokerNumberCombo;
		at: 'IDC_BrokerNumberEdit' put: 1300;
		at: 1300 put: #IDC_BrokerNumberEdit;
		at: 'IDC_BrokerNumberHelpText' put: 1844;
		at: 1844 put: #IDC_BrokerNumberHelpText;
		at: 'IDC_BrokerNumberStatic' put: 1773;
		at: 1773 put: #IDC_BrokerNumberStatic;
		at: 'IDC_BrokerNumberText' put: 1783;
		at: 1783 put: #IDC_BrokerNumberText;
		at: 'IDC_BrokerSignatureCombo' put: 1911;
		at: 1911 put: #IDC_BrokerSignatureCombo;
		at: 'IDC_BrokerSignatureThumbNail' put: 1912;
		at: 1912 put: #IDC_BrokerSignatureThumbNail;
		at: 'IDC_Browse' put: 1257;
		at: 1257 put: #IDC_Browse;
		at: 'IDC_BrowsePDF' put: 2000;
		at: 2000 put: #IDC_BrowsePDF;
		at: 'IDC_BuildingACVCheckbox' put: 1609;
		at: 1609 put: #IDC_BuildingACVCheckbox;
		at: 'IDC_BuildingCheckbox' put: 1683;
		at: 1683 put: #IDC_BuildingCheckbox;
		at: 'IDC_BuildingDeductibleEdit' put: 1922;
		at: 1922 put: #IDC_BuildingDeductibleEdit;
		at: 'IDC_BuildingLimitEdit' put: 1923;
		at: 1923 put: #IDC_BuildingLimitEdit;
		at: 'IDC_BuildingRCCheckbox' put: 1607;
		at: 1607 put: #IDC_BuildingRCCheckbox;
		at: 'IDC_BusinessIncomeCheckbox' put: 1092;
		at: 1092 put: #IDC_BusinessIncomeCheckbox;
		at: 'IDC_BusinessIncomeDeductibleEdit' put: 1692;
		at: 1692 put: #IDC_BusinessIncomeDeductibleEdit;
		at: 'IDC_BusinessIncomeLimitEdit' put: 1931;
		at: 1931 put: #IDC_BusinessIncomeLimitEdit;
		at: 'IDC_CalculatedPremiumEdit' put: 995;
		at: 995 put: #IDC_CalculatedPremiumEdit;
		at: 'IDC_CalculatedPremiumStatic' put: 2093;
		at: 2093 put: #IDC_CalculatedPremiumStatic;
		at: 'IDC_CalculatedTotalEdit' put: 994;
		at: 994 put: #IDC_CalculatedTotalEdit;
		at: 'IDC_CalculatedTotalStatic' put: 2085;
		at: 2085 put: #IDC_CalculatedTotalStatic;
		at: 'IDC_CallPhone' put: 2013;
		at: 2013 put: #IDC_CallPhone;
		at: 'IDC_CancelButton' put: 1524;
		at: 1524 put: #IDC_CancelButton;
		at: 'IDC_CancellationCheck' put: 1217;
		at: 1217 put: #IDC_CancellationCheck;
		at: 'IDC_CancellationNoticeEdit' put: 1038;
		at: 1038 put: #IDC_CancellationNoticeEdit;
		at: 'IDC_CargoCheckbox' put: 1984;
		at: 1984 put: #IDC_CargoCheckbox;
		at: 'IDC_CargoDeductibleEdit' put: 1945;
		at: 1945 put: #IDC_CargoDeductibleEdit;
		at: 'IDC_CargoEdit' put: 1965;
		at: 1965 put: #IDC_CargoEdit;
		at: 'IDC_CargoLimitEdit' put: 1946;
		at: 1946 put: #IDC_CargoLimitEdit;
		at: 'IDC_CaseSensitiveCheckBox' put: 1062;
		at: 1062 put: #IDC_CaseSensitiveCheckBox;
		at: 'IDC_CategoryCombo' put: 1311;
		at: 1311 put: #IDC_CategoryCombo;
		at: 'IDC_CategoryText' put: 1640;
		at: 1640 put: #IDC_CategoryText;
		at: 'IDC_CertificateNumberEdit' put: 1760;
		at: 1760 put: #IDC_CertificateNumberEdit;
		at: 'IDC_CertificateNumberStatic' put: 1762;
		at: 1762 put: #IDC_CertificateNumberStatic;
		at: 'IDC_ChangeByPercentageHelpLabel' put: 1992;
		at: 1992 put: #IDC_ChangeByPercentageHelpLabel;
		at: 'IDC_ChangeEncryption' put: 1276;
		at: 1276 put: #IDC_ChangeEncryption;
		at: 'IDC_ChangeList' put: 1463;
		at: 1463 put: #IDC_ChangeList;
		at: 'IDC_ChangeLocation' put: 1979;
		at: 1979 put: #IDC_ChangeLocation;
		at: 'IDC_ChangePolicyPremiumByPercentage' put: 1656;
		at: 1656 put: #IDC_ChangePolicyPremiumByPercentage;
		yourself.!

initItemIDsPwMain3: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDC_ChangeSchedulePremiumByPercentage' put: 1169;
		at: 1169 put: #IDC_ChangeSchedulePremiumByPercentage;
		at: 'IDC_ChangeStatic' put: 1042;
		at: 1042 put: #IDC_ChangeStatic;
		at: 'IDC_Check' put: 1075;
		at: 1075 put: #IDC_Check;
		at: 'IDC_CheckAll' put: 1575;
		at: 1575 put: #IDC_CheckAll;
		at: 'IDC_Checkbox1' put: 1047;
		at: 1047 put: #IDC_Checkbox1;
		at: 'IDC_Checkbox2' put: 1063;
		at: 1063 put: #IDC_Checkbox2;
		at: 'IDC_Checkbox3' put: 1079;
		at: 1079 put: #IDC_Checkbox3;
		at: 'IDC_Checkbox4' put: 1098;
		at: 1098 put: #IDC_Checkbox4;
		at: 'IDC_CheckForUpdates' put: 1005;
		at: 1005 put: #IDC_CheckForUpdates;
		at: 'IDC_CityEdit' put: 1009;
		at: 1009 put: #IDC_CityEdit;
		at: 'IDC_CityText' put: 1486;
		at: 1486 put: #IDC_CityText;
		at: 'IDC_CityTownPlaceEdit' put: 1115;
		at: 1115 put: #IDC_CityTownPlaceEdit;
		at: 'IDC_CivicNumberEdit' put: 1471;
		at: 1471 put: #IDC_CivicNumberEdit;
		at: 'IDC_CivicNumberSuffixCombo' put: 1085;
		at: 1085 put: #IDC_CivicNumberSuffixCombo;
		at: 'IDC_ClaimsList' put: 1239;
		at: 1239 put: #IDC_ClaimsList;
		at: 'IDC_ClaimsMadeCheckbox' put: 1086;
		at: 1086 put: #IDC_ClaimsMadeCheckbox;
		at: 'IDC_Clear' put: 1361;
		at: 1361 put: #IDC_Clear;
		at: 'IDC_ClearAll' put: 1154;
		at: 1154 put: #IDC_ClearAll;
		at: 'IDC_ClearAllButton' put: 1055;
		at: 1055 put: #IDC_ClearAllButton;
		at: 'IDC_ClearButton' put: 1531;
		at: 1531 put: #IDC_ClearButton;
		at: 'IDC_ClearLogin' put: 2147;
		at: 2147 put: #IDC_ClearLogin;
		at: 'IDC_ClearNoteButton' put: 1357;
		at: 1357 put: #IDC_ClearNoteButton;
		at: 'IDC_ClearPolicyDiscountButton' put: 1600;
		at: 1600 put: #IDC_ClearPolicyDiscountButton;
		at: 'IDC_ClearPremiumButton' put: 1122;
		at: 1122 put: #IDC_ClearPremiumButton;
		at: 'IDC_ClearTasks' put: 2153;
		at: 2153 put: #IDC_ClearTasks;
		at: 'IDC_Close' put: 1896;
		at: 1896 put: #IDC_Close;
		at: 'IDC_CodeEdit' put: 1621;
		at: 1621 put: #IDC_CodeEdit;
		at: 'IDC_COEDACVCheckbox' put: 1620;
		at: 1620 put: #IDC_COEDACVCheckbox;
		at: 'IDC_COEDCheckbox' put: 1686;
		at: 1686 put: #IDC_COEDCheckbox;
		at: 'IDC_COEDDeductibleEdit' put: 1698;
		at: 1698 put: #IDC_COEDDeductibleEdit;
		at: 'IDC_COEDLimitEdit' put: 1930;
		at: 1930 put: #IDC_COEDLimitEdit;
		at: 'IDC_COEDRCCheckbox' put: 1634;
		at: 1634 put: #IDC_COEDRCCheckbox;
		at: 'IDC_CoinsuranceCheckbox' put: 1953;
		at: 1953 put: #IDC_CoinsuranceCheckbox;
		at: 'IDC_CoinsurancePercentEdit' put: 1919;
		at: 1919 put: #IDC_CoinsurancePercentEdit;
		at: 'IDC_CombinedInsuranceScheduleRadio' put: 1672;
		at: 1672 put: #IDC_CombinedInsuranceScheduleRadio;
		at: 'IDC_CombinedLimitEdit' put: 1710;
		at: 1710 put: #IDC_CombinedLimitEdit;
		at: 'IDC_CommissionRateList' put: 1060;
		at: 1060 put: #IDC_CommissionRateList;
		at: 'IDC_CommissionsFrame' put: 1371;
		at: 1371 put: #IDC_CommissionsFrame;
		at: 'IDC_CompanyBillOption' put: 1163;
		at: 1163 put: #IDC_CompanyBillOption;
		at: 'IDC_CompanyCombo' put: 1769;
		at: 1769 put: #IDC_CompanyCombo;
		at: 'IDC_CompanyDetailsStatic' put: 1972;
		at: 1972 put: #IDC_CompanyDetailsStatic;
		at: 'IDC_CompanyLogo' put: 1800;
		at: 1800 put: #IDC_CompanyLogo;
		at: 'IDC_CompanyNameEdit' put: 1295;
		at: 1295 put: #IDC_CompanyNameEdit;
		at: 'IDC_CompanyNoEdit' put: 1315;
		at: 1315 put: #IDC_CompanyNoEdit;
		at: 'IDC_CompanyNoText' put: 1381;
		at: 1381 put: #IDC_CompanyNoText;
		at: 'IDC_CompanyOption' put: 1175;
		at: 1175 put: #IDC_CompanyOption;
		at: 'IDC_CompanyReferenceLabel' put: 1796;
		at: 1796 put: #IDC_CompanyReferenceLabel;
		at: 'IDC_CompanyReferenceNumberEdit' put: 1070;
		at: 1070 put: #IDC_CompanyReferenceNumberEdit;
		at: 'IDC_CompanyWebsiteStatic' put: 1975;
		at: 1975 put: #IDC_CompanyWebsiteStatic;
		at: 'IDC_CompletedEdit' put: 1040;
		at: 1040 put: #IDC_CompletedEdit;
		at: 'IDC_CompressAttachment' put: 1327;
		at: 1327 put: #IDC_CompressAttachment;
		at: 'IDC_ConcessionEdit' put: 1536;
		at: 1536 put: #IDC_ConcessionEdit;
		at: 'IDC_ConfirmationCheck' put: 1470;
		at: 1470 put: #IDC_ConfirmationCheck;
		at: 'IDC_ContactCombo' put: 1829;
		at: 1829 put: #IDC_ContactCombo;
		at: 'IDC_ContactEdit' put: 1860;
		at: 1860 put: #IDC_ContactEdit;
		at: 'IDC_ContactExclamation' put: 1914;
		at: 1914 put: #IDC_ContactExclamation;
		at: 'IDC_Contents' put: 1502;
		at: 1502 put: #IDC_Contents;
		at: 'IDC_ContentsIcon' put: 2008;
		at: 2008 put: #IDC_ContentsIcon;
		at: 'IDC_ContentsList' put: 1437;
		at: 1437 put: #IDC_ContentsList;
		at: 'IDC_ContractCombo' put: 1292;
		at: 1292 put: #IDC_ContractCombo;
		at: 'IDC_ContractNumberEdit' put: 1511;
		at: 1511 put: #IDC_ContractNumberEdit;
		at: 'IDC_ContractorsEquipmentCheckbox' put: 1983;
		at: 1983 put: #IDC_ContractorsEquipmentCheckbox;
		at: 'IDC_ContractorsEquipmentDeductibleEdit' put: 1943;
		at: 1943 put: #IDC_ContractorsEquipmentDeductibleEdit;
		at: 'IDC_ContractorsEquipmentLimitEdit' put: 1944;
		at: 1944 put: #IDC_ContractorsEquipmentLimitEdit;
		at: 'IDC_ContractStatic' put: 1249;
		at: 1249 put: #IDC_ContractStatic;
		at: 'IDC_Copy' put: 1894;
		at: 1894 put: #IDC_Copy;
		at: 'IDC_CopyCalculatedPremiumPayableButton' put: 2084;
		at: 2084 put: #IDC_CopyCalculatedPremiumPayableButton;
		at: 'IDC_CopyFlatChargeButton' put: 2078;
		at: 2078 put: #IDC_CopyFlatChargeButton;
		at: 'IDC_CopyFromCombo' put: 1816;
		at: 1816 put: #IDC_CopyFromCombo;
		at: 'IDC_CopyMinRetainedButton' put: 2079;
		at: 2079 put: #IDC_CopyMinRetainedButton;
		at: 'IDC_CopyNameEdit' put: 1034;
		at: 1034 put: #IDC_CopyNameEdit;
		at: 'IDC_CopyNameStatic' put: 1043;
		at: 1043 put: #IDC_CopyNameStatic;
		at: 'IDC_CopyPremiumPayableButton' put: 2080;
		at: 2080 put: #IDC_CopyPremiumPayableButton;
		at: 'IDC_CopyrightEdit' put: 1447;
		at: 1447 put: #IDC_CopyrightEdit;
		at: 'IDC_CopyTotalPremiumPayableButton' put: 2081;
		at: 2081 put: #IDC_CopyTotalPremiumPayableButton;
		at: 'IDC_CountryCombo' put: 1401;
		at: 1401 put: #IDC_CountryCombo;
		at: 'IDC_CountStatic' put: 1389;
		at: 1389 put: #IDC_CountStatic;
		at: 'IDC_CourtesyCombo' put: 1284;
		at: 1284 put: #IDC_CourtesyCombo;
		at: 'IDC_CoverageEdit1' put: 1010;
		at: 1010 put: #IDC_CoverageEdit1;
		at: 'IDC_CoverageEdit2' put: 1046;
		at: 1046 put: #IDC_CoverageEdit2;
		at: 'IDC_CoverageEdit3' put: 1078;
		at: 1078 put: #IDC_CoverageEdit3;
		at: 'IDC_CoverageEdit4' put: 1120;
		at: 1120 put: #IDC_CoverageEdit4;
		at: 'IDC_CoverageIcon' put: 1824;
		at: 1824 put: #IDC_CoverageIcon;
		at: 'IDC_CoverageIcon2' put: 1825;
		at: 1825 put: #IDC_CoverageIcon2;
		at: 'IDC_CoverageTemplateRadio' put: 1777;
		at: 1777 put: #IDC_CoverageTemplateRadio;
		at: 'IDC_Create' put: 1754;
		at: 1754 put: #IDC_Create;
		at: 'IDC_Create2' put: 1880;
		at: 1880 put: #IDC_Create2;
		at: 'IDC_CreateAllButton' put: 1089;
		at: 1089 put: #IDC_CreateAllButton;
		at: 'IDC_CreatedEdit' put: 1356;
		at: 1356 put: #IDC_CreatedEdit;
		at: 'IDC_CreateFromEMarketingDownload' put: 1805;
		at: 1805 put: #IDC_CreateFromEMarketingDownload;
		at: 'IDC_CreateFromFile' put: 1806;
		at: 1806 put: #IDC_CreateFromFile;
		at: 'IDC_CreateNewButton' put: 1014;
		at: 1014 put: #IDC_CreateNewButton;
		at: 'IDC_CredentialsGroup' put: 2117;
		at: 2117 put: #IDC_CredentialsGroup;
		at: 'IDC_CreditCardExpiryDateEdit' put: 1359;
		at: 1359 put: #IDC_CreditCardExpiryDateEdit;
		at: 'IDC_CreditCardExpiryDateText' put: 1668;
		at: 1668 put: #IDC_CreditCardExpiryDateText;
		at: 'IDC_CreditCardNameCombo' put: 1193;
		at: 1193 put: #IDC_CreditCardNameCombo;
		at: 'IDC_CreditCardNameText' put: 1206;
		at: 1206 put: #IDC_CreditCardNameText;
		at: 'IDC_CreditCardNumberEdit' put: 1267;
		at: 1267 put: #IDC_CreditCardNumberEdit;
		at: 'IDC_CreditCardNumberText' put: 1583;
		at: 1583 put: #IDC_CreditCardNumberText;
		at: 'IDC_CrossCheckbox' put: 1114;
		at: 1114 put: #IDC_CrossCheckbox;
		at: 'IDC_CSIOnetGroup' put: 2118;
		at: 2118 put: #IDC_CSIOnetGroup;
		yourself.!

initItemIDsPwMain4: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDC_CSIONetIdEdit' put: 5421;
		at: 5421 put: #IDC_CSIONetIdEdit;
		at: 'IDC_CSIOnetIDText' put: 2120;
		at: 2120 put: #IDC_CSIOnetIDText;
		at: 'IDC_CSIOnetStatic' put: 2119;
		at: 2119 put: #IDC_CSIOnetStatic;
		at: 'IDC_CurrencyCombo' put: 1666;
		at: 1666 put: #IDC_CurrencyCombo;
		at: 'IDC_CurrentRateEdit' put: 1662;
		at: 1662 put: #IDC_CurrentRateEdit;
		at: 'IDC_CustomizeESlip' put: 2110;
		at: 2110 put: #IDC_CustomizeESlip;
		at: 'IDC_CustomizeESlipEmail' put: 2112;
		at: 2112 put: #IDC_CustomizeESlipEmail;
		at: 'IDC_CustomizePinkCard' put: 2115;
		at: 2115 put: #IDC_CustomizePinkCard;
		at: 'IDC_CustomRadio' put: 1830;
		at: 1830 put: #IDC_CustomRadio;
		at: 'IDC_DamageLimitEdit' put: 1704;
		at: 1704 put: #IDC_DamageLimitEdit;
		at: 'IDC_DateEdit' put: 1192;
		at: 1192 put: #IDC_DateEdit;
		at: 'IDC_DateEditCalendar' put: 1203;
		at: 1203 put: #IDC_DateEditCalendar;
		at: 'IDC_DateFormatCombo' put: 1906;
		at: 1906 put: #IDC_DateFormatCombo;
		at: 'IDC_DateOfBirthEdit' put: 1430;
		at: 1430 put: #IDC_DateOfBirthEdit;
		at: 'IDC_DateOfBirthEditCalendar' put: 1572;
		at: 1572 put: #IDC_DateOfBirthEditCalendar;
		at: 'IDC_DateOfBirthStatic' put: 1162;
		at: 1162 put: #IDC_DateOfBirthStatic;
		at: 'IDC_DatePicker' put: 1129;
		at: 1129 put: #IDC_DatePicker;
		at: 'IDC_DateRadio' put: 1368;
		at: 1368 put: #IDC_DateRadio;
		at: 'IDC_DateRequiredEdit' put: 1274;
		at: 1274 put: #IDC_DateRequiredEdit;
		at: 'IDC_DateRespondedEdit' put: 1667;
		at: 1667 put: #IDC_DateRespondedEdit;
		at: 'IDC_DateRespondedEditCalendar' put: 1188;
		at: 1188 put: #IDC_DateRespondedEditCalendar;
		at: 'IDC_DateRespondedStatic' put: 1514;
		at: 1514 put: #IDC_DateRespondedStatic;
		at: 'IDC_DateSubmittedEdit' put: 1573;
		at: 1573 put: #IDC_DateSubmittedEdit;
		at: 'IDC_DaysEdit' put: 1330;
		at: 1330 put: #IDC_DaysEdit;
		at: 'IDC_DeductibleCheckbox' put: 1715;
		at: 1715 put: #IDC_DeductibleCheckbox;
		at: 'IDC_DeductibleEdit' put: 1717;
		at: 1717 put: #IDC_DeductibleEdit;
		at: 'IDC_DeductibleEdit1' put: 1587;
		at: 1587 put: #IDC_DeductibleEdit1;
		at: 'IDC_DeductibleEdit2' put: 1500;
		at: 1500 put: #IDC_DeductibleEdit2;
		at: 'IDC_DeductibleEdit3' put: 1412;
		at: 1412 put: #IDC_DeductibleEdit3;
		at: 'IDC_DeductibleEdit4' put: 1293;
		at: 1293 put: #IDC_DeductibleEdit4;
		at: 'IDC_DefaultBrokerageCommissionStatic' put: 1223;
		at: 1223 put: #IDC_DefaultBrokerageCommissionStatic;
		at: 'IDC_DefaultDirRadio' put: 1349;
		at: 1349 put: #IDC_DefaultDirRadio;
		at: 'IDC_DefaultDirText' put: 1417;
		at: 1417 put: #IDC_DefaultDirText;
		at: 'IDC_DefaultSubscriberCommissionStatic' put: 1403;
		at: 1403 put: #IDC_DefaultSubscriberCommissionStatic;
		at: 'IDC_Delete' put: 1186;
		at: 1186 put: #IDC_Delete;
		at: 'IDC_DeleteButton' put: 1073;
		at: 1073 put: #IDC_DeleteButton;
		at: 'IDC_DeleteField' put: 1596;
		at: 1596 put: #IDC_DeleteField;
		at: 'IDC_DeltekIcon' put: 1755;
		at: 1755 put: #IDC_DeltekIcon;
		at: 'IDC_DepricatedCheck' put: 1747;
		at: 1747 put: #IDC_DepricatedCheck;
		at: 'IDC_DescribedCheckbox' put: 1288;
		at: 1288 put: #IDC_DescribedCheckbox;
		at: 'IDC_DescriptionCombo' put: 1663;
		at: 1663 put: #IDC_DescriptionCombo;
		at: 'IDC_DescriptionEdit' put: 1487;
		at: 1487 put: #IDC_DescriptionEdit;
		at: 'IDC_DescriptionOfBusinessOperationsEdit' put: 1265;
		at: 1265 put: #IDC_DescriptionOfBusinessOperationsEdit;
		at: 'IDC_DescriptionStatic' put: 1232;
		at: 1232 put: #IDC_DescriptionStatic;
		at: 'IDC_DescriptionText' put: 1555;
		at: 1555 put: #IDC_DescriptionText;
		at: 'IDC_DesignationEdit' put: 1492;
		at: 1492 put: #IDC_DesignationEdit;
		at: 'IDC_DestinationFolderEdit' put: 1962;
		at: 1962 put: #IDC_DestinationFolderEdit;
		at: 'IDC_DetailsStatic' put: 2098;
		at: 2098 put: #IDC_DetailsStatic;
		at: 'IDC_DetailsTab' put: 1878;
		at: 1878 put: #IDC_DetailsTab;
		at: 'IDC_DifferentRadio' put: 1155;
		at: 1155 put: #IDC_DifferentRadio;
		at: 'IDC_DirectBillOption' put: 1254;
		at: 1254 put: #IDC_DirectBillOption;
		at: 'IDC_DirectoryTree' put: 1543;
		at: 1543 put: #IDC_DirectoryTree;
		at: 'IDC_DirectRadio' put: 1395;
		at: 1395 put: #IDC_DirectRadio;
		at: 'IDC_Discounts' put: 1877;
		at: 1877 put: #IDC_Discounts;
		at: 'IDC_DiscountsText' put: 1881;
		at: 1881 put: #IDC_DiscountsText;
		at: 'IDC_DoNotPrintCheck' put: 1554;
		at: 1554 put: #IDC_DoNotPrintCheck;
		at: 'IDC_Download' put: 1871;
		at: 1871 put: #IDC_Download;
		at: 'IDC_DownloadedCheck' put: 1861;
		at: 1861 put: #IDC_DownloadedCheck;
		at: 'IDC_DownloadOnTransactionStartCheck' put: 1850;
		at: 1850 put: #IDC_DownloadOnTransactionStartCheck;
		at: 'IDC_EachOccDeductibleEdit' put: 1636;
		at: 1636 put: #IDC_EachOccDeductibleEdit;
		at: 'IDC_EachOccLimitEdit' put: 1480;
		at: 1480 put: #IDC_EachOccLimitEdit;
		at: 'IDC_EarthquakeCheckbox' put: 1689;
		at: 1689 put: #IDC_EarthquakeCheckbox;
		at: 'IDC_EarthquakeDeductibleEdit' put: 1936;
		at: 1936 put: #IDC_EarthquakeDeductibleEdit;
		at: 'IDC_EarthquakeDeductiblePercentageEdit' put: 1982;
		at: 1982 put: #IDC_EarthquakeDeductiblePercentageEdit;
		at: 'IDC_EarthquakeLimitEdit' put: 1444;
		at: 1444 put: #IDC_EarthquakeLimitEdit;
		at: 'IDC_Edit' put: 1424;
		at: 1424 put: #IDC_Edit;
		at: 'IDC_EditAddress' put: 2105;
		at: 2105 put: #IDC_EditAddress;
		at: 'IDC_EditBrokerage' put: 1179;
		at: 1179 put: #IDC_EditBrokerage;
		at: 'IDC_EditButton' put: 1391;
		at: 1391 put: #IDC_EditButton;
		at: 'IDC_EditContact' put: 1840;
		at: 1840 put: #IDC_EditContact;
		at: 'IDC_EditFaxProperties' put: 1661;
		at: 1661 put: #IDC_EditFaxProperties;
		at: 'IDC_EditField' put: 1255;
		at: 1255 put: #IDC_EditField;
		at: 'IDC_EditParameter' put: 2140;
		at: 2140 put: #IDC_EditParameter;
		at: 'IDC_EditPDF' put: 1999;
		at: 1999 put: #IDC_EditPDF;
		at: 'IDC_EditPrinterProperties' put: 1377;
		at: 1377 put: #IDC_EditPrinterProperties;
		at: 'IDC_EditSubBrokerage' put: 1660;
		at: 1660 put: #IDC_EditSubBrokerage;
		at: 'IDC_EffectiveDateEdit' put: 1109;
		at: 1109 put: #IDC_EffectiveDateEdit;
		at: 'IDC_EffectiveDateEditCalendar' put: 1338;
		at: 1338 put: #IDC_EffectiveDateEditCalendar;
		at: 'IDC_EffectiveDatePicker' put: 1608;
		at: 1608 put: #IDC_EffectiveDatePicker;
		at: 'IDC_EffectiveDateRadio' put: 1352;
		at: 1352 put: #IDC_EffectiveDateRadio;
		at: 'IDC_EffectiveDateStatic' put: 1774;
		at: 1774 put: #IDC_EffectiveDateStatic;
		at: 'IDC_EMailAddressCombo' put: 2103;
		at: 2103 put: #IDC_EMailAddressCombo;
		at: 'IDC_EmailAddressEdit' put: 1219;
		at: 1219 put: #IDC_EmailAddressEdit;
		at: 'IDC_EMailEdit' put: 1521;
		at: 1521 put: #IDC_EMailEdit;
		at: 'IDC_EmailGroupBox' put: 1022;
		at: 1022 put: #IDC_EmailGroupBox;
		at: 'IDC_EmailIcon' put: 1532;
		at: 1532 put: #IDC_EmailIcon;
		at: 'IDC_EmailRadio' put: 1557;
		at: 1557 put: #IDC_EmailRadio;
		at: 'IDC_EmailRecipientCombo' put: 1382;
		at: 1382 put: #IDC_EmailRecipientCombo;
		at: 'IDC_EmailRecipientStatic' put: 1549;
		at: 1549 put: #IDC_EmailRecipientStatic;
		at: 'IDC_EmailStatic' put: 1431;
		at: 1431 put: #IDC_EmailStatic;
		at: 'IDC_EmarketingAffirmativeRadio' put: 1787;
		at: 1787 put: #IDC_EmarketingAffirmativeRadio;
		at: 'IDC_EMarketingCombo' put: 1849;
		at: 1849 put: #IDC_EMarketingCombo;
		at: 'IDC_EMarketingDescriptionStatic' put: 1407;
		at: 1407 put: #IDC_EMarketingDescriptionStatic;
		at: 'IDC_eMarketingGroupBox' put: 1737;
		at: 1737 put: #IDC_eMarketingGroupBox;
		at: 'IDC_EMarketingIcon' put: 1342;
		at: 1342 put: #IDC_EMarketingIcon;
		at: 'IDC_EmarketingNegativeRadio' put: 1788;
		at: 1788 put: #IDC_EmarketingNegativeRadio;
		at: 'IDC_eMarketingPasswordText' put: 1310;
		at: 1310 put: #IDC_eMarketingPasswordText;
		at: 'IDC_eMarketingQuestionText' put: 1786;
		at: 1786 put: #IDC_eMarketingQuestionText;
		at: 'IDC_EMarketingRadio' put: 1631;
		at: 1631 put: #IDC_EMarketingRadio;
		at: 'IDC_EmbedPDFRadio' put: 1534;
		at: 1534 put: #IDC_EmbedPDFRadio;
		at: 'IDC_EmployeeLimitEdit' put: 1728;
		at: 1728 put: #IDC_EmployeeLimitEdit;
		yourself.!
  
initItemIDsPwMain5: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDC_EmployersCheckbox' put: 1548;
		at: 1548 put: #IDC_EmployersCheckbox;
		at: 'IDC_EncryptionEdit' put: 1553;
		at: 1553 put: #IDC_EncryptionEdit;
		at: 'IDC_EncryptionStatic' put: 1272;
		at: 1272 put: #IDC_EncryptionStatic;
		at: 'IDC_EndDateEdit' put: 1222;
		at: 1222 put: #IDC_EndDateEdit;
		at: 'IDC_EndDateEditCalendar' put: 1551;
		at: 1551 put: #IDC_EndDateEditCalendar;
		at: 'IDC_EndorsementCheck' put: 1113;
		at: 1113 put: #IDC_EndorsementCheck;
		at: 'IDC_EndorsementRequestList' put: 1341;
		at: 1341 put: #IDC_EndorsementRequestList;
		at: 'IDC_EquipmentACVCheckbox' put: 1629;
		at: 1629 put: #IDC_EquipmentACVCheckbox;
		at: 'IDC_EquipmentCheckbox' put: 1924;
		at: 1924 put: #IDC_EquipmentCheckbox;
		at: 'IDC_EquipmentDeductibleEdit' put: 1925;
		at: 1925 put: #IDC_EquipmentDeductibleEdit;
		at: 'IDC_EquipmentLimitEdit' put: 1926;
		at: 1926 put: #IDC_EquipmentLimitEdit;
		at: 'IDC_EquipmentRCCheckbox' put: 1622;
		at: 1622 put: #IDC_EquipmentRCCheckbox;
		at: 'IDC_ErrorList' put: 1897;
		at: 1897 put: #IDC_ErrorList;
		at: 'IDC_ExcessLiabCheckbox' put: 1681;
		at: 1681 put: #IDC_ExcessLiabCheckbox;
		at: 'IDC_ExcludedCombo' put: 1725;
		at: 1725 put: #IDC_ExcludedCombo;
		at: 'IDC_ExistingPolicyRadio' put: 1224;
		at: 1224 put: #IDC_ExistingPolicyRadio;
		at: 'IDC_ExpiryDateEdit' put: 1322;
		at: 1322 put: #IDC_ExpiryDateEdit;
		at: 'IDC_ExpiryDateEditCalendar' put: 1446;
		at: 1446 put: #IDC_ExpiryDateEditCalendar;
		at: 'IDC_Export' put: 2150;
		at: 2150 put: #IDC_Export;
		at: 'IDC_ExtendedMapiCheck' put: 1459;
		at: 1459 put: #IDC_ExtendedMapiCheck;
		at: 'IDC_ExtraExpenseCheckbox' put: 1687;
		at: 1687 put: #IDC_ExtraExpenseCheckbox;
		at: 'IDC_ExtraExpenseDeductibleEdit' put: 1932;
		at: 1932 put: #IDC_ExtraExpenseDeductibleEdit;
		at: 'IDC_ExtraExpenseLimitEdit' put: 1933;
		at: 1933 put: #IDC_ExtraExpenseLimitEdit;
		at: 'IDC_FastRadio' put: 1309;
		at: 1309 put: #IDC_FastRadio;
		at: 'IDC_FaxEdit' put: 1435;
		at: 1435 put: #IDC_FaxEdit;
		at: 'IDC_FaxGroupBox' put: 1376;
		at: 1376 put: #IDC_FaxGroupBox;
		at: 'IDC_FaxIcon' put: 1332;
		at: 1332 put: #IDC_FaxIcon;
		at: 'IDC_FaxPrinterNameEdit' put: 1093;
		at: 1093 put: #IDC_FaxPrinterNameEdit;
		at: 'IDC_FaxPrinterStatic' put: 1642;
		at: 1642 put: #IDC_FaxPrinterStatic;
		at: 'IDC_FaxRadio' put: 1345;
		at: 1345 put: #IDC_FaxRadio;
		at: 'IDC_FieldCategoryTab' put: 1743;
		at: 1743 put: #IDC_FieldCategoryTab;
		at: 'IDC_FieldsList' put: 1742;
		at: 1742 put: #IDC_FieldsList;
		at: 'IDC_FieldsListView' put: 1124;
		at: 1124 put: #IDC_FieldsListView;
		at: 'IDC_FileBrowse' put: 1017;
		at: 1017 put: #IDC_FileBrowse;
		at: 'IDC_FileChangeEncryption' put: 1513;
		at: 1513 put: #IDC_FileChangeEncryption;
		at: 'IDC_FileEdit' put: 1510;
		at: 1510 put: #IDC_FileEdit;
		at: 'IDC_FileEncryptionEdit' put: 1457;
		at: 1457 put: #IDC_FileEncryptionEdit;
		at: 'IDC_FileEncryptionStatic' put: 1533;
		at: 1533 put: #IDC_FileEncryptionStatic;
		at: 'IDC_FileGroupBox' put: 1077;
		at: 1077 put: #IDC_FileGroupBox;
		at: 'IDC_FileIcon' put: 1485;
		at: 1485 put: #IDC_FileIcon;
		at: 'IDC_FileNameEdit' put: 1503;
		at: 1503 put: #IDC_FileNameEdit;
		at: 'IDC_FileRadio' put: 1677;
		at: 1677 put: #IDC_FileRadio;
		at: 'IDC_FileStatic' put: 1294;
		at: 1294 put: #IDC_FileStatic;
		at: 'IDC_FilterCheck' put: 1909;
		at: 1909 put: #IDC_FilterCheck;
		at: 'IDC_FilterTabControl' put: 1023;
		at: 1023 put: #IDC_FilterTabControl;
		at: 'IDC_FinancialInstitutionEdit' put: 1262;
		at: 1262 put: #IDC_FinancialInstitutionEdit;
		at: 'IDC_FinancialInstitutionText' put: 1580;
		at: 1580 put: #IDC_FinancialInstitutionText;
		at: 'IDC_Find' put: 1185;
		at: 1185 put: #IDC_Find;
		at: 'IDC_FindEdit' put: 1451;
		at: 1451 put: #IDC_FindEdit;
		at: 'IDC_FindNext' put: 1178;
		at: 1178 put: #IDC_FindNext;
		at: 'IDC_FlatChangeGroupBox' put: 1994;
		at: 1994 put: #IDC_FlatChangeGroupBox;
		at: 'IDC_FlatChargeCombo' put: 2073;
		at: 2073 put: #IDC_FlatChargeCombo;
		at: 'IDC_FloodCheckbox' put: 1690;
		at: 1690 put: #IDC_FloodCheckbox;
		at: 'IDC_FloodDeductibleEdit' put: 1937;
		at: 1937 put: #IDC_FloodDeductibleEdit;
		at: 'IDC_FloodLimitEdit' put: 1442;
		at: 1442 put: #IDC_FloodLimitEdit;
		at: 'IDC_FoldButton' put: 1325;
		at: 1325 put: #IDC_FoldButton;
		at: 'IDC_FormCategoryTab' put: 1740;
		at: 1740 put: #IDC_FormCategoryTab;
		at: 'IDC_FormCombo' put: 6077;
		at: 6077 put: #IDC_FormCombo;
		at: 'IDC_FormDateEdit' put: 1978;
		at: 1978 put: #IDC_FormDateEdit;
		at: 'IDC_FormOfBusinessCombo' put: 1031;
		at: 1031 put: #IDC_FormOfBusinessCombo;
		at: 'IDC_FormsList' put: 1739;
		at: 1739 put: #IDC_FormsList;
		at: 'IDC_FromEdit' put: 6078;
		at: 6078 put: #IDC_FromEdit;
		at: 'IDC_FromEditCalendar' put: 6079;
		at: 6079 put: #IDC_FromEditCalendar;
		at: 'IDC_FromLetter' put: 1388;
		at: 1388 put: #IDC_FromLetter;
		at: 'IDC_FromWord' put: 1066;
		at: 1066 put: #IDC_FromWord;
		at: 'IDC_FullTermCombo' put: 1678;
		at: 1678 put: #IDC_FullTermCombo;
		at: 'IDC_FullTermLabel' put: 1811;
		at: 1811 put: #IDC_FullTermLabel;
		at: 'IDC_FUSGradeEdit' put: 1776;
		at: 1776 put: #IDC_FUSGradeEdit;
		at: 'IDC_GeneralLimitEdit' put: 1706;
		at: 1706 put: #IDC_GeneralLimitEdit;
		at: 'IDC_Generate' put: 1036;
		at: 1036 put: #IDC_Generate;
		at: 'IDC_GotoWeb' put: 1673;
		at: 1673 put: #IDC_GotoWeb;
		at: 'IDC_GradeCombo' put: 1084;
		at: 1084 put: #IDC_GradeCombo;
		at: 'IDC_GradeEdit' put: 1535;
		at: 1535 put: #IDC_GradeEdit;
		at: 'IDC_GUIDEdit' put: 1290;
		at: 1290 put: #IDC_GUIDEdit;
		at: 'IDC_HasTextColorCheck' put: 1427;
		at: 1427 put: #IDC_HasTextColorCheck;
		at: 'IDC_HeaderList' put: 1889;
		at: 1889 put: #IDC_HeaderList;
		at: 'IDC_HelpLink' put: 2050;
		at: 2050 put: #IDC_HelpLink;
		at: 'IDC_HelpText' put: 1781;
		at: 1781 put: #IDC_HelpText;
		at: 'IDC_HideOldApplicationsCheck' put: 1741;
		at: 1741 put: #IDC_HideOldApplicationsCheck;
		at: 'IDC_HiredAutoDeductibleEdit' put: 2132;
		at: 2132 put: #IDC_HiredAutoDeductibleEdit;
		at: 'IDC_HiredAutoLimitEdit' put: 2133;
		at: 2133 put: #IDC_HiredAutoLimitEdit;
		at: 'IDC_HiredCheckbox' put: 1360;
		at: 1360 put: #IDC_HiredCheckbox;
		at: 'IDC_HolderCombo' put: 1306;
		at: 1306 put: #IDC_HolderCombo;
		at: 'IDC_IBCCodeList' put: 1413;
		at: 1413 put: #IDC_IBCCodeList;
		at: 'IDC_IBCCodingFrame' put: 1007;
		at: 1007 put: #IDC_IBCCodingFrame;
		at: 'IDC_IBCCodingTypeCombo' put: 1637;
		at: 1637 put: #IDC_IBCCodingTypeCombo;
		at: 'IDC_Icon' put: 1735;
		at: 1735 put: #IDC_Icon;
		at: 'IDC_IDEdit' put: 1753;
		at: 1753 put: #IDC_IDEdit;
		at: 'IDC_IdentifyAsReissueCheck' put: 1131;
		at: 1131 put: #IDC_IdentifyAsReissueCheck;
		at: 'IDC_IICCImage' put: 1364;
		at: 1364 put: #IDC_IICCImage;
		at: 'IDC_ImmediatelyRadio' put: 1161;
		at: 1161 put: #IDC_ImmediatelyRadio;
		at: 'IDC_IncludeFormNumbersCheckbox' put: 1988;
		at: 1988 put: #IDC_IncludeFormNumbersCheckbox;
		at: 'IDC_IndividualEmailsRadio' put: 1836;
		at: 1836 put: #IDC_IndividualEmailsRadio;
		at: 'IDC_IndustryCodeEdit' put: 1299;
		at: 1299 put: #IDC_IndustryCodeEdit;
		at: 'IDC_InForceIcon' put: 1846;
		at: 1846 put: #IDC_InForceIcon;
		at: 'IDC_InForcePolicyCoveragesImport' put: 1858;
		at: 1858 put: #IDC_InForcePolicyCoveragesImport;
		at: 'IDC_InForcePolicyCoveragesKeep' put: 1857;
		at: 1857 put: #IDC_InForcePolicyCoveragesKeep;
		at: 'IDC_InForcePolicyDownloadRadio' put: 1843;
		at: 1843 put: #IDC_InForcePolicyDownloadRadio;
		at: 'IDC_InForcePolicyUWImport' put: 1856;
		at: 1856 put: #IDC_InForcePolicyUWImport;
		at: 'IDC_InForcePolicyUWKeep' put: 1855;
		at: 1855 put: #IDC_InForcePolicyUWKeep;
		at: 'IDC_InfoStatic' put: 1780;
		at: 1780 put: #IDC_InfoStatic;
		yourself.!

initItemIDsPwMain6: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDC_InlandMarineBroadFormCheckbox' put: 1940;
		at: 1940 put: #IDC_InlandMarineBroadFormCheckbox;
		at: 'IDC_InlandMarineCheckbox' put: 1938;
		at: 1938 put: #IDC_InlandMarineCheckbox;
		at: 'IDC_InlandMarineNamedPerilsCheckbox' put: 1939;
		at: 1939 put: #IDC_InlandMarineNamedPerilsCheckbox;
		at: 'IDC_InsertCopyrightCharacter' put: 1181;
		at: 1181 put: #IDC_InsertCopyrightCharacter;
		at: 'IDC_InstructionsText' put: 1307;
		at: 1307 put: #IDC_InstructionsText;
		at: 'IDC_InstructionsText4' put: 1308;
		at: 1308 put: #IDC_InstructionsText4;
		at: 'IDC_InsuranceSchedulesListView' put: 1632;
		at: 1632 put: #IDC_InsuranceSchedulesListView;
		at: 'IDC_InsuredEdit' put: 2106;
		at: 2106 put: #IDC_InsuredEdit;
		at: 'IDC_InsuredTemplateRadio' put: 1778;
		at: 1778 put: #IDC_InsuredTemplateRadio;
		at: 'IDC_InsurerCombo' put: 1097;
		at: 1097 put: #IDC_InsurerCombo;
		at: 'IDC_InsurerDetailsButton' put: 1111;
		at: 1111 put: #IDC_InsurerDetailsButton;
		at: 'IDC_InsurerDetailsLabel' put: 2004;
		at: 2004 put: #IDC_InsurerDetailsLabel;
		at: 'IDC_InsurerEdit' put: 1312;
		at: 1312 put: #IDC_InsurerEdit;
		at: 'IDC_InsurerExclamation' put: 1658;
		at: 1658 put: #IDC_InsurerExclamation;
		at: 'IDC_InsurerGroupBox' put: 1799;
		at: 1799 put: #IDC_InsurerGroupBox;
		at: 'IDC_InsurerIcon' put: 1859;
		at: 1859 put: #IDC_InsurerIcon;
		at: 'IDC_InsurerNameLabel' put: 1804;
		at: 1804 put: #IDC_InsurerNameLabel;
		at: 'IDC_InsurerSignatureThumbNail' put: 1913;
		at: 1913 put: #IDC_InsurerSignatureThumbNail;
		at: 'IDC_InsurersList' put: 1831;
		at: 1831 put: #IDC_InsurersList;
		at: 'IDC_InterestedPartyCombo' put: 1033;
		at: 1033 put: #IDC_InterestedPartyCombo;
		at: 'IDC_IsIssueCheck' put: 1563;
		at: 1563 put: #IDC_IsIssueCheck;
		at: 'IDC_IsLloydsCanadaContractCheck' put: 1745;
		at: 1745 put: #IDC_IsLloydsCanadaContractCheck;
		at: 'IDC_IssuanceOnlyRadio' put: 1328;
		at: 1328 put: #IDC_IssuanceOnlyRadio;
		at: 'IDC_IssuerSignatureCombo' put: 1910;
		at: 1910 put: #IDC_IssuerSignatureCombo;
		at: 'IDC_IsSurveyCheck' put: 1177;
		at: 1177 put: #IDC_IsSurveyCheck;
		at: 'IDC_ItemsLabel' put: 1887;
		at: 1887 put: #IDC_ItemsLabel;
		at: 'IDC_ItemsList' put: 1886;
		at: 1886 put: #IDC_ItemsList;
		at: 'IDC_KnownSinceMonthCombo' put: 1538;
		at: 1538 put: #IDC_KnownSinceMonthCombo;
		at: 'IDC_KnownSinceYearCombo' put: 1301;
		at: 1301 put: #IDC_KnownSinceYearCombo;
		at: 'IDC_Label1' put: 1567;
		at: 1567 put: #IDC_Label1;
		at: 'IDC_Label2' put: 1419;
		at: 1419 put: #IDC_Label2;
		at: 'IDC_LanguageCombo' put: 1069;
		at: 1069 put: #IDC_LanguageCombo;
		at: 'IDC_LanguageEdit' put: 1863;
		at: 1863 put: #IDC_LanguageEdit;
		at: 'IDC_LanguageLabel' put: 1848;
		at: 1848 put: #IDC_LanguageLabel;
		at: 'IDC_LanguageStatic' put: 1030;
		at: 1030 put: #IDC_LanguageStatic;
		at: 'IDC_LargeImagesOnToolbarsCheck' put: 1734;
		at: 1734 put: #IDC_LargeImagesOnToolbarsCheck;
		at: 'IDC_LastModifiedDateEdit' put: 2114;
		at: 2114 put: #IDC_LastModifiedDateEdit;
		at: 'IDC_LastModifiedDateEditCalendar' put: 2111;
		at: 2111 put: #IDC_LastModifiedDateEditCalendar;
		at: 'IDC_LayoutCombo' put: 1884;
		at: 1884 put: #IDC_LayoutCombo;
		at: 'IDC_LayoutList' put: 1895;
		at: 1895 put: #IDC_LayoutList;
		at: 'IDC_LeasedCheckbox' put: 1104;
		at: 1104 put: #IDC_LeasedCheckbox;
		at: 'IDC_LevelGroup' put: 1542;
		at: 1542 put: #IDC_LevelGroup;
		at: 'IDC_LibraryNameEdit' put: 1404;
		at: 1404 put: #IDC_LibraryNameEdit;
		at: 'IDC_LicenseEdit' put: 1733;
		at: 1733 put: #IDC_LicenseEdit;
		at: 'IDC_LienList' put: 2005;
		at: 2005 put: #IDC_LienList;
		at: 'IDC_LikePaymentsCombo' put: 1196;
		at: 1196 put: #IDC_LikePaymentsCombo;
		at: 'IDC_LikePaymentsText' put: 1670;
		at: 1670 put: #IDC_LikePaymentsText;
		at: 'IDC_LimitEdit1' put: 1264;
		at: 1264 put: #IDC_LimitEdit1;
		at: 'IDC_LimitEdit2' put: 1650;
		at: 1650 put: #IDC_LimitEdit2;
		at: 'IDC_LimitEdit3' put: 1367;
		at: 1367 put: #IDC_LimitEdit3;
		at: 'IDC_LimitEdit4' put: 1054;
		at: 1054 put: #IDC_LimitEdit4;
		at: 'IDC_LimitedRadio' put: 1416;
		at: 1416 put: #IDC_LimitedRadio;
		at: 'IDC_LimitLabel' put: 1562;
		at: 1562 put: #IDC_LimitLabel;
		at: 'IDC_LimitsEdit' put: 1724;
		at: 1724 put: #IDC_LimitsEdit;
		at: 'IDC_LinkPDFRadio' put: 1035;
		at: 1035 put: #IDC_LinkPDFRadio;
		at: 'IDC_List' put: 1037;
		at: 1037 put: #IDC_List;
		at: 'IDC_ListView' put: 1586;
		at: 1586 put: #IDC_ListView;
		at: 'IDC_LivedAtSinceEdit' put: 1151;
		at: 1151 put: #IDC_LivedAtSinceEdit;
		at: 'IDC_LivedAtSinceStatic' put: 1096;
		at: 1096 put: #IDC_LivedAtSinceStatic;
		at: 'IDC_LloydsGroupBox' put: 1736;
		at: 1736 put: #IDC_LloydsGroupBox;
		at: 'IDC_LloydsIcon' put: 1954;
		at: 1954 put: #IDC_LloydsIcon;
		at: 'IDC_LloydsLineageRulesCheck' put: 1649;
		at: 1649 put: #IDC_LloydsLineageRulesCheck;
		at: 'IDC_LloydsPrintBillingTypeCheck' put: 1441;
		at: 1441 put: #IDC_LloydsPrintBillingTypeCheck;
		at: 'IDC_LloydsPrintInsuredAccountNumberCheck' put: 1598;
		at: 1598 put: #IDC_LloydsPrintInsuredAccountNumberCheck;
		at: 'IDC_LocationCombo' put: 1146;
		at: 1146 put: #IDC_LocationCombo;
		at: 'IDC_LocationNumberEdit' put: 1963;
		at: 1963 put: #IDC_LocationNumberEdit;
		at: 'IDC_LocationNumberText' put: 1964;
		at: 1964 put: #IDC_LocationNumberText;
		at: 'IDC_LocationRadio' put: 1156;
		at: 1156 put: #IDC_LocationRadio;
		at: 'IDC_LocationsPrintAlwaysRadio' put: 1112;
		at: 1112 put: #IDC_LocationsPrintAlwaysRadio;
		at: 'IDC_LocationsPrintDefaultRadio' put: 1372;
		at: 1372 put: #IDC_LocationsPrintDefaultRadio;
		at: 'IDC_LocationsPrintFormatCombo' put: 1664;
		at: 1664 put: #IDC_LocationsPrintFormatCombo;
		at: 'IDC_Login' put: 2145;
		at: 2145 put: #IDC_Login;
		at: 'IDC_LoginDialogIcon' put: 1792;
		at: 1792 put: #IDC_LoginDialogIcon;
		at: 'IDC_Logo' put: 2077;
		at: 2077 put: #IDC_Logo;
		at: 'IDC_LogoEdit' put: 1117;
		at: 1117 put: #IDC_LogoEdit;
		at: 'IDC_LogoGroupBox' put: 1405;
		at: 1405 put: #IDC_LogoGroupBox;
		at: 'IDC_LogoThumbNail' put: 1266;
		at: 1266 put: #IDC_LogoThumbNail;
		at: 'IDC_LookAheadDaysEdit' put: 1959;
		at: 1959 put: #IDC_LookAheadDaysEdit;
		at: 'IDC_LookAheadEndDateStatic' put: 1960;
		at: 1960 put: #IDC_LookAheadEndDateStatic;
		at: 'IDC_LossPayeeClauseCombo' put: 2006;
		at: 2006 put: #IDC_LossPayeeClauseCombo;
		at: 'IDC_LossPayeeCombo' put: 1164;
		at: 1164 put: #IDC_LossPayeeCombo;
		at: 'IDC_LossPayeeStatement' put: 1387;
		at: 1387 put: #IDC_LossPayeeStatement;
		at: 'IDC_LossPayeeStatic' put: 1214;
		at: 1214 put: #IDC_LossPayeeStatic;
		at: 'IDC_LotEdit' put: 1594;
		at: 1594 put: #IDC_LotEdit;
		at: 'IDC_LowEncryptionWarningStatic' put: 1334;
		at: 1334 put: #IDC_LowEncryptionWarningStatic;
		at: 'IDC_MachineryBreakdownCheckbox' put: 1950;
		at: 1950 put: #IDC_MachineryBreakdownCheckbox;
		at: 'IDC_MachineryBreakdownDeductibleEdit' put: 1980;
		at: 1980 put: #IDC_MachineryBreakdownDeductibleEdit;
		at: 'IDC_MachineryBreakdownLimitEdit' put: 1981;
		at: 1981 put: #IDC_MachineryBreakdownLimitEdit;
		at: 'IDC_MachineryBreakdownOptionNoEdit' put: 1697;
		at: 1697 put: #IDC_MachineryBreakdownOptionNoEdit;
		at: 'IDC_ManageLayouts' put: 1885;
		at: 1885 put: #IDC_ManageLayouts;
		at: 'IDC_MAPText' put: 1379;
		at: 1379 put: #IDC_MAPText;
		at: 'IDC_MarginClauseCheckbox' put: 1918;
		at: 1918 put: #IDC_MarginClauseCheckbox;
		at: 'IDC_MarginClausePercentEdit' put: 1396;
		at: 1396 put: #IDC_MarginClausePercentEdit;
		at: 'IDC_MarketerCheck' put: 1082;
		at: 1082 put: #IDC_MarketerCheck;
		at: 'IDC_MarketerCombo' put: 1527;
		at: 1527 put: #IDC_MarketerCombo;
		at: 'IDC_MarketerExclamation' put: 1227;
		at: 1227 put: #IDC_MarketerExclamation;
		at: 'IDC_MarketerPhoneEdit' put: 1141;
		at: 1141 put: #IDC_MarketerPhoneEdit;
		at: 'IDC_MatchCaseCheck' put: 1243;
		at: 1243 put: #IDC_MatchCaseCheck;
		at: 'IDC_MatchWordsCheck' put: 1016;
		at: 1016 put: #IDC_MatchWordsCheck;
		at: 'IDC_MatchWordsCheckBox' put: 1275;
		at: 1275 put: #IDC_MatchWordsCheckBox;
		at: 'IDC_MaximumSizeDescription' put: 1497;
		at: 1497 put: #IDC_MaximumSizeDescription;
		yourself.!
  
initItemIDsPwMain7: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDC_MedicalLimitEdit' put: 1530;
		at: 1530 put: #IDC_MedicalLimitEdit;
		at: 'IDC_MemoEdit' put: 2037;
		at: 2037 put: #IDC_MemoEdit;
		at: 'IDC_MeridianCombo' put: 1479;
		at: 1479 put: #IDC_MeridianCombo;
		at: 'IDC_MeridianLabel' put: 1336;
		at: 1336 put: #IDC_MeridianLabel;
		at: 'IDC_MessageText' put: 1355;
		at: 1355 put: #IDC_MessageText;
		at: 'IDC_MinimumAnnualPremiumEdit' put: 1644;
		at: 1644 put: #IDC_MinimumAnnualPremiumEdit;
		at: 'IDC_MinimumRetainedPolicyPremiumEdit' put: 1238;
		at: 1238 put: #IDC_MinimumRetainedPolicyPremiumEdit;
		at: 'IDC_MinimumRetainedPremiumEdit' put: 1568;
		at: 1568 put: #IDC_MinimumRetainedPremiumEdit;
		at: 'IDC_MinimumRetainedPremiumText' put: 1235;
		at: 1235 put: #IDC_MinimumRetainedPremiumText;
		at: 'IDC_MiscWordingBorderCheck' put: 1418;
		at: 1418 put: #IDC_MiscWordingBorderCheck;
		at: 'IDC_ModifiedEdit' put: 1488;
		at: 1488 put: #IDC_ModifiedEdit;
		at: 'IDC_Modify' put: 1370;
		at: 1370 put: #IDC_Modify;
		at: 'IDC_ModuleListView' put: 1782;
		at: 1782 put: #IDC_ModuleListView;
		at: 'IDC_More' put: 1588;
		at: 1588 put: #IDC_More;
		at: 'IDC_MoreMarketer' put: 1449;
		at: 1449 put: #IDC_MoreMarketer;
		at: 'IDC_MoreProducer' put: 1003;
		at: 1003 put: #IDC_MoreProducer;
		at: 'IDC_MoreUnderwriter' put: 1167;
		at: 1167 put: #IDC_MoreUnderwriter;
		at: 'IDC_MortgageeStatement' put: 1675;
		at: 1675 put: #IDC_MortgageeStatement;
		at: 'IDC_Move' put: 1160;
		at: 1160 put: #IDC_Move;
		at: 'IDC_MoveDown' put: 1171;
		at: 1171 put: #IDC_MoveDown;
		at: 'IDC_MoveUp' put: 1339;
		at: 1339 put: #IDC_MoveUp;
		at: 'IDC_MRPText' put: 1270;
		at: 1270 put: #IDC_MRPText;
		at: 'IDC_NAICEdit' put: 1393;
		at: 1393 put: #IDC_NAICEdit;
		at: 'IDC_NAICNumberEdit' put: 1679;
		at: 1679 put: #IDC_NAICNumberEdit;
		at: 'IDC_NameCombo' put: 1484;
		at: 1484 put: #IDC_NameCombo;
		at: 'IDC_NameEdit' put: 1056;
		at: 1056 put: #IDC_NameEdit;
		at: 'IDC_NameLabel' put: 1812;
		at: 1812 put: #IDC_NameLabel;
		at: 'IDC_NameOnCardEdit' put: 6090;
		at: 6090 put: #IDC_NameOnCardEdit;
		at: 'IDC_NameText' put: 1789;
		at: 1789 put: #IDC_NameText;
		at: 'IDC_NatureOfInterestEdit' put: 1989;
		at: 1989 put: #IDC_NatureOfInterestEdit;
		at: 'IDC_NatureOfInterestLabel' put: 1990;
		at: 1990 put: #IDC_NatureOfInterestLabel;
		at: 'IDC_NeededByEdit' put: 1862;
		at: 1862 put: #IDC_NeededByEdit;
		at: 'IDC_New' put: 1641;
		at: 1641 put: #IDC_New;
		at: 'IDC_NewApplicationRadio' put: 1749;
		at: 1749 put: #IDC_NewApplicationRadio;
		at: 'IDC_NewBatchRadio' put: 1956;
		at: 1956 put: #IDC_NewBatchRadio;
		at: 'IDC_NewBrokerage' put: 1091;
		at: 1091 put: #IDC_NewBrokerage;
		at: 'IDC_NewCheck' put: 1540;
		at: 1540 put: #IDC_NewCheck;
		at: 'IDC_NewFolderButton' put: 1406;
		at: 1406 put: #IDC_NewFolderButton;
		at: 'IDC_NewResponseFileButton' put: 1618;
		at: 1618 put: #IDC_NewResponseFileButton;
		at: 'IDC_NewSubBrokerage' put: 1604;
		at: 1604 put: #IDC_NewSubBrokerage;
		at: 'IDC_NewVersionRadio' put: 1750;
		at: 1750 put: #IDC_NewVersionRadio;
		at: 'IDC_NextButton' put: 1251;
		at: 1251 put: #IDC_NextButton;
		at: 'IDC_NOACheckbox' put: 1466;
		at: 1466 put: #IDC_NOACheckbox;
		at: 'IDC_NOADeductibleEdit' put: 1172;
		at: 1172 put: #IDC_NOADeductibleEdit;
		at: 'IDC_NOALimitEdit' put: 1439;
		at: 1439 put: #IDC_NOALimitEdit;
		at: 'IDC_NoClaimsCheck' put: 1378;
		at: 1378 put: #IDC_NoClaimsCheck;
		at: 'IDC_NoneRadio' put: 1420;
		at: 1420 put: #IDC_NoneRadio;
		at: 'IDC_NoneStatement' put: 1237;
		at: 1237 put: #IDC_NoneStatement;
		at: 'IDC_NoOption' put: 1202;
		at: 1202 put: #IDC_NoOption;
		at: 'IDC_NoPreviousPoliciesCheck' put: 1190;
		at: 1190 put: #IDC_NoPreviousPoliciesCheck;
		at: 'IDC_NoRadio' put: 1313;
		at: 1313 put: #IDC_NoRadio;
		at: 'IDC_NotApplicableCheck' put: 1215;
		at: 1215 put: #IDC_NotApplicableCheck;
		at: 'IDC_NoteEdit' put: 1625;
		at: 1625 put: #IDC_NoteEdit;
		at: 'IDC_NotesEdit' put: 1302;
		at: 1302 put: #IDC_NotesEdit;
		at: 'IDC_NoteStatic' put: 1425;
		at: 1425 put: #IDC_NoteStatic;
		at: 'IDC_NoTextRadio' put: 1166;
		at: 1166 put: #IDC_NoTextRadio;
		at: 'IDC_NotifyIcon' put: 1001;
		at: 1001 put: #IDC_NotifyIcon;
		at: 'IDC_NotListedCompanyNameEdit' put: 1967;
		at: 1967 put: #IDC_NotListedCompanyNameEdit;
		at: 'IDC_NumberEdit' put: 1226;
		at: 1226 put: #IDC_NumberEdit;
		at: 'IDC_OccupationClassCombo' put: 1281;
		at: 1281 put: #IDC_OccupationClassCombo;
		at: 'IDC_OccupationEdit' put: 1985;
		at: 1985 put: #IDC_OccupationEdit;
		at: 'IDC_OccurrenceCheckbox' put: 1610;
		at: 1610 put: #IDC_OccurrenceCheckbox;
		at: 'IDC_OccurrenceLimitEdit' put: 1703;
		at: 1703 put: #IDC_OccurrenceLimitEdit;
		at: 'IDC_OKButton' put: 1231;
		at: 1231 put: #IDC_OKButton;
		at: 'IDC_OldBatchCombo' put: 1961;
		at: 1961 put: #IDC_OldBatchCombo;
		at: 'IDC_OldBatchRadio' put: 1957;
		at: 1957 put: #IDC_OldBatchRadio;
		at: 'IDC_Open' put: 1147;
		at: 1147 put: #IDC_Open;
		at: 'IDC_OptionalButton' put: 1509;
		at: 1509 put: #IDC_OptionalButton;
		at: 'IDC_Options' put: 1833;
		at: 1833 put: #IDC_Options;
		at: 'IDC_Other1Check' put: 2122;
		at: 2122 put: #IDC_Other1Check;
		at: 'IDC_Other1Checkbox' put: 1684;
		at: 1684 put: #IDC_Other1Checkbox;
		at: 'IDC_Other1CoverageEdit' put: 1947;
		at: 1947 put: #IDC_Other1CoverageEdit;
		at: 'IDC_Other1DeductibleEdit' put: 1320;
		at: 1320 put: #IDC_Other1DeductibleEdit;
		at: 'IDC_Other1LimitEdit' put: 1493;
		at: 1493 put: #IDC_Other1LimitEdit;
		at: 'IDC_Other2Check' put: 2127;
		at: 2127 put: #IDC_Other2Check;
		at: 'IDC_Other2Checkbox' put: 1685;
		at: 1685 put: #IDC_Other2Checkbox;
		at: 'IDC_Other2CoverageEdit' put: 1948;
		at: 1948 put: #IDC_Other2CoverageEdit;
		at: 'IDC_Other2DeductibleEdit' put: 1694;
		at: 1694 put: #IDC_Other2DeductibleEdit;
		at: 'IDC_Other2LimitEdit' put: 1949;
		at: 1949 put: #IDC_Other2LimitEdit;
		at: 'IDC_OtherAggregateLimitEdit' put: 1714;
		at: 1714 put: #IDC_OtherAggregateLimitEdit;
		at: 'IDC_OtherBillEdit' put: 1630;
		at: 1630 put: #IDC_OtherBillEdit;
		at: 'IDC_OtherBillOption' put: 1245;
		at: 1245 put: #IDC_OtherBillOption;
		at: 'IDC_OtherCheckbox' put: 1168;
		at: 1168 put: #IDC_OtherCheckbox;
		at: 'IDC_OtherCheckbox1' put: 1550;
		at: 1550 put: #IDC_OtherCheckbox1;
		at: 'IDC_OtherCheckbox2' put: 1103;
		at: 1103 put: #IDC_OtherCheckbox2;
		at: 'IDC_OtherCoverage1Edit' put: 2124;
		at: 2124 put: #IDC_OtherCoverage1Edit;
		at: 'IDC_OtherCoverage2Edit' put: 2129;
		at: 2129 put: #IDC_OtherCoverage2Edit;
		at: 'IDC_OtherCoverageEdit' put: 1707;
		at: 1707 put: #IDC_OtherCoverageEdit;
		at: 'IDC_OtherCoverageEdit1' put: 1718;
		at: 1718 put: #IDC_OtherCoverageEdit1;
		at: 'IDC_OtherCoverageEdit2' put: 1720;
		at: 1720 put: #IDC_OtherCoverageEdit2;
		at: 'IDC_OtherCoverageEdit3' put: 1722;
		at: 1722 put: #IDC_OtherCoverageEdit3;
		at: 'IDC_OtherDeductible1Edit' put: 2125;
		at: 2125 put: #IDC_OtherDeductible1Edit;
		at: 'IDC_OtherDeductible2Edit' put: 2130;
		at: 2130 put: #IDC_OtherDeductible2Edit;
		at: 'IDC_OtherDeductibleEdit' put: 1757;
		at: 1757 put: #IDC_OtherDeductibleEdit;
		at: 'IDC_OtherDirCombo' put: 1458;
		at: 1458 put: #IDC_OtherDirCombo;
		at: 'IDC_OtherDirRadio' put: 1462;
		at: 1462 put: #IDC_OtherDirRadio;
		at: 'IDC_OtherEALimitEdit' put: 1713;
		at: 1713 put: #IDC_OtherEALimitEdit;
		at: 'IDC_OtherLimit1Edit' put: 2126;
		at: 2126 put: #IDC_OtherLimit1Edit;
		at: 'IDC_OtherLimit2Edit' put: 2131;
		at: 2131 put: #IDC_OtherLimit2Edit;
		at: 'IDC_OtherLimitEdit' put: 1705;
		at: 1705 put: #IDC_OtherLimitEdit;
		at: 'IDC_OtherLimitEdit1' put: 1719;
		at: 1719 put: #IDC_OtherLimitEdit1;
		yourself.!
  
initItemIDsPwMain8: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDC_OtherLimitEdit2' put: 1721;
		at: 1721 put: #IDC_OtherLimitEdit2;
		at: 'IDC_OtherLimitEdit3' put: 1723;
		at: 1723 put: #IDC_OtherLimitEdit3;
		at: 'IDC_OtherType1Edit' put: 2123;
		at: 2123 put: #IDC_OtherType1Edit;
		at: 'IDC_OtherType2Edit' put: 2128;
		at: 2128 put: #IDC_OtherType2Edit;
		at: 'IDC_OtherTypeEdit' put: 1711;
		at: 1711 put: #IDC_OtherTypeEdit;
		at: 'IDC_OtherTypeEdit1' put: 1253;
		at: 1253 put: #IDC_OtherTypeEdit1;
		at: 'IDC_OtherTypeEdit2' put: 1505;
		at: 1505 put: #IDC_OtherTypeEdit2;
		at: 'IDC_OwnerGUIDEdit' put: 1065;
		at: 1065 put: #IDC_OwnerGUIDEdit;
		at: 'IDC_OwnerNameEdit' put: 1256;
		at: 1256 put: #IDC_OwnerNameEdit;
		at: 'IDC_PAAILimitEdit' put: 1651;
		at: 1651 put: #IDC_PAAILimitEdit;
		at: 'IDC_PackageNameEdit' put: 1072;
		at: 1072 put: #IDC_PackageNameEdit;
		at: 'IDC_PACOCheckbox' put: 1333;
		at: 1333 put: #IDC_PACOCheckbox;
		at: 'IDC_PACOLimitEdit' put: 1648;
		at: 1648 put: #IDC_PACOLimitEdit;
		at: 'IDC_PageBreakAfterCheck' put: 1297;
		at: 1297 put: #IDC_PageBreakAfterCheck;
		at: 'IDC_PageBreakBeforeCheck' put: 1432;
		at: 1432 put: #IDC_PageBreakBeforeCheck;
		at: 'IDC_ParameterCombo' put: 2138;
		at: 2138 put: #IDC_ParameterCombo;
		at: 'IDC_PasswordEdit' put: 1522;
		at: 1522 put: #IDC_PasswordEdit;
		at: 'IDC_PasswordText' put: 1790;
		at: 1790 put: #IDC_PasswordText;
		at: 'IDC_PastedColumnHeadersLabel' put: 1902;
		at: 1902 put: #IDC_PastedColumnHeadersLabel;
		at: 'IDC_PathEdit' put: 1100;
		at: 1100 put: #IDC_PathEdit;
		at: 'IDC_PayablePremiumEdit' put: 2083;
		at: 2083 put: #IDC_PayablePremiumEdit;
		at: 'IDC_PaymentDetailsFrame' put: 1646;
		at: 1646 put: #IDC_PaymentDetailsFrame;
		at: 'IDC_PaymentDueDateEdit' put: 2035;
		at: 2035 put: #IDC_PaymentDueDateEdit;
		at: 'IDC_PaymentDueDateEditCalendar' put: 2036;
		at: 2036 put: #IDC_PaymentDueDateEditCalendar;
		at: 'IDC_PaymentMethodFrame' put: 1643;
		at: 1643 put: #IDC_PaymentMethodFrame;
		at: 'IDC_PaymentPlanCombo' put: 1635;
		at: 1635 put: #IDC_PaymentPlanCombo;
		at: 'IDC_PaymentPlanStatic' put: 1199;
		at: 1199 put: #IDC_PaymentPlanStatic;
		at: 'IDC_PaymentTab' put: 1244;
		at: 1244 put: #IDC_PaymentTab;
		at: 'IDC_PaymentTypeCombo' put: 1029;
		at: 1029 put: #IDC_PaymentTypeCombo;
		at: 'IDC_PayorCompanyNameEdit' put: 1409;
		at: 1409 put: #IDC_PayorCompanyNameEdit;
		at: 'IDC_PayorCompanyNameText' put: 1028;
		at: 1028 put: #IDC_PayorCompanyNameText;
		at: 'IDC_PayorFirstNameEdit' put: 1133;
		at: 1133 put: #IDC_PayorFirstNameEdit;
		at: 'IDC_PayorFirstNameText' put: 1052;
		at: 1052 put: #IDC_PayorFirstNameText;
		at: 'IDC_PayorFrame' put: 1004;
		at: 1004 put: #IDC_PayorFrame;
		at: 'IDC_PayorLastNameEdit' put: 1616;
		at: 1616 put: #IDC_PayorLastNameEdit;
		at: 'IDC_PayorLastNameText' put: 1220;
		at: 1220 put: #IDC_PayorLastNameText;
		at: 'IDC_PDDeductibleEdit' put: 1174;
		at: 1174 put: #IDC_PDDeductibleEdit;
		at: 'IDC_PDFInfoText' put: 2001;
		at: 2001 put: #IDC_PDFInfoText;
		at: 'IDC_PDFLinkInfoText' put: 2002;
		at: 2002 put: #IDC_PDFLinkInfoText;
		at: 'IDC_PDLimitEdit' put: 1233;
		at: 1233 put: #IDC_PDLimitEdit;
		at: 'IDC_PercentageAuthorizedEdit' put: 1180;
		at: 1180 put: #IDC_PercentageAuthorizedEdit;
		at: 'IDC_PercentageAuthorizedSpin' put: 1383;
		at: 1383 put: #IDC_PercentageAuthorizedSpin;
		at: 'IDC_PercentageAuthorizedStatic' put: 1469;
		at: 1469 put: #IDC_PercentageAuthorizedStatic;
		at: 'IDC_PercentChangeEdit' put: 1991;
		at: 1991 put: #IDC_PercentChangeEdit;
		at: 'IDC_PeriodGroupBox' put: 1883;
		at: 1883 put: #IDC_PeriodGroupBox;
		at: 'IDC_PersonOption' put: 1467;
		at: 1467 put: #IDC_PersonOption;
		at: 'IDC_PhoneEdit' put: 1415;
		at: 1415 put: #IDC_PhoneEdit;
		at: 'IDC_PILLimitEdit' put: 1654;
		at: 1654 put: #IDC_PILLimitEdit;
		at: 'IDC_Play' put: 1866;
		at: 1866 put: #IDC_Play;
		at: 'IDC_PNRFileNameEdit' put: 1489;
		at: 1489 put: #IDC_PNRFileNameEdit;
		at: 'IDC_PNRFileNameText' put: 1560;
		at: 1560 put: #IDC_PNRFileNameText;
		at: 'IDC_POBoxEdit' put: 1344;
		at: 1344 put: #IDC_POBoxEdit;
		at: 'IDC_POEDACVCheckbox' put: 1606;
		at: 1606 put: #IDC_POEDACVCheckbox;
		at: 'IDC_POEDCheckbox' put: 1682;
		at: 1682 put: #IDC_POEDCheckbox;
		at: 'IDC_POEDDeductibleEdit' put: 1920;
		at: 1920 put: #IDC_POEDDeductibleEdit;
		at: 'IDC_POEDLimitEdit' put: 1921;
		at: 1921 put: #IDC_POEDLimitEdit;
		at: 'IDC_POEDRCCheckbox' put: 1603;
		at: 1603 put: #IDC_POEDRCCheckbox;
		at: 'IDC_PolicyCombo' put: 1873;
		at: 1873 put: #IDC_PolicyCombo;
		at: 'IDC_PolicyDetailsGroupBox' put: 1820;
		at: 1820 put: #IDC_PolicyDetailsGroupBox;
		at: 'IDC_PolicyDetailsIcon' put: 1821;
		at: 1821 put: #IDC_PolicyDetailsIcon;
		at: 'IDC_PolicyDiscountEdit' put: 1329;
		at: 1329 put: #IDC_PolicyDiscountEdit;
		at: 'IDC_PolicyHistoryAnswer' put: 1892;
		at: 1892 put: #IDC_PolicyHistoryAnswer;
		at: 'IDC_PolicyHistoryText' put: 1891;
		at: 1891 put: #IDC_PolicyHistoryText;
		at: 'IDC_PolicyImportGroupBox' put: 1808;
		at: 1808 put: #IDC_PolicyImportGroupBox;
		at: 'IDC_PolicyLimitEdit' put: 1729;
		at: 1729 put: #IDC_PolicyLimitEdit;
		at: 'IDC_PolicyMinRetainedPremiumEdit' put: 996;
		at: 996 put: #IDC_PolicyMinRetainedPremiumEdit;
		at: 'IDC_PolicyNoEdit' put: 1653;
		at: 1653 put: #IDC_PolicyNoEdit;
		at: 'IDC_PolicyNumberCombo' put: 1152;
		at: 1152 put: #IDC_PolicyNumberCombo;
		at: 'IDC_PolicyNumberEdit' put: 1279;
		at: 1279 put: #IDC_PolicyNumberEdit;
		at: 'IDC_PolicyNumberLabel' put: 1807;
		at: 1807 put: #IDC_PolicyNumberLabel;
		at: 'IDC_PolicyNumberStatic' put: 1216;
		at: 1216 put: #IDC_PolicyNumberStatic;
		at: 'IDC_PolicyNumberStatic2' put: 1879;
		at: 1879 put: #IDC_PolicyNumberStatic2;
		at: 'IDC_PolicyNumberText' put: 1283;
		at: 1283 put: #IDC_PolicyNumberText;
		at: 'IDC_PolicyOverrideTypeCombo' put: 1428;
		at: 1428 put: #IDC_PolicyOverrideTypeCombo;
		at: 'IDC_PolicyOverrideTypeText' put: 1011;
		at: 1011 put: #IDC_PolicyOverrideTypeText;
		at: 'IDC_PolicyPremiumEdit' put: 1624;
		at: 1624 put: #IDC_PolicyPremiumEdit;
		at: 'IDC_PolicyPremiumText' put: 1229;
		at: 1229 put: #IDC_PolicyPremiumText;
		at: 'IDC_PolicyThemeCombo' put: 1993;
		at: 1993 put: #IDC_PolicyThemeCombo;
		at: 'IDC_PolicyTypeCombo' put: 1433;
		at: 1433 put: #IDC_PolicyTypeCombo;
		at: 'IDC_PolicyTypeStatic' put: 1766;
		at: 1766 put: #IDC_PolicyTypeStatic;
		at: 'IDC_PolicyWorksIcon' put: 1454;
		at: 1454 put: #IDC_PolicyWorksIcon;
		at: 'IDC_PollutionCheckbox' put: 1652;
		at: 1652 put: #IDC_PollutionCheckbox;
		at: 'IDC_PollutionDeductibleEdit' put: 1916;
		at: 1916 put: #IDC_PollutionDeductibleEdit;
		at: 'IDC_PollutionLimitEdit' put: 1915;
		at: 1915 put: #IDC_PollutionLimitEdit;
		at: 'IDC_PopulationEdit' put: 1828;
		at: 1828 put: #IDC_PopulationEdit;
		at: 'IDC_PositionCombo' put: 1095;
		at: 1095 put: #IDC_PositionCombo;
		at: 'IDC_PositionEdit' put: 1044;
		at: 1044 put: #IDC_PositionEdit;
		at: 'IDC_PositionStatic' put: 1050;
		at: 1050 put: #IDC_PositionStatic;
		at: 'IDC_PostalCodeEdit' put: 1173;
		at: 1173 put: #IDC_PostalCodeEdit;
		at: 'IDC_PostalCodeStatic' put: 1577;
		at: 1577 put: #IDC_PostalCodeStatic;
		at: 'IDC_PreferenceCombo' put: 1218;
		at: 1218 put: #IDC_PreferenceCombo;
		at: 'IDC_PremiumEdit' put: 1119;
		at: 1119 put: #IDC_PremiumEdit;
		at: 'IDC_PremiumOverrideEdit' put: 1149;
		at: 1149 put: #IDC_PremiumOverrideEdit;
		at: 'IDC_PremiumRatingMethodCombo' put: 1099;
		at: 1099 put: #IDC_PremiumRatingMethodCombo;
		at: 'IDC_PremiumStatic' put: 1024;
		at: 1024 put: #IDC_PremiumStatic;
		at: 'IDC_Preview' put: 2102;
		at: 2102 put: #IDC_Preview;
		at: 'IDC_PreviewList' put: 1893;
		at: 1893 put: #IDC_PreviewList;
		at: 'IDC_PreviewRichEdit' put: 2046;
		at: 2046 put: #IDC_PreviewRichEdit;
		at: 'IDC_PreviousButton' put: 1390;
		at: 1390 put: #IDC_PreviousButton;
		at: 'IDC_PreviousPolicyList' put: 1623;
		at: 1623 put: #IDC_PreviousPolicyList;
		at: 'IDC_PrincipalOwnerCheck' put: 1140;
		at: 1140 put: #IDC_PrincipalOwnerCheck;
		yourself.!
  
initItemIDsPwMain9: aDictionary
"
	Access: Private
	Category Name: Item IDs
	Comment: This method is automatically generated by #parseDotHFile:dllName:.
"
	aDictionary
		at: 'IDC_Print' put: 1260;
		at: 1260 put: #IDC_Print;
		at: 'IDC_PrintAsApplicantCheck' put: 1986;
		at: 1986 put: #IDC_PrintAsApplicantCheck;
		at: 'IDC_PrintAsCoApplicantCheck' put: 1987;
		at: 1987 put: #IDC_PrintAsCoApplicantCheck;
		at: 'IDC_PrintClause' put: 1058;
		at: 1058 put: #IDC_PrintClause;
		at: 'IDC_PrintCombo' put: 1351;
		at: 1351 put: #IDC_PrintCombo;
		at: 'IDC_PrintCopyCombo' put: 1080;
		at: 1080 put: #IDC_PrintCopyCombo;
		at: 'IDC_PrintDraft' put: 1429;
		at: 1429 put: #IDC_PrintDraft;
		at: 'IDC_PrinterEdit' put: 1837;
		at: 1837 put: #IDC_PrinterEdit;
		at: 'IDC_PrinterIcon' put: 1212;
		at: 1212 put: #IDC_PrinterIcon;
		at: 'IDC_PrinterNameEdit' put: 1258;
		at: 1258 put: #IDC_PrinterNameEdit;
		at: 'IDC_PrinterRadio' put: 1139;
		at: 1139 put: #IDC_PrinterRadio;
		at: 'IDC_PrintFinal' put: 1477;
		at: 1477 put: #IDC_PrintFinal;
		at: 'IDC_PrintGroupBox' put: 1365;
		at: 1365 put: #IDC_PrintGroupBox;
		at: 'IDC_PrintInstructionsCombo' put: 1671;
		at: 1671 put: #IDC_PrintInstructionsCombo;
		at: 'IDC_PrintOrdinalsCheck' put: 2007;
		at: 2007 put: #IDC_PrintOrdinalsCheck;
		at: 'IDC_PrintOtherPoliciesCheck' put: 1474;
		at: 1474 put: #IDC_PrintOtherPoliciesCheck;
		at: 'IDC_PrintPrinterStatic' put: 1182;
		at: 1182 put: #IDC_PrintPrinterStatic;
		at: 'IDC_PrintRadio' put: 1839;
		at: 1839 put: #IDC_PrintRadio;
		at: 'IDC_PrintSOIPremiumsCheck' put: 1611;
		at: 1611 put: #IDC_PrintSOIPremiumsCheck;
		at: 'IDC_PriorCarrierUnknownCheck' put: 1369;
		at: 1369 put: #IDC_PriorCarrierUnknownCheck;
		at: 'IDC_PriorClaimsUnknownCheck' put: 1564;
		at: 1564 put: #IDC_PriorClaimsUnknownCheck;
		at: 'IDC_ProcessingDayEdit' put: 1269;
		at: 1269 put: #IDC_ProcessingDayEdit;
		at: 'IDC_ProcessingDayText' put: 1585;
		at: 1585 put: #IDC_ProcessingDayText;
		at: 'IDC_ProducerCheck' put: 1157;
		at: 1157 put: #IDC_ProducerCheck;
		at: 'IDC_ProducerCombo' put: 1601;
		at: 1601 put: #IDC_ProducerCombo;
		at: 'IDC_ProducerExclamation' put: 1298;
		at: 1298 put: #IDC_ProducerExclamation;
		at: 'IDC_ProducerNumberEdit' put: 1764;
		at: 1764 put: #IDC_ProducerNumberEdit;
		at: 'IDC_ProducerPhoneEdit' put: 1230;
		at: 1230 put: #IDC_ProducerPhoneEdit;
		at: 'IDC_ProductLineCombo' put: 1183;
		at: 1183 put: #IDC_ProductLineCombo;
		at: 'IDC_ProductLineText' put: 1071;
		at: 1071 put: #IDC_ProductLineText;
		at: 'IDC_ProgressBar' put: 2097;
		at: 2097 put: #IDC_ProgressBar;
		at: 'IDC_Properties' put: 1076;
		at: 1076 put: #IDC_Properties;
		at: 'IDC_PropertyBroadFormCheckbox' put: 1952;
		at: 1952 put: #IDC_PropertyBroadFormCheckbox;
		at: 'IDC_PropertyCheckbox' put: 1955;
		at: 1955 put: #IDC_PropertyCheckbox;
		at: 'IDC_PropertyNamedPerilsCheckbox' put: 1951;
		at: 1951 put: #IDC_PropertyNamedPerilsCheckbox;
		at: 'IDC_ProportionInsuredEdit' put: 1211;
		at: 1211 put: #IDC_ProportionInsuredEdit;
		at: 'IDC_ProposedDateStatic' put: 1515;
		at: 1515 put: #IDC_ProposedDateStatic;
		at: 'IDC_ProvinceCombo' put: 1048;
		at: 1048 put: #IDC_ProvinceCombo;
		at: 'IDC_ProvinceStatic' put: 1006;
		at: 1006 put: #IDC_ProvinceStatic;
		at: 'IDC_PSEdit' put: 1025;
		at: 1025 put: #IDC_PSEdit;
		at: 'IDC_PurposeEdit' put: 1132;
		at: 1132 put: #IDC_PurposeEdit;
		at: 'IDC_QuarterCombo' put: 1012;
		at: 1012 put: #IDC_QuarterCombo;
		at: 'IDC_QuarterLabel' put: 1512;
		at: 1512 put: #IDC_QuarterLabel;
		at: 'IDC_QuotationCoveragesImport' put: 1854;
		at: 1854 put: #IDC_QuotationCoveragesImport;
		at: 'IDC_QuotationCoveragesKeep' put: 1853;
		at: 1853 put: #IDC_QuotationCoveragesKeep;
		at: 'IDC_QuotationDownloadRadio' put: 1842;
		at: 1842 put: #IDC_QuotationDownloadRadio;
		at: 'IDC_QuotationFeedbackCheckbox' put: 1870;
		at: 1870 put: #IDC_QuotationFeedbackCheckbox;
		at: 'IDC_QuotationIcon' put: 1845;
		at: 1845 put: #IDC_QuotationIcon;
		at: 'IDC_QuotationUWImport' put: 1852;
		at: 1852 put: #IDC_QuotationUWImport;
		at: 'IDC_QuotationUWKeep' put: 1851;
		at: 1851 put: #IDC_QuotationUWKeep;
		at: 'IDC_QuoteList' put: 2026;
		at: 2026 put: #IDC_QuoteList;
		at: 'IDC_QuoteNumberEdit' put: 1209;
		at: 1209 put: #IDC_QuoteNumberEdit;
		at: 'IDC_RangeCombo' put: 1277;
		at: 1277 put: #IDC_RangeCombo;
		at: 'IDC_RangeLabel' put: 1340;
		at: 1340 put: #IDC_RangeLabel;
		at: 'IDC_RatedPremiumClassCombo' put: 1468;
		at: 1468 put: #IDC_RatedPremiumClassCombo;
		at: 'IDC_RatePlanCombo' put: 2052;
		at: 2052 put: #IDC_RatePlanCombo;
		at: 'IDC_RatingPropertiesButton' put: 1461;
		at: 1461 put: #IDC_RatingPropertiesButton;
		at: 'IDC_RatingServiceCombo' put: 992;
		at: 992 put: #IDC_RatingServiceCombo;
		at: 'IDC_RatingServiceText' put: 993;
		at: 993 put: #IDC_RatingServiceText;
		at: 'IDC_ReadOnlyButton' put: 1544;
		at: 1544 put: #IDC_ReadOnlyButton;
		at: 'IDC_ReasonCancelledCombo' put: 1491;
		at: 1491 put: #IDC_ReasonCancelledCombo;
		at: 'IDC_ReasonCombo' put: 1518;
		at: 1518 put: #IDC_ReasonCombo;
		at: 'IDC_ReasonEdit' put: 1145;
		at: 1145 put: #IDC_ReasonEdit;
		at: 'IDC_ReasonStatic' put: 1225;
		at: 1225 put: #IDC_ReasonStatic;
		at: 'IDC_ReferenceNumberEdit' put: 1803;
		at: 1803 put: #IDC_ReferenceNumberEdit;
		at: 'IDC_ReinstatementCheck' put: 1135;
		at: 1135 put: #IDC_ReinstatementCheck;
		at: 'IDC_RemainingFlatChargeStatic' put: 2082;
		at: 2082 put: #IDC_RemainingFlatChargeStatic;
		at: 'IDC_RemarksEdit' put: 2108;
		at: 2108 put: #IDC_RemarksEdit;
		at: 'IDC_Remove' put: 1374;
		at: 1374 put: #IDC_Remove;
		at: 'IDC_RemoveAfterImport' put: 1767;
		at: 1767 put: #IDC_RemoveAfterImport;
		at: 'IDC_Rename' put: 1582;
		at: 1582 put: #IDC_Rename;
		at: 'IDC_RenewalCheck' put: 1142;
		at: 1142 put: #IDC_RenewalCheck;
		at: 'IDC_RenewButton' put: 1481;
		at: 1481 put: #IDC_RenewButton;
		at: 'IDC_RentalIncomeCheckbox' put: 1688;
		at: 1688 put: #IDC_RentalIncomeCheckbox;
		at: 'IDC_RentalIncomeDeductibleEdit' put: 1934;
		at: 1934 put: #IDC_RentalIncomeDeductibleEdit;
		at: 'IDC_RentalIncomeLimitEdit' put: 1935;
		at: 1935 put: #IDC_RentalIncomeLimitEdit;
		at: 'IDC_Replace' put: 1559;
		at: 1559 put: #IDC_Replace;
		at: 'IDC_ReplaceAll' put: 1053;
		at: 1053 put: #IDC_ReplaceAll;
		at: 'IDC_ReplaceAllButton' put: 1059;
		at: 1059 put: #IDC_ReplaceAllButton;
		at: 'IDC_ReplaceButton' put: 1273;
		at: 1273 put: #IDC_ReplaceButton;
		at: 'IDC_ReplacedPolicyNoEdit' put: 1318;
		at: 1318 put: #IDC_ReplacedPolicyNoEdit;
		at: 'IDC_ReplaceEdit' put: 1384;
		at: 1384 put: #IDC_ReplaceEdit;
		at: 'IDC_ReplacementCostCheckbox' put: 1942;
		at: 1942 put: #IDC_ReplacementCostCheckbox;
		at: 'IDC_ReplacementCostEdit' put: 1506;
		at: 1506 put: #IDC_ReplacementCostEdit;
		at: 'IDC_ReplaceText' put: 1051;
		at: 1051 put: #IDC_ReplaceText;
		at: 'IDC_ReportFileLink' put: 1898;
		at: 1898 put: #IDC_ReportFileLink;
		at: 'IDC_ReportIcon' put: 1966;
		at: 1966 put: #IDC_ReportIcon;
		at: 'IDC_RequiredButton' put: 1494;
		at: 1494 put: #IDC_RequiredButton;
		at: 'IDC_RequiredOption' put: 1516;
		at: 1516 put: #IDC_RequiredOption;
		at: 'IDC_RequiredOptionalOption' put: 1321;
		at: 1321 put: #IDC_RequiredOptionalOption;
		at: 'IDC_RequiresIBCCodingCheck' put: 1343;
		at: 1343 put: #IDC_RequiresIBCCodingCheck;
		at: 'IDC_Reset' put: 1814;
		at: 1814 put: #IDC_Reset;
		at: 'IDC_ResetCommissionsCheck' put: 1263;
		at: 1263 put: #IDC_ResetCommissionsCheck;
		at: 'IDC_ResetDeltek' put: 1756;
		at: 1756 put: #IDC_ResetDeltek;
		at: 'IDC_ResetNameButton' put: 1968;
		at: 1968 put: #IDC_ResetNameButton;
		at: 'IDC_ResetPolicyWorks' put: 1448;
		at: 1448 put: #IDC_ResetPolicyWorks;
		at: 'IDC_ResetSearch' put: 1905;
		at: 1905 put: #IDC_ResetSearch;
		at: 'IDC_ResetSesame' put: 1847;
		at: 1847 put: #IDC_ResetSesame;
		at: 'IDC_ResetTAM' put: 1476;
		at: 1476 put: #IDC_ResetTAM;
		at: 'IDC_ResponseCombo' put: 1125;
		at: 1125 put: #IDC_ResponseCombo;
		at: 'IDC_ResponseFileEdit' put: 1126;
		at: 1126 put: #IDC_ResponseFileEdit;
		yourself.!

initSurveyQuestionMap
"
	Access: Private
	Abstract: Yes
	Category Name: Survey
	Result Type: Dictionary
"
    ^surveyQuestionMap := Dictionary new
!

itemIds
"
	Category Name: Item IDs
	Result Type: Dictionary
"
	^self itemIDsByDLL
		at: self dllName
		ifAbsent: [self initItemIDs].
!
  
itemIDsByDLL
"
	Access: Private
	Category Name: Item IDs
	Description: Answers the Dictionary of item IDs
				 organized by DLL name.
	Result Type: Dictionary
"
	ItemIDsByDLL == nil ifTrue: [
		ItemIDsByDLL := Dictionary new.
	].
	^ItemIDsByDLL.
!
 
methodHeaderForInitItemIDs
"
	Access: Private
	Category Name: Item IDs:Development
	Result Type: String
"
	^'"\n\tAccess: Private\n\tCategory Name: Item IDs\n\tComment: This method is automatically generated by #parseDotHFile:dllName:.\n"' replaceEscapeCharacters.
!
   
notifications
"
	Access: Private
	Category Name: Property Sheet
	Description: Answer a Dictionary mapping between
				 property-sheet notification codes and the
				 corresponding Smalltalk methods that process them.
	Result Type: Dictionary
"
	Notifications == nil ifTrue: [
		self initializeNotifications.
	].
	^Notifications.!
   
notifications: aDictionary
"
	Access: Private
	Category Name: Property Sheet
	Description: Sets the Dictionary mapping between
				 property-sheet notification codes and the
				 corresponding Smalltalk methods that process them.
"
	Notifications := aDictionary.!
 
parseDotHFile: aFileName
"
	Category Name: Item IDs:Development
	Description: Not supported.
"
	^self error: 'Method not supported:  use T4DialogBox>>parseDotHFile:dllName:'.!

parseDotHFile: aString dllName: aString2
"
    Category Name: Item IDs:Development
    Description: Creates a method in the receiving class which initializes
                 the ItemIDsByDLL class variable, which maps item IDs to
                 item names (symbols) and vice versa.  ItemIDsByDLL
                 contains a Dictionary for each resource-only DLL,
                 describing the items in that DLL; these dictionaries
                 are stored in another Dictionary, keyed on DLL name.

                 The new method is given the selector #initItemIds<aDLLName>.

                Parameters:
                    aFileName   The full path to a .h file created
                                by the Dialog Box Editor.
                    aDLLName    The name of the dll whose contents
                                are described in the .h file.

                 Enhancements:
                    It would be nice if the class could automatically
                    determine if the methods produced by this method
                    were out of date with their header files and, if
                    so, recompile them.
"
    | identifiers ids methodNames selector stream |

    self checkResourceFile: aString dllName: aString2.
    
    self removeInitItemIDsMethods: aString2.

    identifiers := self identifiersFromDotHFile: aString.
    self assertNoDuplicateValues: identifiers fileName: aString.
    ids := OrderedCollection with: Dictionary new.  

    "Break indentifies into smaller set so method max size is not exceeded"
    identifiers keys asSortedCollection do: [:key |
        | value |
        
        value := identifiers at: key.
        
        ids last size > 100 ifTrue: [ids addLast: Dictionary new].
        ids last at: key put: value.    
    ].
    
    methodNames := OrderedCollection new.
    1 to: ids size do: [:i |
        methodNames addLast: 'initItemIDs', aString2, i printString, ':'.
        self
            createInitItemIDsMethodWithSelector: methodNames last
            forIDs: (ids at: i).
    ].

    selector := ('initItemIDs', aString2) asSymbol.     
    stream := WriteStream on: String new.
    

    stream
            nextPutAll: selector;
            cr;
            nextPutAll: self methodHeaderForInitItemIDs;
            cr;
            tab;
            nextPutAll: '| dllDict |';
            cr;
            cr;
            tab;
            nextPutAll: 'dllDict := self itemIDsByDLL at: ';
            print: aString2;
            nextPutAll: ' ifAbsent: [nil].';
            cr;
            tab;
            nextPutAll: 'dllDict ifNotNil: [^dllDict].';
            cr;
            cr;
            tab;            
            nextPutAll: 'dllDict := Dictionary new.';
            cr;
            tab;
            nextPutAll: 'self itemIDsByDLL at: ';
            print: aString2;
            nextPutAll: ' put: dllDict.';
            cr;
            tab;
            nextPutAll: 'self'.
    
    methodNames  do: [:each |
        stream
            cr;
            tab;
            tab;
            nextPutAll: each;
            nextPutAll: ' dllDict;'.
    ].
    
    stream
        cr;
        tab;
        tab;
        nextPutAll: 'yourself.';
        cr;
        tab;
        nextPutAll: '^dllDict'.
            
    (self class compile: stream contents) isNil 
        ifTrue: [^self error: 'Cannot compile method ', selector].
        
    SourceManager current
        logSource: stream contents
        forSelector: selector
        inClass: self class.
    
    "Clear cache"   
    self itemIDsByDLL removeKey: aString2 ifAbsent: []
    
    !
   
policyWorksDLLName
"
	Category Name: Window Creation
	Description: Answers the name of the Policy Works DLL.
	Result Type: String
"
	^'PwMain'.!
  
rebuildDotHFile: aFileSystemPath
"
    Category Name: Item IDs:Development
    Description: Not supported.
"
   | path writer lines defines controlID resourceID usedResourceIDs |
    
   path := ((aFileSystemPath ifNil: [
        | dialog |
            dialog := T4FileDialog new
                title: 'Choose a header file...';
                fileSpec: '*.h';
                defFilter: 'Header files';
                addFilter: '*.h' description: 'Header files';
                save;
                file
    ]) ifNil: [^self]) asFileSystemPath.
    
    writer := (path replaceExtension: '.h.new') asFileSystemPath asFile writeStream.
    lines := path asFile contents asArrayOfLines asOrderedCollection.

    [lines first beginsWith: '//'] whileTrue: [
        writer nextPutAll: lines removeFirst; cr.
    ].

    defines := Dictionary new.

    [lines first beginsWith: '// Next default'] whileFalse: [
        | line tokens |
        
        line := lines removeFirst.
        tokens := line asArrayOfSubstrings.
        tokens size > 0 ifTrue: [
            tokens size = 3 ifFalse: [self halt].
            defines at: (tokens at: 2) put: (tokens at: 3).
        ].
    ].

   "Special Control id, ignore"
   defines removeKey: 'IDC_STATIC' ifAbsent: [].
   
   controlID := 1039. "IDC_"
   resourceID := 110. "IDB_ IDI_ IDD_"
   usedResourceIDs := OrderedCollection new.
   
   "Don't change bitmap and icon ids because they are referenced by dialogs using the number and not the id"
	defines copy keysAndValuesDo: [:key :id |
		((key beginsWith: 'IDI') or: [(key beginsWith: 'IDB')]) ifTrue: [
			defines at: key put: id asInteger.
			(usedResourceIDs includes: id asInteger) ifTrue: [self halt].
			usedResourceIDs add: id asInteger.
		].	
	].
	
	"Do old style IDs without a ID prefix"
	defines copy keysAndValuesDo: [:key :id |
		id isString ifTrue: [
			(key beginsWith: 'ID') ifFalse: [
				[usedResourceIDs includes: resourceID] whileTrue: [
					resourceID := resourceID + 1.
				].		
				defines at: key put: resourceID.
				resourceID := resourceID + 1.
			].	
		].
	].
	
	"IDD"
	defines copy keysAndValuesDo: [:key :id |
		id isString ifTrue: [
			(key beginsWith: 'IDD') ifTrue: [
				[usedResourceIDs includes: resourceID] whileTrue: [
					resourceID := resourceID + 1.
				].		
				defines at: key put: resourceID.
				resourceID := resourceID + 1.
			].	
		].
	].
	
	"IDC"
	defines copy keysAndValuesDo: [:key :id |
		id isString ifTrue: [
			(key beginsWith: 'IDC') ifTrue: [
				[usedResourceIDs includes: controlID] whileTrue: [
					controlID := controlID + 1.
				].		
				defines at: key put: controlID.
				controlID := controlID + 1.
			].	
		].
	].
	
	"Any left over"
	defines copy keysAndValuesDo: [:key :id |
		id isString ifTrue: [
			[usedResourceIDs includes: resourceID] whileTrue: [
				resourceID := resourceID + 1.
			].		
			defines at: key put: resourceID.
			resourceID := resourceID + 1.
		].
	].
	
	"Update resourceID for use in _APS_NEXT_RESOURCE_VALUE below"
	resourceID := usedResourceIDs inject: resourceID into: [:e :max | e max: max].
		
	defines values asSortedCollection do: [:id |
		  | key |

		key := defines keyAtValue: id.
		writer nextPutAll: '#define '; nextPutAll: key.
		((32 - key size) max: 1) timesRepeat: [writer space].
	 	writer print: id; cr.
	].
	
	 writer 
		  nextPutAll: '#define IDC_STATIC                      -1'; cr; 
		  cr;
		  nextPutAll: '// Next default values for new objects'; cr;
		  nextPutAll: '//'; cr;
		  nextPutAll: '#ifdef APSTUDIO_INVOKED'; cr;
		  nextPutAll: '#ifndef APSTUDIO_READONLY_SYMBOLS'; cr;
		  nextPutAll: '#define _APS_NO_MFC                     1'; cr;
		  nextPutAll: '#define _APS_NEXT_RESOURCE_VALUE        '; print: resourceID; cr;
		  nextPutAll: '#define _APS_NEXT_COMMAND_VALUE         40001'; cr;
		  nextPutAll: '#define _APS_NEXT_CONTROL_VALUE         '; print: controlID; cr;
		  nextPutAll: '#define _APS_NEXT_SYMED_VALUE           101'; cr;
		  nextPutAll: '#endif'; cr;
		  nextPutAll: '#endif'; cr; 
		  close.

!
 
removeInitItemIDsMethods: aString
"
	Access: Private
	Category Name: Item IDs:Development
	Description: Remove all automatically generated methods for given library name
"
	(self class selectors select: [:each | 
		each beginsWith: 'initItemIDs', aString
	]) do: [:each | self class removeSelector: each]
!
 
resequenceResourceFile: aString dialogsStartAt: anInteger controlsStartAt: anInteger2
"
	Category Name: Parsing Utility
	Description: This is a parsing function that takes the .h file and resequences the
		dialogs and controls starting at the specified integer.
"
	| stream dialogID controlID line controlLabel id |

	aString assertKindOf: String.
	anInteger assertKindOf: Integer.
	anInteger2 assertKindOf: Integer.
	
	stream := File pathName: aString.
	dialogID := anInteger.
	controlID := anInteger2.
	
	[
		line := stream nextLine.
		[stream atEnd] whileFalse: [
			(line beginsWith: '//') ifTrue: [
				Transcript nextPutAll: line;cr.
			] ifFalse: [
				(line beginsWith: '#define ') ifTrue: [
					(line copyFrom: ('#define ' size + 1) to: line size) ifNotNil: [:remainingLine |
						controlLabel := remainingLine upTo: $ .
						id := (remainingLine copyFrom: (controlLabel size + 1) to: remainingLine size) trimBlanks.
						(controlLabel beginsWith: 'IDD') ifTrue: [
							Transcript nextPutAll: '#define ', controlLabel, '     ', dialogID printString; cr.
							dialogID := dialogID + 1
						] ifFalse: [
							(controlLabel beginsWith: 'IDC') ifTrue: [
								Transcript nextPutAll: '#define ', controlLabel, '     ', controlID printString; cr.
								controlID := controlID + 1
							] ifFalse: [
								Transcript nextPutAll: line;cr.
							]
						].
					]
				] ifFalse: [
					Transcript nextPutAll: line;cr.
				].
			].
			line := stream nextLine.
		].
		Transcript nextPutAll: line;cr.
	] ensure: [stream close].		
!
   
resolveUILanguageItemID: anObject
"
    Category Name: Window Creation
    Description: Answers the language specific resource. 
        To create a language specific resource add 'ENC', 'FRC' or 'ENU' to end of resource
            e.g. IDB_PolicyFRC
    Result Type: String
"
    | itemId  |
    
    anObject isString ifFalse: [^anObject].
    
    itemId := anObject, T4NLS UILanguageCode.
    
    "If there is no language specific use default"
    (self itemIds includesKey: itemId) ifFalse: [^anObject].
        
    ^itemId
 !

signatureBitmap
"
    Category Name: Images
    Result Type: Bitmap
"
    ^self bitmapAt: 'IDB_CompanySignature'.!
 
smallIconAt: anObject
"
	Category Name: Icons
	Result Type: Icon
"
	^self
		smallIconAt: anObject
		ifAbsent: [self error: 'Cannot find small icon ', anObject printString].
!
  
smallIconAt: anObject ifAbsent: aBlock
"
    Category Name: Icons
    Description: Answers the Icon identified by anObject,
                 which contains either the symbolic name (String) or
                 the item ID (Integer) of the icon resource.
    Result Type: T4Icon
"

    ^(self getIconAt: anObject type: #small ifAbsent: [^aBlock value]) ifNil: aBlock.

!

surveyQuestionMap
"
    Category Name: Survey
    Result Type: Dictionary
"
    surveyQuestionMap isNil ifTrue: [self initSurveyQuestionMap].
    
    ^surveyQuestionMap
!
 
tabIcon
"
	Abstract: Yes
	Category Name: Property Sheet
	Comment: To implement a tab image for your subclass you can do one of the following 
			 to make sure that icon handles aren't being leaked:
				a) Override getTabIcon to fetch your icon from a dll.  This icon will be then
				   cached for you in the tabImage class instance variable.
				b) Override tabImage to get the icon from somewhere else.  Make certain that your
				   source is already caching the icon on its own (ex: T4DomainObject class>>icon).
	Result Type: T4Icon_orNil
"
	(tabIcon isNil or: [tabIcon isValid not]) ifTrue: [
		tabIcon := self getTabIcon.
	].
	^tabIcon.
!

tabLabel
"
	Abstract: Yes
	Category Name: Property Sheet
	Result Type: String
"
	^self listText.

!
 
tabLabelENC
"
    Abstract: Yes
    Category Name: Development
    Result Type: String
"
    | enc oldLanguage |
    
    oldLanguage := T4NLS uiLanguageCode.
    T4NLS uiLanguageCode: T4NLS englishCanadaCode.
    enc := self tabLabel.
    ^enc
!
  
tabLabelFRC
"
    Abstract: Yes
    Category Name: Development
    Result Type: String
"
    | frc oldLanguage |
    
    oldLanguage := T4NLS uiLanguageCode.
    T4NLS uiLanguageCode: T4NLS frenchCanadaCode.
    frc := self tabLabel.
    ^frc
!
   
tabLabels
"
    Abstract: Yes
    Category Name: Development
    Result Type: String
"
    | enc frc oldLanguage |
    
    oldLanguage := T4NLS uiLanguageCode.
    T4NLS uiLanguageCode: T4NLS englishCanadaCode.
    enc := self tabLabel.
    T4NLS uiLanguageCode: T4NLS frenchCanadaCode.
    frc := self tabLabel.
    T4NLS uiLanguageCode: oldLanguage.
    ^'ENC: "', enc, '" FRC: "', frc, '"'
!
  
templateID
"
    Category Name: Window Creation
    Description: Answers the ID of the receiver's dialog template.
	Result Type: Integer
"
	^self itemIds at: self templateNameForUILanguage.
!
  
templateName
"
	Abstract: Yes
	Category Name: Window Creation
	Description: Answers the name of the dialog's template.
	Result Type: String
"
	^self implementedBySubclass.!
 
templateNameForUILanguage
"
    Category Name: Window Creation
    Description: Answers the name of the dialog's template for current UI language
	Result Type: String
"
	^self resolveUILanguageItemID: self templateName!
   
titleFont
"
    Category Name: UI
    Result Type: Font
"
    ^(Font
        face: 'Helv'
        size: 13 @ 20
        fixedWidth: false
        attributes: 0)
        bold: true.
!
   
updateThumbNail: aBitmap image: aT4Image
"
    Access: Private
    Category Name: Updating
"
    self
        updateThumbNail: aBitmap 
        image: aT4Image 
        backColor: Color white.!
   
updateThumbNail: aBitmap image: aT4Image_orNil backColor: aColor
"
    Access: Private
    Category Name: Updating
"
    | image |
    
    aT4Image_orNil isNil ifTrue: [^self].
    image := aT4Image_orNil ifNil: [^self].
    
    aBitmap pen fill: aColor.
    image
        displayWith: aBitmap pen
        at: (0 @ 0 extent: aBitmap extent).
    aBitmap deselect. "Need to deselect because Bitmap>>pen selects"!
 
useMultipleTabRows
"
    Category Name: Layout
    Description: Answers whether dialogs should use multiple rows of tabs, or a single row.
    Result Type: Boolean
"
    | rect |

    "Switch to a single row of tabs at lower resolutions."
    rect := Display workAreaRectangle.
    rect width > 800 ifFalse: [^false].
    rect height > 600 ifFalse: [^false].

    ^true.
! !



!T4DialogBox methods !
  
activatePage
"
    Access: Private
    Abstract: Yes
    Category Name: Property Sheet
    Description: The receiver is being activated.  Update
                 the dialog if necessary.
"
    self refreshWizardBitmap.
    
    self refreshTopicAssistantForPage.
!
 
amountToScrollLeft
"
    Access: Private
    Category Name: Scroll Bars
    Result Type: Integer
"
    ^8!

amountToScrollUp
"
    Access: Private
    Category Name: Scroll Bars
    Result Type: Integer
"
    ^8
!

apply
"
    Access: Private
    Abstract: Yes
    Category Name: Input
    Description: Applies all changes to the dataObject.
                 Any problems are signaled with a UserInputError.
"
    self surveyQuestionMap keysAndValuesDo: [:ctrlId :sqn |     
        (self paneAt: ctrlId ifAbsent: []) ifNotNil: [:ctrl |
            ctrl applySurveyAnswerNamed: sqn using: self
        ]
    ].
!
  
basicApplyStyle
"
    Access: Private
    Category Name: Window Creation
    Description: Apply a style change to a window which accepts it.
    Comments: Cannot use applyStyle implementation because it activates this page and 
        bring it to the foreground. We cannot do this because this page may not be the current page
"
    UserLibrary
        setWindowLong: self handle asParameter
        index: GwlStyle
        long: self style.
    UserLibrary
        setWindowLong: self handle asParameter
        index: GwlExstyle
        long: self extendedStyle.

    self handle
        setWindowPos: nil   "to redraw the window"
        rectangle: self frameRelativeRectangle
        fs: SwpDrawframe | SwpNozorder.!
   
basicClose
"
	Access: Private
	Category Name: Instance Destruction
	Description: Close the receiver.
"
	"To avoid a memory leak, tell the receiver to stop
	 receiving messages before closing the children;
	 otherwise, subsequent messages can cause them to get
	 (re)created after this method closes them."
	self stopReceivingMessages.

	graphicsTool isGraphicsTool ifTrue: [
		graphicsTool destroy.
		graphicsTool := nil.
	].

	"We have to make the controls stop receiving Windows messages."
	self children do: [:control | control close].
	self unnamedControls do: [:control | control close].

	self isNonmodalChild ifTrue: [
		"The super>>close method enables the owner as
		 part of Smalltalk's 'simulated' modality.
		 When we open a dialog as a nonmodal child,
		 we don't disable the owner, so we don't need
		 to reenable it. Clear the owner before
		 closing to avoid reenabling."
		self owner: nil.
	].

	super close.!
   
basicOpen
"
    Access: Private
    Category Name: Window Creation
    Description: Opens the dialog box.
"
    self
        fromDLLFile: self class dllPathName
        templateName: self templateNameForUILanguage.
!
   
buildWindow: parentWindow
"
	Access: Private
	Category Name: MDI
	Description: Create the dialog box as a nonmodal child window.
"
	"When opening a dialog box nonmodally, as a child
	 window, we have to wait until the parent window has
	 a valid handle before creating the dialog. To do
	 so, we hook into the stock Smalltalk protocol for
	 building and validating windows."

	self isNonmodalChild ifTrue: [
		self basicOpen.
	].
!
  
button1DoubleClick: aPoint
"
    Category Name: Mouse
"
    (T4SettingsManager isDebugging and: [Notifier isControlKeyDown]) ifTrue: [
        Smalltalk isRunTime 
            ifTrue: [T4InformationMessage title: 'Debug' text: self class name] 
            ifFalse: [self inspect]. 
    ].
    self refreshTopicAssistantForPage.!
  
button1Down: aPoint
"
    Category Name: Mouse
"
    self refreshTopicAssistantForPage.

    super button1Down: aPoint.!
  
Cancel
"
	Category Name: Handler
	Description: For the Cancel button.
"
	self close.
!

cancelFromRmEditMultiLine
"
    Category Name: Handler
    Description: For the Cancel button.
"
    (self isPropertySheetPage or: [self propertySheet isKindOf: T4StorageViewListEditDialog]) ifTrue: [
        self psnQuerycancel ifFalse: [
            self propertySheet close.
        ].
    ].!
   
centerWindow
"
	Access: Private
	Category Name: Window Creation
	Description: Centers the receiver.
"
	| mainWindow rectStruct centeredRectangle |

	"Get a rectangle for centering the dialog on the
	 application."
	rectStruct := WinRectangle new.
	UserLibrary
		getWindowRect: self asParameter
		rectangle: rectStruct asParameter.
	centeredRectangle := Window centerExtentInApplicationMdiClientOrDisplay: rectStruct asRectangle extent.

	"Move the dialog window to the desired point."
	UserLibrary
		moveWindow: self asParameter
		x: centeredRectangle origin x
		y: centeredRectangle origin y
		width: centeredRectangle width
		height: centeredRectangle height
		repaint: false.

!
  
childAtId: anInteger
"
	Category Name: Controls:Compatibility
	Description: Answer the child with the id anInteger;
				 load (create) the appropriate control
				 object if necessary.
	Result Type: SubPane
"
	"Window>>wmNotify:with: assumes that #childAtId: answers
	 nil if the control is not found.  We need to comply or
	 else new notifications messages can cause RTE's."
	^self
		paneAt: anInteger
		ifAbsent: [nil].
!
   
children
"
	Access: Private
	Category Name: Window
	Description: Overrides the version inherited from
				 Window to lazy-initialize the instance variable.
"
	children isNil ifTrue: [children := IdentityDictionary new].
	^children.
!
  
childrenDo: aOneArgBlock
"
	Access: Private
	Category Name: Controls
	Description: Performs aOneArgBlock on each of the receiver's children.
"
	| cHandle id |

	cHandle := UserLibrary getWindow: handle relationship: GwChild.
	[cHandle ~= 0] whileTrue: [
		id := UserLibrary getWindowLong: cHandle index: GwlId.
		(self paneAt: id ifAbsent: [nil]) ifNotNil: [:control |
			aOneArgBlock value: control.
		].
		cHandle := UserLibrary getWindow: cHandle relationship: GwHwndnext.
	].
!
   
classNameForControl: hWnd id: anInteger
"
	Category Name: Controls
	Description: Answers the RmControl class name for anInteger.
				 Override this method to change the class
				 of control created for a given item ID.
	Result Type: String
"
	| className |

	^self controlClassOverrides at: anInteger ifAbsent: [
		className := String new: 64.
		UserLibrary
			   getClassName: hWnd
			   buffer:	  className
			bufSize: className size.
		className trimNullTerminator.
	].

!
 
clearAll
"
    Access: Private
    Abstract: Yes
    Category Name: Refresh
    Description: Clears all the receiver's controls.
"
	self surveyQuestionMap keysAndValuesDo: [:ctrlId :sqn |
		(self paneAt: ctrlId ifAbsent: []) ifNotNil: [:ctrl | ctrl surveyAnswer: nil]
	].
!
 
clearTopicAssistant
"
    Access: Private
    Category Name: Topic Assistant
"
    T4TopicAssistant current topic: nil.
!
 
clientAreaExtent
"
    Access: Private
    Category Name: Scroll Bars
    Result Type: Extent
"   
    ^(self mapDialogPoint: self templateExtent) + (self scrollBarHHeight @ self scrollBarVWidth). "Add space for scroll bars"
!
   
clientAreaHeight
"
    Access: Private
    Category Name: Scroll Bars
    Result Type: Integer
"   
    ^self clientAreaExtent y.!

clientAreaWidth
"
    Access: Private
    Category Name: Scroll Bars
    Result Type: Integer
"   
    ^self clientAreaExtent x!
  
close
"
    Category Name: Instance Destruction
    Description: Cancel the operation and close the receiver.
"   
    "Set dataObject to nil so the caller knows the user cancelled."
    self dataObject: nil.
    self icon: nil.

    self basicClose.!

closeDLL
"
	Access: Private
	Category Name: Instance Destruction
	Description: Closes the receiver's DLL.
"
	hLibrary notNil ifTrue: [
		KernelLibrary freeLibrary: hLibrary.
		hLibrary := nil.
	].

!
  
contents
"
	Category Name: WBP:Compatibility
"
	^self dataObject.
!

contents: anObject
"
	Category Name: WBP:Compatibility
"
	self dataObject: anObject.
	self isReadOnly ifTrue: [self makeReadOnly].
!
  
control: anObject
"
	Category Name: Controls:Obsolete
	Description: Maintained for compatibility. Use #paneAt: instead.
	Result Type: SubPane
"
	#obsolete.
	^self paneAt: anObject.
!
  
controlClassOverrides
"
	Access: Private
	Category Name: Controls
	Result Type: Dictionary
"
	controlClassOverrides == nil ifTrue: [
		self initializeControlClassOverrides.
	].
	^controlClassOverrides.

!
 
controlColor: hWnd hDC: hDC
"
	Access: Private
	Category Name: Window
	Description: Set the control color for the control
				 window with handle = hWnd, using the given hDC.
"
	| itemID control |

	itemID := UserLibrary getDlgCtrlID: hWnd.

	"Under Windows 95, combo boxes relay the WM_CTLCOLOR
	 messages from their component controls to the dialog box.
	 We have to filter these out, because we can't translate their
	 item IDs.	For details, see Version Differences, in the chapter
	 Understanding Windows 95, in the Programmer's Guide
	 to Windows 95."
	(UserLibrary getDlgItem: self asParameter item: itemID) = 0
		ifTrue: [^nil].

	control := self
			paneAt: itemID
			ifAbsent: [self controlFromHandle: hWnd].
	control isNil ifTrue: [^nil].

	^control controlColor: hDC
!

controlFromHandle: hWnd
"
    Access: Private
    Category Name: Controls
    Description: Creates an control instance for hWnd.
    Result Type: SubPane
"
    | newControl |

    "VC++ 4.0 assigns the ID -1 to any control that you
     do not explicity give a name. We don't access any of
	 these controls programmatically (we always use the
	 name string), but Windows sometimes sends messages
	 for those controls (for example,
	 #controlColor:hDC:). This method creates controls
	 for which don't have an ID. Store these controls in
     a different Dictionary than those created by ID, so
     we can handle non-unique IDs. Our Dictionary of
     children is keyed by ID, so non-unique IDs confuse
     it causing memory leaks."

    "IM - 2007-12-18 For some reason the T4PropertySheetButton gets lost if you double click on the button
    The problem seems to be that the double click notification gets routed through the dialog page.
    I just created a special case for it. Note, we don't want to create a new control becase then it would be released
	more than once which would cause problems."
	(Notifier findWindow: hWnd) ifNotNil: [:win |
		(win isKindOf: T4PropertySheetButton) ifTrue: [
			^win.
		].			
	].
	
	newControl := RmControl
		fromHandle: hWnd
		dialog: self.
	newControl
		receiveMessages;
		yourself.
	^self unnamedControls
		at: newControl handle asInteger
		put: newControl.!

controlFromID: anInteger name: aString
"
	Access: Private
	Category Name: Controls
	Description: Creates a control instance for item ID
				 anInteger and name aString.
	Result Type: SubPane
"
	| newControl |

	newControl := RmControl
		fromID: anInteger
		name: aString
		dialog: self.
	newControl receiveMessages.
	^self children
		at: newControl id
		put: newControl!
 
controlIDsEnabledWhenReadOnly
"
	Access: Private
	Category Name: Read Only
	Description: Answers a collection of control IDs to
				 remain enabled when the receiver is read-only.
	Result Type: Collection
"
	^OrderedCollection new
		add: (self itemIds at: 'Cancel' ifAbsent: [nil]);
		add: (self itemIds at: 'Help' ifAbsent: [nil]);
		yourself.
!
  
controlIDsToIgnoreChangeNotifications
"
	Access: Private
	Abstract: Yes
	Category Name: Changes
	Description: Answers a collection of control IDs from which we ignore
				 change notifications.
	Result Type: Collection
"
	^OrderedCollection new.
!
   
dataObject
"
	Category Name: Data
	Description: Answers the receiver's data object.
	Result Type: Object
"
	^dataObject.!
 
dataObject: anObject
"
    Category Name: Data
    Description: Sets the receiver's data object.
"
	dataObject := anObject.!
   
dataObjectProperties
"
    Access: Private
    Category Name: Survey Question Definition
    Description: T4InsuredFileProperties_orNil
" 
    dataObject isNil ifTrue: [^self defaultsTemplate properties].
    
    ^(dataObject isKindOf: T4Properties)
        ifTrue: [dataObject] 
        ifFalse: [dataObject properties].
    !
 
dataObjectPropertiesForSurveyQuestion: aSymbol
"
    Access: Private
    Category Name: Survey
    Description: T4InsuredFileProperties_orNil
"
    ^self dataObjectProperties!
   
deactivate
"
    Access: Private
    Category Name: Property Sheet
    Description: The receiver is being deactivated.  Update
                 the dialog if necessary.
"
    super deactivate.
    self clearTopicAssistant.
!
   
deactivatePage
"
    Access: Private
    Abstract: Yes
    Category Name: Property Sheet
    Description: The receiver is being deactivated.  Update
                 the dialog if necessary.
"
    "self clearTopicAssistant.
"!
 
debugTopicMap
"
    Access: Private
    Category Name: Topic Assistant:Debug
    Result Type: Dictionary
"
    debugTopicMap == nil ifTrue: [
        self initializeDebugTopicMap.
    ].
    ^debugTopicMap.
!
  
defaultHelpContext
"
    Category Name: Help
    Description: Answers the default context string used to
                 find the dialog's help topic.
	Result Type: String
"
	^self class templateNameForUILanguage.!
  
defaultsTemplate
"
	Category Name: Data
	Description: For dialogs that use lazy initialization of
				 the dataObject (ie the dataObject does not exist until
				 the user presses Apply), a template object may be
				 passed in to hold the default values for the controls
				 for initialization and refresh operations.
	Comment: Use this facility only for objects that are not
			 expensive to create and delete (like Contacts, but
			 not like Risks).
	Result Type: Object
"
	^self triggerNeedsDefaultsTemplate.

!
 
definedIn
"
	Category Name: WBP:Compatibility
	Description: Answer the selector of the creation method.
	Result Type: Symbol
"
	^self propertyAt: #definedIn!
 
definedIn: aSelector
"
	Category Name: WBP:Compatibility
	Description: Set the selector of the creation method.
"
	self propertyAt: #definedIn put: aSelector!
 
destroy
"
	Access: Private
	Category Name: Instance Destruction
	Description: Destroy the receiver.
"
	super destroy.

	self
		releaseEventTable;
		releaseToolTip.
!

destroyToolTip
"
	Access: Private
	Category Name: Tool Tips
	Description: Destroy the host tool tip control.
"
	self toolTipOrNil notNil ifTrue: [
		toolTip destroy.
	].
	toolTip := nil.
!
  
dialogBox
"
	Category Name: Window
	Result Type: T4DialogBox
"
	^self.
!
  
dialogHelpContext
"
	Category Name: Help
	Description: Answers the context string used to find
				 the dialog's help topic.
	Result Type: String
"
	^customHelpContext ifNil: [self defaultHelpContext].
!
 
dialogHelpContext: aString
"
	Category Name: Help
	Description: Overrides the dialog's default help
				 context with aString.
"
	customHelpContext := aString.!
  
disableWhenReadOnly
"
	Access: Private
	Category Name: Read Only
	Description: Answers whether the receiver should be
				 disabled when read-only.
	Result Type: Boolean
"
	^true.
!
  
displayHelp
"
	Category Name: Help
	Description: Invokes the Window Help engine to display
				 the receiver's help topic.
"
	self helpManager displayHelp: self dialogHelpContext.!
  
domainLanguageChanged
"
    Access: Private
    Category Name: NLS
"   
    self children do: [:each | (each isKindOf: T4DateEdit) ifTrue: [each domainLanguageChanged]]
!

eventTable
"
	Access: Private
	Category Name: Events
	Description: Answer a Dictionary mapping event names
				 to actions for the receiver.
	Result Type: Dictionary
"
	^handlers == nil
		ifTrue: [self eventTableCreate]
		ifFalse: [handlers]!

eventTableForEdit
"
	Access: Private
	Category Name: Events
	Description: Answer a Dictionary mapping event names
				 to actions, allocate it if necessary.
	Result Type: Dictionary
"
	handlers == nil ifTrue: [
		handlers := self eventTableCreate.
	].
	^handlers!
  
extent
"
	Category Name: Window
	Description: Answer the receiver's extent.
	Result Type: Point
"
	^self rectangle extent!

findControlIdForSurveyQuestion: aT4SurveyQuestionDefinition_orNil
"
    Access: Private
    Category Name: Survey Questions
    Result Type: Integer_orNil
"
    aT4SurveyQuestionDefinition_orNil isNil ifTrue: [^nil].

    self surveyQuestionMap keysAndValuesDo: [:id :sqn |
        sqn = aT4SurveyQuestionDefinition_orNil name ifTrue: [
            ^id
        ].
    ].
    ^nil!
   
framingBlock
"
	Access: Private
	Category Name: MDI
	Result Type: Block
"
	framingBlock == nil ifTrue: [
		framingBlock := [:box | box].
	].
	^framingBlock.
!

framingBlock: aBlock
"
	Access: Private
	Category Name: MDI
	Description: Initialize the framingBlock to the one
				 argument block aBlock which, when executed, yields
				 the pane frame rectangle.
"
	framingBlock := aBlock.
!
   
fromDLLFile: aFileName templateName: aTemplateName
"
	Category Name: Window Creation
	Description: Open the dialog box whose template name
				 is contained in the file identified by
				 aFileName. templateName may be a String or an
				 Integer that identifies the dialog template.
"
	"JBE (Jan 19/95) -- I grabbed this method from V32Win
	 2.0. Visual Smalltalk no longer supports this
	 method. Instead, you call #fromModule:id: directly.
	 Unfortunately, using that method sets up some
	 mysterious problem that causes Combo Boxes of the
	 DROP DOWN style to generate Protection Violations as
	 soon as you touch them. I don't know why this works,
	 but opening the DLL here and passing it in makes the
	 problem go away. Thanks to Ed Shirk for finding this
	 workaround. "

	T4Application current ifNil: [
		hLibrary := KernelLibrary loadLibrary: aFileName asParameter.
	] ifNotNil: [:application |
		hLibrary := application getHLibForResourceDLL: aFileName.
	].
	( hLibrary = 0 )
		ifTrue: [ ^self osError ]
		ifFalse: [ self fromModule: hLibrary id: aTemplateName ]

!

fromModule: aModuleHandle id: id
"
	Category Name: Window Creation
	Description: Opens the dialog box specified by id
				 contained in the DLL identified by aModuleHandle.
				 'id' may be either a String or an Integer that
				 identifies the dialog template.

				 This method overrides the method in DialogBox to
				 allow dialog boxes created by the Quick C for
				 Windows dialog builder to be loaded using symbolic
				 names. In addition, it fixes a defect in the
				 superclass's method which prevented loading dialog
				 boxes using a numeric id.

				 Parameters:
					aModuleHandle
						Contains a handle to the resource only DLL from which the
						dialog box may be loaded.

					id
						Specifies the dialog box template to load.			May be either the
						symbolic name or the item id of the template.
"
	| hwndDialog hwndOwner |

	self triggerEvent: #needsParent.
	parent isNil ifTrue: [
		owner isNil ifTrue: [
			hwndOwner := WindowHandle queryActive.
			self owner: (Notifier findWindow: hwndOwner).
			owner isNil ifTrue: [
				(self isHandleOfSplashScreen: hwndOwner) ifFalse: [
					hwndOwner := nil.
				].
			].
		] ifFalse: [
			hwndOwner := owner handle
		].
	] ifFalse: [
		hwndOwner := parent handle.
	].

	NotificationManager newWindow: self.
	aModuleHandle asInteger >= 32 ifTrue: [
		"By default, the Windows dialog box builder
		 assigns every dialog box a unique numeric
		 id. An optional symbolic name can also be
		 supplied. Dialogs which have both a numeric
		 id and a symbolic name must be accessed in
		 the DLL by the numeric name. The numeric id
		 for a symbolic name can be obtained from the
		 'ItemIds' dictionary. The following code
		 allows the user to open such dialogs using
		 the symbolic name."

		id isString ifTrue: [
			hwndDialog := self
				fromModule: aModuleHandle
				stringID: id
				parent: hwndOwner.
		].
		id isInteger ifTrue: [
			hwndDialog := self
				fromModule: aModuleHandle
				integerID: id
				parent: hwndOwner
		].

		hwndDialog = 0 ifTrue: [
			NotificationManager newWindow: nil.
			self closeDLL.
			^self osError
		].
		hwndDialog := WindowHandle fromInteger: hwndDialog.
		self handle: hwndDialog
	].
	NotificationManager newWindow: nil.

	self isHandleOk ifFalse: [
		self closeDLL.
		self error: 'Could not create Dialog Box: ', id printString.
		"Debugging Notes:
			- is idLocal an Integer?  Does it match the ID
			  assigned in the builder?			If not, make sure
			  you built the DLL, copied it to the directory
			  where Policy Works expects to find it, and
			  rebuilt the itemIds array.
		"
	].

	PoppedModelessWindows add: handle.
	self
		receiveMessages;
		postInitialize.
!
   
fromModule: aModuleHandle integerID: anInteger parent: hwndParent
"
	Access: Private
	Category Name: Window Creation
	Result Type: Integer
"
	self isNonmodalChild ifTrue: [
		^self
			fromModuleAsNonmodalChild: aModuleHandle
			integerID: anInteger
			parent: hwndParent.
	] ifFalse: [
		^UserLibrary
			createDialog: aModuleHandle asInteger
			id: anInteger asParameter
			parent: hwndParent asParameter
			dialogFunction: DialogProcInstance asParameter
	].
!
  
fromModule: aModuleHandle stringID: aString parent: hwndParent
"
	Access: Private
	Category Name: Window Creation
	Result Type: Integer
"
	self itemIds
		at: aString
		ifPresent: [:integerID |
			^self
				fromModule: aModuleHandle
				integerID: integerID
				parent: hwndParent.
		] ifAbsent: [
			^UserLibrary
				createDialog: aModuleHandle asInteger
				templateName: aString asParameter
				parent: hwndParent asParameter
				dialogFunction: DialogProcInstance asParameter
		].
!
   
fromModuleAsNonmodalChild: aModuleHandle integerID: anInteger parent: hwndParent
"
	Access: Private
	Category Name: Window Creation
	Description: Open the dialog box as a nonmodal child,
				 answering the handle.
	Result Type: Integer
"
	| dlgTemplate mask modifiedStyle |

	"To open the dialog as a nonmodal child, we have to
	 change its window styles to eliminate those for
	 modal popup windows and to add those for a
	 child window.	  The only way to do this before
	 Windows creates the dialog window is to use
	 CreateDialogIndirect().  First we load the
	 DLGTEMPLATE resource and modify it; then we
	 create the dialog from the modified resource."

	"Load the template into a buffer where we can work on it."
	dlgTemplate := T4WinDlgTemplateAbstract
		standardOrExtendedFromModule: aModuleHandle
		integerID: anInteger.

	"Now change the dialog template's style to eliminate
	 the styles of a modal dialog and add the styles of
	 a child window."
	mask := (WsPopup | WsTiled | WsCaption | WsSysmenu | WsMinimizebox | WsMaximizebox | WsBorder | WsThickframe | WsDlgframe | DsModalframe) bitXor: 16rFFFFFFFF.
	modifiedStyle := dlgTemplate style bitAnd: mask.
	modifiedStyle := modifiedStyle | WsChild | WsClipsiblings | DsControl.
	dlgTemplate style: modifiedStyle.

	"Add in the WS_EX_CONTROLPANE extended style, so we
	 can tab between controls on tab pages."
	dlgTemplate extendedStyle: (dlgTemplate extendedStyle | WsExControlparent).

	"Create the dialog and answer its handle."
	^UserLibrary
		createDialogIndirect: OperatingSystem hInstanceExe
		dialogTemplate: dlgTemplate asParameter
		parent: hwndParent asParameter
		dialogFunction: DialogProcInstance asParameter.
!
 
getPopupMenu
"
	Category Name: WBP:Compatibility
"
	^nil.
!

getWizardButtons
"
	Access: Private
	Abstract: Yes
	Category Name: Property Sheet
	Result Type: Collection
"
	^PswizbBack | PswizbNext | PswizbDisabledfinish.
!

hasHorizontalScrollbar
"
    Access: Private
    Category Name: Scroll Bars
    Result Type: Boolean
"
    (self parent isKindOf: T4PropertySheet) ifTrue: [^false].
    self hasScrollbars ifFalse: [^false].
    
    ^self clientAreaWidth > self width.!
   
hasScrollbars
"
    Access: Private
    Category Name: Scroll Bars
    Result Type: Boolean
"
    ^false
!
   
hasVerticalScrollbar
"
    Access: Private
    Category Name: Scroll Bars
    Result Type: Boolean
"
    (self parent isKindOf: T4PropertySheet) ifTrue: [^false].
    self hasScrollbars ifFalse: [^false].
    
    ^self clientAreaHeight > self height.!
   
Help
"
	Category Name: Handler
	Description: Invokes the Window Help engine to display
				 the receiver's help topic.
"
	self IDC_Help.!
 
helpManager
"
	Category Name: Help
	Description: Answers the receiver's helpManager
	Result Type: HelpManager
"
	^T4Application current
		ifNotNil: [:application | application helpManager]
		ifNil: [super helpManager].!
 
helpRequest
"
    Access: Private
    Category Name: Help
"!

icon
"
	Category Name: Access
	Description: Answer the icon for the receiver
	Result Type: Icon
"
	^icon.
!
  
icon: aT4Icon
"
	Category Name: Access
"
	icon := aT4Icon.
!
   
IDC_Help
"
	Category Name: Handler
	Description: Invokes the Window Help engine to
				 display the receiver's help topic.
"
	self displayHelp.!
  
initialize
"
    Access: Private
    Category Name: Instance Creation
    Description: Initializes a newly created instance.
"
    scrollPosition := 0 @ 0.
    
    super initialize.
    self isReadOnly: false.
    self icon: self tabIcon.

!
  
initializeControlClassOverrides
"
    Access: Private
    Category Name: Window Creation
    Description: Initializes the dictionary mapping item
                 IDs to custom RmControl class names.
"
    controlClassOverrides := Dictionary new.
    
    self surveyQuestionMap keysAndValuesDo: [:ctrlId :sqn |
        (self surveyAnswerAt: sqn) ifNotNil: [:sq | 
            sq definition controlClassOverride ifNotNil: [:className |
                ctrlId isString ifTrue: [
                    controlClassOverrides at: (self itemIds at: ctrlId) put: className
                ] ifFalse: [
                    controlClassOverrides at: ctrlId put: className
                ].
            ]
        ]
    ].
!
   
initializeDebugTopicMap
"
    Access: Private
    Category Name: Topic Assistant
"    
    debugTopicMap := Dictionary new.
    
    self surveyQuestionMap keysAndValuesDo: [:ctrlId :sqn |
        (self surveyAnswerAt: sqn) ifNotNil: [:sq | 
            sq definition debugTopic ifNotNil: [:topic |
                debugTopicMap at: ctrlId put: topic
            ]
        ]
    ].

!
 
initializePropertySheetPage
"
	Category Name: Property Sheet
	Description: Completes the initialization of a dialog
				 used as a property-sheet page, after
				 #wmInitDialog has been processed.
"
	PoppedModelessWindows add: self handle.
	self
		receiveMessages;
		postInitialize.

!
   
initializeTopicMap
"
    Access: Private
    Category Name: Topic Assistant
"
    topicMap := Dictionary new.
    
    self surveyQuestionMap keysAndValuesDo: [:ctrlId :sqn |
        (self surveyAnswerAt: sqn) ifNotNil: [:sq | 
            sq definition topic ifNotNil: [:topic |
                topicMap at: ctrlId put: topic
            ]
        ]
    ].!
 
initializeWindow
"
    Access: Private
    Abstract: Yes
    Category Name: Window Creation
    Description: Invoked by #openOn:, this method provides
                 a hook for subclasses to modify the
                 dialog box after it has been opened, but before it
                 is mapped.
"
    self childrenDo: [:each | each initializeControl].
    
    self surveyQuestionMap keysAndValuesDo: [:ctrlId :sqn |
        (self paneAt: ctrlId ifAbsent: []) ifNotNil: [:ctrl | 
            (self surveyAnswerAt: sqn) ifNotNil: [:sq |
                ctrl initializeForSurveyDefinition: sq definition
            ].
        ]
    ].
    
    self loadTopicMap.
    "Need to get styles as defined by MS Windows."
    self 
        style: self getHostStyle;
        extendedStyle: self getExtendedHostStyle.

    self refreshScrollBars.
!
   
initializing
"
	Category Name: Changes
	Result Type: Boolean
"
	^initializing!
 
isHandleOfSplashScreen: hWnd
"
	Access: Private
	Category Name: Application Framework
	Description: Answers true if hWnd is the handle of
				 the splash screen.
"
	| text size |

	text := (String new: 32) asParameter.
	size := UserLibrary
		getWindowText: hWnd
		text: text
		maxLength: text size.
	text := (text copyFrom: 1 to: size) asNormalizedString.

	^(text = 'Policy Works') or: [text = 'Administrator'].
    !
 
isNonmodalChild
"
	Category Name: MDI
	Result Type: Boolean
"
	(owner isKindOf: ViewManager) ifTrue: [^true].
	^self
		propertyAt: #isNonmodalChild
		ifAbsentPut: [false].
!
  
isNonmodalChild: aBoolean
"
	Category Name: MDI
"
	aBoolean assertKindOf: Boolean.

	self
		propertyAt: #isNonmodalChild
		put: aBoolean.
!

isOkayToActivate
"
	Access: Private
	Abstract: Yes
	Category Name: Property Sheet
	Description: Answers whether the page can be activated, otherwise false.
	Result Type: Boolean
"
	^true.
!
  
isOkayToCancel
"
	Access: Private
	Abstract: Yes
	Category Name: Property Sheet
	Description: Answers whether the page can be cancelled, otherwise false.
	Result Type: Boolean
"
	^true.
!

isPropertySheetPage
"
    Access: Private
    Category Name: Property Sheet
    Result Type: Boolean
    Description: A property sheet page will not have the WsPopupwindow or
                 WsDlgframe styles, but its owner will be a kind of T4PropertySheet.
"
    | hostStyle hasWspopup hasWsDlgframe hasProperParent |

    hostStyle := self getHostStyle.
    hasWspopup := hostStyle & WsPopupwindow = WsPopupwindow.
    hasWsDlgframe := hostStyle & WsDlgframe = WsDlgframe.
    hasProperParent := self propertySheet isKindOf: T4PropertySheet.

    ^(hasWspopup and:[ hasWsDlgframe ]) not and: [ hasProperParent ].
!
  
isReadOnly
"
    Access: Private
    Category Name: Read Only
    Result Type: Boolean
"
    "Check for nil also, just in case somebody overrides
     #initialize and forgets to relay it to super."
    readOnly notNil ifTrue: [
        readOnly ifTrue: [^true].
    ].

    self isPropertySheetPage ifTrue: [
        self propertySheet readOnly = true ifTrue: [^true].
    ].
        
    (T4Application current notNil and: [T4Application current isReadOnly]) ifTrue: [^true].
    (self dataObject notNil and: [self dataObject respondsTo: #isReadOnly]) ifTrue: [
        ^self dataObject isReadOnly.
    ].
    self isPropertySheetPage ifTrue: [
        ^self propertySheet isReadOnly
    ].
    ^false.
!
   
isReadOnly: aBoolean
"
    Category Name: Read Only
"
    aBoolean assertKindOf: Boolean.

    readOnly := aBoolean.
!
   
isWizardPage
"
	Access: Private
	Category Name: Property Sheet
	Result Type: Boolean
"
	^self owner isKindOf: T4Wizard.
!

itemIds
"
	Category Name: Controls
	Description: Answers the receiver's dictionary of item IDs.
	Result Type: Dictionary
"
	^self class itemIds.!
 
label
"
	Category Name: Window
	Description: Answers the window label without the WindowLabelPrefix.
	Result Type: String
"
	^(handle isNil or: [handle = NullHandle])
		ifTrue: ['']
		ifFalse: [self windowText].!

label: aString
"
	Category Name: Window
	Description: Sets the window label without the WindowLabelPrefix
				 of the receiver to aString.
"
	aString isNil ifTrue: [^self].
	handle isNil ifTrue: [^self].
	handle = NullHandle ifFalse: [self setWindowText: aString].!
   
loadTopicMap
"
    Access: Private
    Category Name: Topic Assistant
"
    self initializeTopicMap.!
  
makeDefaultStartingPage
"
	Category Name: Property Sheet
"
	self owner ifNotNil: [:object | object makeDefaultStartingPage: self ].
!
  
makeReadOnly
"
	Access: Private
	Category Name: Read Only
	Description: Configures the receiver as read-only.
"
	^self makeReadOnly: true.!
   
makeReadOnly: aBoolean
"
    Access: Private
    Category Name: Read Only
    Description: Configures the receiver as read-only or not read-only
"
    | cHandle id control enabledControlIDs |

    self disableWhenReadOnly ifFalse: [^self].

    enabledControlIDs := self controlIDsEnabledWhenReadOnly.
    cHandle := UserLibrary
        getWindow: handle
        relationship: GwChild.
    [cHandle ~= 0] whileTrue: [
        id := UserLibrary
            getWindowLong: cHandle
            index: GwlId.
        (enabledControlIDs includes: id) ifFalse: [
            control := self
                paneAt: id
                ifAbsent: [nil].
            control notNil ifTrue: [
                control readOnly: aBoolean.
            ].
        ].

        cHandle := UserLibrary
            getWindow: cHandle
            relationship: GwHwndnext.
    ].

    self
        isReadOnly: aBoolean;
        refreshEnabled.

!
  
menu
"
	Access: Private
	Category Name: MDI:Compatibility
	Comment: Implemented to support Smalltalk open protocol.
	Result Type: Menu
"
	^nil.
    !
   
metaApply
"
    Access: Private
    Category Name: Property Sheet
    Description: Applies all changes to the dataObject.
                 Answers whether successful.
    Result Type: Boolean
"
    self isReadOnly ifTrue: [^true].
    CursorManager execute changeFor: [
        [self apply]
            on: UserInputError
            do: [:error |
                "If the user made any mistakes, leave the
                 dialog up so he can reenter."
                error displayFeedback.
                ^false.
            ].
    ].
    ^true
!
   
metaValidateUserInput
"
    Access: Private
    Category Name: Property Sheet
    Description: Validates all data entered on the dialog.
                 Answers whether okay.
    Result Type: Boolean
"
    CursorManager execute changeFor: [
        [self validateUserInput]
            on: UserInputError
            do: [:error |
                "If the user made any mistakes, leave the
                 dialog up so he can reenter."
                error displayFeedback.
                ^false.
            ].
    ].
    ^true.
!
   
modified
"
	Category Name: Changes
	Description: Trigger the modified event.
"
	self triggerEvent: #modified!
  
nextDialogControl
"
	Category Name: Window
	Description: Tabs to the next control on the dialog.
"
	UserLibrary
		sendMessage: self asParameter
		msg: WmNextdlgctl
		wparam: 0
		lparam: 0.!
  
notReadOnly
"
	Access: Private
	Category Name: Read Only
	Result Type: Boolean
"
	^self isReadOnly not.
!

OK
"
    Category Name: Handler
    Description: For the OK button.
"
    self basicClose.!

open
"
	Category Name: Window Creation
"
	self isNonmodalChild ifTrue: [
		self triggerNeedsContents.
	] ifFalse: [
		self
			basicOpen;
			processInput.
	].
!
  
openOn: anObject
"
	Category Name: Window Creation
	Description: Opens a dialog with anObject as the data object.
	Result Type: Object
"
	self dataObject: anObject.

	self isNonmodalChild ifTrue: [^self].

	self
		basicOpen;
		processInput.

	^self dataObject!
  
openOn: anObject ifCancelled: aBlock
"
	Category Name: Window Creation
	Description: Opens a dialog with anObject as the data object.
	Result Type: Object
"
	| result |

	(result := self openOn: anObject) ifNil: [^aBlock value].
	^result!
 
openOn: anObject startingPage: anInteger
"
	Category Name: Window Creation:T4PropertySheet Protocol
	Description: Opens a dialog with anObject as the data object.
	Result Type: Object
"
	^self openOn: anObject.
!
 
paneAt: anObject
"
	Category Name: Controls
	Description: Answers the control instance identified
				 by anObject, which contains either the
				 symbolic name (String) or the item ID (Integer)
				 of the control.
	Result Type: SubPane
"
	^self
		paneAt: anObject
		ifAbsent: [^self error: 'undefined control, ID = ', anObject printString].
!

paneAt: anObject ifAbsent: aBlock
"
	Category Name: Controls
	Description: Answers the control instance identified
				 by anObject, which contains either the
				 symbolic name (String) or the item ID (Integer) of the control.

				 The RmControl subclass instance is created on-demand
				 the first time it is requested, and stored
				 internally. Subsequent requests for the same name
				 return the same instance.
	Result Type: SubPane
"
	| id name |

	"Prevent unknown IDs."
	anObject isInteger ifTrue: [
		(self itemIds includesKey: anObject) ifFalse: [
			^aBlock value
		].
		id := anObject.
		name := (self itemIds at: anObject) asString.
	] ifFalse: [
		"Convert string IDs to integer IDs."
		id := self itemIds
			at: anObject
			ifAbsent: [^aBlock value].
		name := anObject.
	].

	^self children at: id ifAbsent: [
		"JBE (99-07-22) d-521 - Modified to answer 'aBlock
		 value' if any errors are encountered while
		 attempting to create a control. Needed to
		 avoid RTE 'Control ID not found' when
		 processing notifications from transient controls
		 such as the scroll bar on a tab control or the
		 in-place editor on a list view. Their control IDs
		 are not unique and may overlap the ones assigned to
		 our own controls.	Consequently, we need to
		 gracefully handle IDs that aren't in our dictionary
		 of item IDs."
		[	   self
				controlFromID: id
				name: name
		] on: Error do: [^aBlock value].
	].
!

paneAt: anObject ifPresent: aOneArgBlock
"
	Category Name: Controls
	Description: Answers the control instance identified
				 by anObject, which contains either the
				 symbolic name (String) or the item ID (Integer) of
				 the control.
	Result Type: SubPane
"
	| pane |

	[	 pane := self
			paneAt: anObject
			ifAbsent: [nil].
	] on: Error do: [^self].

	pane ifNotNil: [
		aOneArgBlock value: pane
	].
!

paneAt: anObject ifPresent: aOneArgBlock ifAbsent: aBlock
"
    Category Name: Controls
    Description: Answers the control instance identified
                 by anObject, which contains either the
                 symbolic name (String) or the item ID (Integer) of
                 the control.
    Result Type: SubPane
"
    | pane |

    [    pane := self
            paneAt: anObject
            ifAbsent: [^aBlock value].
    ] on: Error do: [^self].

    pane ifNotNil: [
        aOneArgBlock value: pane
    ].
!
   
postInitialize
"
    Access: Private
    Abstract: Yes
    Category Name: Window Creation
    Description: Invoked by #openOn:, this method provides
                 a hook for subclasses to modify the dialog
                 box after the wmInitdialog message has been
                 processed.
"
    self triggerEvent: #postInitialize.

!
  
previousDialogControl
"
	Category Name: Window
	Description: Tabs to the previous control on the dialog.
"
	UserLibrary
		sendMessage: self asParameter
		msg: WmNextdlgctl
		wparam: 1
		lparam: 0.!
  
processNotificationCode: notifyCode id: controlID hWnd: hWnd
"
	Access: Protected
	Category Name: Handler
	Description: Attempts to asynchronously process the
				 WM_COMMMAND notification notifyCode by posting an input event
				 to the receiver's queue.  Various selectors are tried for
				 the input event, in the following order:

					 #<instName>
					 #<instName>Inst:msg:
					 #controlEvent:id:

				 Enhancements:
					For more complicated controls that support several messages,
					we may wish to construct a single argument selector of the
					form: #<selector><msg>Inst:.
"
	| instName selector control |

	"Defect #521 - The ids for controls created dynamically by windows,
	 such as the edit box for in-place editing on a listview, may overlap
	 the ids assigned to controls by the resource builder.	We have to
	 confirm by window handle that we have the right control."
	"See MSDN Knowledge Base Article Q130692"
	instName := self itemIds at: controlID ifAbsent: [nil].
	control := self paneAt: controlID ifAbsent: [nil].
	(control isNil or: [control handle asInteger ~= hWnd]) ifTrue: [
		instName := nil.
		(hWnd = 0) ifFalse: [
			control := self unnamedControlAt: hWnd ifAbsent: [
				self controlFromHandle: hWnd.
			].
		]
	].

	instName notNil ifTrue: [
		"Whenever a control changes, raise the receiver's #modified event.
		 Make sure the receiver actually has the named control before we
		 try to create it (pressing ESC, for example, invokes Cancel even
		 if the dialog doesn't have such a control)."
		(UserLibrary getDlgItem: self asParameter item: controlID) ~= 0 ifTrue: [
			(self controlIDsToIgnoreChangeNotifications includes: controlID) ifFalse: [
				(control isChanged: notifyCode) ifTrue: [
					"See wmInitdialog:with: for an explanation."
					(initializing isNil or: [initializing = false]) ifTrue: [
						self modified.
					].
				].
			].
		].
		 (self respondsTo: instName) ifTrue: [
			self sendInputEvent: instName.
			^self
		] ifFalse: [
			selector := (instName asString, 'Inst:msg:') asSymbol.
			(self respondsTo: selector) ifTrue: [
				self
					sendInputEvent: selector
					withArgs: (Array
						with: control
						with: notifyCode).
			].
			(control isKindOf: RmControl) ifTrue: [
				"Defect #3318 - Completion combo boxes field sometimes does not stick/save"
				((self respondsTo: selector) not or: [control allowsNotificationToContinue]) ifTrue: [
					control notify: notifyCode
				]
			].
			^self
		].
	] ifFalse: [	
		(control isKindOf: RmControl) ifTrue: [
			control notify: notifyCode.
			^self
		].
	].

	self
		sendInputEvent: #controlEvent:id:
		withArgs: (Array with: notifyCode with: controlID).
!
   
propertySheet
"
    Category Name: Property Sheet
    Result Type: T4PropertySheet_orT4ListEditPropertySheet
"
    "self ASSERT: (((self owner isKindOf: T4PropertySheet)
        or: [self owner isKindOf: T4ListEditPropertySheetPane])
        or: [self owner isKindOf: T4PropertySheetView])."
    ^self owner.
!
 
propertySheetPageFlags
"
    Category Name: Property Sheet
    Description: Answers the flags describing the reciever.
    Result Type: Integer
"
    ^PspDefault | PspUsetitle | PspUsecallback.!

psnApply
"
	Category Name: Property Sheet
	Description: The user chose the OK or Apply Now button
				 and wants all changes to take effect. Answer
				 PSNRET_INVALID_NOCHANGEPAGE to prevent the changes
				 from taking effect and to return the focus to the
				 page, or PSNRET_NOERROR to accept the changes and
				 allow the property sheet to be destroyed.
	Result Type: Boolean
"
	"If the property sheet is in read-only mode, the Ok button should read Close at
	 this point.  We want to treat this scenario as a cancel."
	self isReadOnly ifTrue: [
		^self psnQuerycancel.
	].

	"Note: To set the return value, use SetWindowLong()
	 with the DWL_MSGRESULT value and answer TRUE from
	 this message. "

	self metaApply ifTrue: [
		^false
	] ifFalse: [
		"We've run into trouble while applying the
		 changes; set the return value to
		 PSNRET_INVALID_NOCHANGEPAGE to prevent the
		 page losing activation."
		UserLibrary
			setWindowLong: self handle asParameter
			index: DwlMsgresult
			long: PsnretInvalidNochangepage.
		^true
	].
!

psnHelp
"
	Category Name: Property Sheet
	Description: The user has chosen the Help button.
"
	self Help!
  
psnIgnoreNotification
"
	Category Name: Property Sheet
	Description: This isn't a Windows notification message.
				 It's used to ignore the notification of
				 messages we don't want to process. See T4DialogBox
				 class>>ignoreNotification:during: for details.
"
	^nil.
!

psnKillactive
"
	Category Name: Property Sheet
	Description: Notifies a page that it is about to lose
				 the activation either because another page is
				 being activated or the user has chosen the OK
				 button. An application should validate the
				 information that the user has typed. Answer TRUE to
				 prevent the page from losing the activation or FALSE
				 to allow it.
	Result Type: Boolean
"
	"Note: To set the return value, use SetWindowLong()
	 with the DWL_MSGRESULT value and answer TRUE from
	 this message."

	" If the property sheet is read-only, short-circuit the validate
	 (and any other pending work) here so as to prevent an endless
	 loop for the user (see d-739)."
	self isReadOnly ifTrue: [
		^false.
	].
	
	" Going contrary to what MSDN tells us, we don't want to validate
	  this page if we are running a wizard.	 Doing so would cause
	  validation errors to pop up even if the user was pressing the
	  back button.	Validation will occur during the psnWiznext &
	  psnWizfinish messages instead. "
	self isWizardPage ifFalse: [
		self metaValidateUserInput ifFalse: [
			"We've run into trouble while validating the
			 input; set the return value to TRUE to
			 prevent the page losing activation."
			UserLibrary
				setWindowLong: self handle asParameter
				index: DwlMsgresult
				long: true asParameter.
			^true.
		].
	].
		
	self deactivatePage.
	^false
!

psnQuerycancel
"
	Category Name: Property Sheet
	Description: Indicates that the user chose the Cancel
				 button. A property sheet page can use this
				 notification message to ask the user to verify the
				 cancel operation. Answer TRUE to prevent the cancel
				 operation or FALSE to allow it.
	Result Type: Boolean
"
	self isOkayToCancel ifTrue: [
		self propertySheet cancel.
		^false
	] ifFalse: [
		UserLibrary
			setWindowLong: self handle asParameter
			index: DwlMsgresult
			long: true asParameter.
		^true
	].
!
 
psnReset
"
	Category Name: Property Sheet
	Description: Notifies a page that the user has chosen
				 the Cancel button and the property sheet is
				 about to be destroyed. All changes made since the
				 user last chose the Apply Now button are canceled.
"
	self resetChanges.!
 
psnSetactive
"
	Category Name: Property Sheet
	Description: Notifies a page that it is about to be
				 activated. To accept the activation, answer zero.
				 To activate the next or previous page (depending on
				 whether the user chose the Next or Back button),
				 answer -1. To set the activation to a particular
				 page, answer the resource identifier of the page.
	Result Type: Boolean
"
	"Note: To set the return value, use SetWindowLong()
	 with the DWL_MSGRESULT value and answer TRUE from
	 this message."

	self isOkayToActivate ifTrue: [
		self isWizardPage ifTrue: [
			self updateWizardButtons.
		] ifFalse: [
			self makeDefaultStartingPage.
		].
		self activatePage.
		^false
	] ifFalse: [
		UserLibrary
			setWindowLong: self handle asParameter
			index: DwlMsgresult
			long: -1 asParameter.
		^true.
	].
!
  
psnWizback
"
	Category Name: Property Sheet
	Description: Notifies a page that the user has chosen
				 the Back button and the wizard is about to
				 advance to the previous page. To prevent the wizard
				 from advancing, set the DWL_MSGRESULT value to -1.
				 To jump to a page other than the previous or next
				 one, set DWL_MSGRESULT to the identifier of the
				 dialog box to be displayed.
	Result Type: Boolean
"
	| id |

	"Note: To set the return value, use SetWindowLong()
	 with the DWL_MSGRESULT value and answer TRUE from
	 this message."

	self wizardBackClicked.

	id := self wizBackID ifNil: [^false].

	UserLibrary
		setWindowLong: self handle asParameter
		index: DwlMsgresult
		long: id asParameter.
	^true.

!
   
psnWizfinish
"
    Category Name: Property Sheet
    Description: Notifies a page that the user has chosen
                 the Finish button and the property sheet is
                 about to be destroyed. To prevent the wizard from
                 being destroyed, set DWL_MSGRESULT to a nonzero
                 value.
    Result Type: Boolean
"

    "Note: To set the return value, use SetWindowLong()
     with the DWL_MSGRESULT value and answer TRUE from
     this message. "

    "Validate all the dialogs."
    self wizard validDialogs do: [:dialog |
        [dialog validateUserInput]
            on: UserInputError
            do: [:error |
                "We've run into a page with a problem;
				 warn the user and flip to the page;
				 then set the return value to a non-zero
				 value to prevent the wizard from closing."
				error displayFeedback.
				self wizard setPage: dialog.
				UserLibrary
					setWindowLong: self handle asParameter
					index: DwlMsgresult
					long: 1.
				^true
			].
	].

	"Now that we know everyone is valid, apply the
	 changes."
	self wizard validDialogs do: [:dialog |
		dialog apply.
	].

	^false.
!
 
psnWiznext
"
	Category Name: Property Sheet
	Description: Notifies a page that the user has chosen
				 the Next button and the wizard is about to
				 advance to the next page. To prevent the wizard from
				 advancing, set the DWL_MSGRESULT value to -1. To
				 jump to a page other than the previous or next one,
				 set DWL_MSGRESULT to the identifier of the dialog
				 box to be displayed.
	Result Type: Boolean
"
	| id |

	"Note: To set the return value, use SetWindowLong()
	 with the DWL_MSGRESULT value and answer TRUE from
	 this message. "

	self metaValidateUserInput ifTrue: [

		self wizardNextClicked.

		id := self wizNextID ifNil: [^false].

		UserLibrary
			setWindowLong: self handle asParameter
			index: DwlMsgresult
			long: id asParameter.
		^true.

	] ifFalse: [

		UserLibrary
			setWindowLong: self handle asParameter
			index: DwlMsgresult
			long: -1 asParameter.
		^true.

	].
	    !
   
reactivatePage
"
    Access: Private
    Abstract: Yes
    Category Name: Property Sheet
    Description: The receiver is being activated.  Update
                 the dialog if necessary.
"
    self updateWizardButtons.
    self refreshTopicAssistantForPage
!
  
rectangle
"
	Category Name: Window
	Description: Answers the receiver's rectangle.
	Result Type: Rectangle
"
	| rectStruct |

	rectStruct := WinRectangle new.
	UserLibrary
		getWindowRect: self asParameter
		rectangle: rectStruct asParameter.
	^rectStruct asRectangle!

refresh
"
    Access: Private
    Category Name: Refresh
    Description: Updates the dialog's controls.
"
	self surveyQuestionMap keysAndValuesDo: [:ctrlId :sqn |
		(self paneAt: ctrlId ifAbsent: []) ifNotNil: [:ctrl | ctrl surveyAnswer: (self surveyAnswerAt: sqn)]
	].

	self refreshEnabled.!

refreshDataObject
"
    Category Name: Refresh
    Description: Refresh the page as the dataObject has changed.
"
    self refresh.!
   
refreshEnabled
"
	Access: Private
	Category Name: Refresh
	Description: Enables/disables the controls via the #needsEnabled event.
"
	self childrenDo: [:each |
		each readOnly: (each
			triggerEvent: #needsEnabled
			ifNotHandled: [each isReadOnly not]) not.
	].
!
 
refreshForCopying
"
    Abstract: Yes
    Category Name: T4ListView Support
    Description: Refresh the fields in the dialog that should not
        be copied to a new instance.  Support for T4ListEditPropertySheetPane.
"
    "do nothing"!
 
refreshList: aListBox with: aCollection
"
	Access: Private
	Category Name: Window
	Description: Updates aListBox with the items from aCollection.
"
	| text |

	 "Clear the list."
	 aListBox resetContent.

	"Rebuild the list."
	 aCollection do: [:i |
		  text := nil.
		  (i isKindOf: String) ifTrue: [text := i].
		  ((text isNil) and: [i respondsTo: #listText]) ifTrue: [text := i listText].
		  (text isNil) ifTrue: [text := i printString].

		  aListBox addString: text.
	 ].!
  
refreshScrollBars
"
    Access: Private
    Category Name: Scroll Bars
"
    (self parent isKindOf: T4PropertySheet) ifTrue: [^self].
    self hasScrollbars ifFalse: [^self].
    
    self scrollPosition: 0 @ 0.     
    
    self hasHorizontalScrollbar ifTrue: [
        self showHorizontalScrollbar: true.
        (UserLibrary
            setScrollRange: self asParameter
            bar: SbHorz
            min: 1
            max: (self clientAreaWidth - self width)
            redraw: false).
    ] ifFalse: [
        self showHorizontalScrollbar: false.
    ].
    
    self hasVerticalScrollbar ifTrue: [
        self showVerticalScrollbar: true.    
        (UserLibrary
            setScrollRange: self asParameter
            bar: SbVert
            min: 1
            max: (self clientAreaHeight - self height)
            redraw: false).
    ] ifFalse: [
        self showVerticalScrollbar: false
    ].!

refreshTopicAssistantFor: anRmControl
"
    Access: Private
    Category Name: Topic Assistant
"
    (self topicFor: anRmControl) ifNotNil: [:topic |
        T4TopicAssistant current topic: topic.
    ] ifNil: [
        self refreshTopicAssistantForPage
    ].!
  
refreshTopicAssistantForPage
"
    Access: Private
    Category Name: Topic Assistant
"
    T4TopicAssistant current topic: (self topicFor: self).!

refreshWithDefaults
"
    Access: Private
    Category Name: Window Creation
    Description: Updates the dialog's controls.  Uses the defaults template
				 only if no dataObject is present.
"
	| dataObjectWasNil |

	self dataObject ifNil: [
		self dataObject: self defaultsTemplate.
		dataObjectWasNil := true.
	] ifNotNil: [
		dataObjectWasNil := false.
	].

	"Defect #1877"
	self initializeControlClassOverrides.
	
	self refresh.

	dataObjectWasNil ifTrue: [
		self dataObject: nil.
	].

!
  
refreshWizardBitmap
"
    Access: Private
    Category Name: Refresh
    Description: Retreive wizard bitmap and display.
"
    | bitmap |

    (self wizard isKindOf: T4Wizard) ifTrue: [
        bitmap := self wizard wizardBitmapFor: self.
        bitmap ifNotNil: [
            self paneAt: 'IDC_WizardImage' ifPresent: [:control |
                control bitmap: bitmap.
            ].
        ].
    ].!
   
reinitializeWindow
"
    Access: Private
    Category Name: Instance Creation
    Description: Give receivers the ability to reinitialize any variables/UI because the user pressed
        Previous/Next buttons on the T4StorageViewListEditDialog protocol.
"   
    "Do nothing"
!
  
releaseEventTable
"
	Access: Private
	Category Name: Events
	Description: Break all connections to event handlers.
"
	handlers := nil!

releaseToolTip
"
	Access: Private
	Category Name: Instance Destruction
	Description: Clean up the tool tip created by the receiver.
"
	self class toolTipInstalled ifTrue: [
		self destroyToolTip.
	].
!
  
resetChanges
"
	Access: Private
	Abstract: Yes
	Category Name: Property Sheet
	Description: Resets any changes made to the dialog
				 since the user last pressed Apply.
"

!
 
resize: aRectangle
"
	Access: Private
	Category Name: MDI
	Description: Change the frame of the receiver pane
				 to aRectangle.
"
	self isHandleOk ifFalse: [ ^nil ].
	rectangle := self framingRectangleFor: aRectangle.
	rectangle extent: (rectangle extent max: 0@0).
	self resizeWindow
!
 
resizeWindow
"
    Access: Private
    Category Name: Window Construction
" 
    super resizeWindow.
    
    self refreshScrollBars.!
   
scrollHorizontal: anInteger
"
    Access: Private
    Category Name: Scroll Bars
"
    (scrollPosition x = 1 and: [anInteger positive]) ifFalse: [self scrollTopCorner: anInteger @ 0]
!
  
scrollPosition
"
    Access: Private
    Category Name: Scroll Bars
    Result Type: Point
"
    ^scrollPosition
!
   
scrollPosition: aPoint
"
    Access: Private
    Category Name: Scroll Bars
"
    self scrollTopCorner: aPoint - scrollPosition.!
  
scrollTopCorner: aPoint
"
    Access: Private
    Category Name: Scroll Bars
"
    | x y |
    
    x := scrollPosition x.   
    y := scrollPosition y.
    
    self hasHorizontalScrollbar ifTrue: [
        x := x + aPoint x.   
        x := x max: self totalWidth negated.
        x := x min: 1.
    ].
    
    self hasVerticalScrollbar ifTrue: [
        y := y + aPoint y.
        y := y max: self totalLength negated.
        y := y min: 1.
    ].

    (scrollPosition x = x and: [ scrollPosition y = y]) ifTrue: [^self].

    (UserLibrary 
        scrollWindow: handle
        xAmount: x - scrollPosition x
        yAmount: y - scrollPosition y
        lpRect: nil
        clipRect: nil 
    ) ifFalse: [ ^self osError ].
                        
    scrollPosition := x @ y.
    self 
        updateVerticalSlider;
        updateHorizontalSlider.!
   
scrollVertical: anInteger
"
    Access: Private
    Category Name: Scroll Bars
"        
    (scrollPosition y = 1 and: [ anInteger positive ]) ifFalse: [ self scrollTopCorner: 0 @ anInteger ]!
  
setWizardButtons
"
	Access: Private
	Category Name: Property Sheet
"
	self wizard setWizardButtons: self getWizardButtons.
!
  
showHorizontalScrollbar: aBoolean
"
    Access: Private
    Category Name: Scroll Bars
"
    aBoolean = (self hasStyle: WsHscroll) ifTrue: [^self].
    
    aBoolean ifTrue: [self addStyle: WsHscroll] ifFalse: [self removeStyle: WsHscroll].

    self sendInputEvent: #basicApplyStyle.!
  
showVerticalScrollbar: aBoolean
"
    Access: Private
    Category Name: Scroll Bars
"
    aBoolean = (self hasStyle: WsVscroll) ifTrue: [^self].
    
    aBoolean ifTrue: [self addStyle: WsVscroll] ifFalse: [self removeStyle: WsVscroll].
        
    self sendInputEvent: #basicApplyStyle.!

statusPane
"
    Category Name: Status Window
    Result Type: StatusWindow
"
    parent isNil ifTrue: [^nil].
    
    ^self parent statusPane!
 
subclassRecursively
"
	Access: Private
	Category Name: MDI:Compatibility
	Description: Smalltalk implemented panes always receive
				 all operating system messages. Propagate the
				 message to children.
	Comment: Implemented to support Smalltalk open protocol.
"
!

subPaneWithFocus: aSubPane
"
	Category Name: Compatibility
"

	"Invoked by PPD common control classes - Ignore"!
   
surveyAnswerAt: aSymbol
"
    Access: Private
    Category Name: Survey
    Result Type: T4SurveyAnswer_orNil
"
    ^((self dataObjectPropertiesForSurveyQuestion: aSymbol) ifNil: [^nil]) surveyAnswerAt: aSymbol!
   
surveyAnswerAt: aSymbol value: anObject
"
    Access: Private
    Category Name: Survey
"
    (self dataObjectPropertiesForSurveyQuestion: aSymbol) answerAt: aSymbol put: anObject!
   
surveyQuestionMap
"
    Category Name: Survey
    Result Type: Dictionary
"
    ^self class surveyQuestionMap!
 
tabIcon
"
    Category Name: Property Sheet
    Result Type: T4Icon_orNil
"
    ^self class tabIcon ifNotNil: [:i | i beSmall].

!
   
tabLabel
"
	Category Name: Property Sheet
	Result Type: String
"
	^self class tabLabel.

!
   
templateExtent
"
    Access: Private
    Category Name: Scroll Bars
    Description: Get size of dialog as defined in the dialog resource (Visual Studio).
        The size is in dialog units.
    Result Type: Point
"
    | dlgTemplate hModule |
    
    templateExtent isNil ifTrue: [
        hModule := DynamicLinkLibrary open: self class dllPathName.    
        dlgTemplate := T4WinDlgTemplateAbstract
            standardOrExtendedFromModule: hModule
            integerID: self class templateID.
            
        templateExtent := dlgTemplate cx @ dlgTemplate cy.
    ].
        
    ^templateExtent
!
  
templateNameForUILanguage
"
    Category Name: Window Creation
    Description: Answers the name of the dialog's template for current UI language
	Result Type: String
"
	^self class templateNameForUILanguage!
  
toolTip
"
	Category Name: Tool Tips
	Result Type: ToolTip
"
	toolTip == nil ifTrue: [
		toolTip := T4ToolTip new buildWindow: self.
	].
	^toolTip.
!
   
toolTipOrNil
"
	Category Name: Tool Tips
	Description: Answer the ToolTip of the receiver, or nil if none.
	Result Type: ToolTip
"
	^toolTip
!
   
topicFor: anObject
"
    Access: Private
    Category Name: Topic Assistant
    Result Type: T4Topic_orNil
"
    | id |

    anObject isNil ifTrue: [^nil].
    ((anObject isKindOf: RmControl) or: [anObject isKindOf: T4DialogBox]) ifFalse: [^nil].
    id := (anObject isKindOf: T4DialogBox) ifTrue: [anObject class templateNameForUILanguage] ifFalse: [anObject name].
    
    (Notifier isControlKeyDown and: [T4SettingsManager isDebugging]) ifTrue: [
        ^self debugTopicMap at: id ifAbsent: [].
    ].
    
    self topicMap at: id ifPresent: [:topic | ^topic].

    ^self topicMap at: self class templateNameForUILanguage ifAbsent: [].!

topicMap
"
    Access: Private
    Category Name: Topic Assistant
    Result Type: Dictionary
"
    topicMap == nil ifTrue: [self loadTopicMap].
    ^topicMap.
!
   
totalLength
"
    Access: Private
    Category Name: Scroll Bars
"   
    ^self getVerticalScrollMax
!

totalWidth
"
    Access: Private
    Category Name: Scroll Bars
"   
    ^self getHorizontalScrollMax!
 
triggerNeedsContents
"
	Access: Private
	Category Name: Data:Events
"
	self triggerEvent: #needsContents.
!
   
triggerNeedsDefaultsTemplate
"
	Access: Private
	Category Name: Data:Events
	Result Type: Object
"
	^self
		triggerEvent: #needsDefaultsTemplate
		ifNotHandled: [nil].
!
  
unnamedControlAt: hWnd
"
	Access: Private
	Category Name: Controls
	Description: Redirects the DialogBox protocol to our implementation.
	Result Type: SubPane
"
	^self unnamedControlAt: hWnd ifAbsent: [
				self controlFromHandle: hWnd.
			].!

unnamedControlAt: hWnd ifAbsent: aBlock
"
	Access: Private
	Category Name: Controls
	Description: Answers the control instance identified
				 by hWnd.
	Result Type: SubPane
"
	^self unnamedControls
		at: hWnd asInteger
		ifAbsent: aBlock.
"
	(self unnamedControls includesKey: hWnd asInteger)
		ifTrue: [^self unnamedControls at: hWnd asInteger].

	^self controlFromHandle: hWnd.
"!
 
unnamedControls
"
	Access: Private
	Category Name: Controls
	Result Type: Dictionary
"
	unnamedControls isNil ifTrue: [
		unnamedControls := Dictionary new.
	].
	^unnamedControls.
!
 
updateHorizontalSlider
"
    Access: Private
    Category Name: Scroll Bars
    Result Type: Integer
"
    (UserLibrary
        setScrollPos: self asParameter
        bar: SbHorz
        position: scrollPosition x negated
        redraw: true ) = 0 ifTrue: [ self osNotification ]
!
   
updateHorizontalSliderTo: anInteger
"
    Access: Private
    Category Name: Scroll Bars
    Description: Set the slider box in the scrollbar to integer.
"
    | current |

    current := self getHorizontalScrollPosition.
    current = anInteger ifTrue: [ ^self ].
    UserLibrary
        setScrollPos: self asParameter
        bar: SbHorz
        position: anInteger
        redraw: true!
 
updateVerticalSlider
"
    Access: Private
    Category Name: Scroll Bars
    Result Type: Integer
"
    ( UserLibrary
          setScrollPos: self asParameter
          bar: SbVert
          position: scrollPosition y negated
          redraw: true ) = 0
                ifTrue: [ self osNotification ]
!
   
updateVerticalSliderTo: anInteger
"
    Access: Private
    Category Name: Scroll Bars
    Description: Set the slider box in the scrollbar to integer.
"
    | current |

    current := self getVerticalScrollPosition.
    current = anInteger ifTrue: [ ^self ].
    UserLibrary
        setScrollPos: self asParameter
        bar: SbVert
        position: anInteger
        redraw: true!
 
updateWizardButtons
"
	Access: Private
	Category Name: Property Sheet
"
	self wizard postWizardButtons: self getWizardButtons.
!
  
validate
"
	Access: Private
	Category Name: MDI:Compatibility
	Description: The host window for the receiver was just
				 created or recreated.
	Comment: Implemented to support Smalltalk open protocol.
"
	self performWhenValids.!
  
validateUserInput
"
	Access: Private
	Abstract: Yes
	Category Name: Input
	Description: Validates all data on the dialog.
				 Signals a UserInputError if problems
				 are found.
"
!

wizard
"
	Category Name: Property Sheet
	Result Type: Wizard
"
	^self owner.
!

wizardBackClicked
"
	Access: Private
	Abstract: Yes
	Category Name: Property Sheet
	Description: Invoked when the user presses Back on a wizard.
"

    !
   
wizardNextClicked
"
	Access: Private
	Abstract: Yes
	Category Name: Property Sheet
	Description: Invoked when the user presses Next on a wizard.
"

!
   
wizBackID
"
	Access: Private
	Category Name: Property Sheet
	Description: Answers the ID of the previous page in
				 the wizard (one of the following):

					-1		  - do not advance
					nil		   - advance to the next page in the sequence
					Integer	   - the item ID of the next page
	Result Type: Integer
"
	^self wizard wizBackIDFor: self.
!
   
wizNextID
"
	Access: Private
	Category Name: Property Sheet
	Description: Answers the ID of the next page in the
				 wizard (one of the following):

					-1		  - do not advance
					nil		- advance to the next page in the sequence
					Integer	   - the item ID of the next page
	Result Type: Integer
"
	^self wizard wizNextIDFor: self.
!
  
wmClose: wordInteger with: longInteger
"
	Access: Private
	Category Name: Window
	Description: Process the close window message.
"
	"If necessary, redirect any close message to our property sheet."
	self isPropertySheetPage ifTrue: [
		^self propertySheet wmClose: wordInteger with: longInteger
	] ifFalse: [
		^super wmClose: wordInteger with: longInteger
	].
!
  
wmCommand: wordInteger with: longInteger
"
	Category Name: Handler
	Description: Attempts to asynchronously process the
				 WM_COMMMAND notification notifyCode by posting an input event
				 to the receiver's queue.

				 wordInteger
					 The 'word' parameter of Microsoft Windows WM_COMMAND
					 message-sending protocol. In this case it contains the item
					 id of the control sending the message in the low word and the
					 notification code in the high word.

				 longInteger
					 The 'long' parameter of Microsoft Windows WM_COMMAND
					 message-sending protocol. In this case it contains the child
					 window handle.
	Result Type: Integer
"
	"Because events in the queue are processed asynchronously,
	 the values the instance variables 'wParam' and 'lParam' are not
	 reliable and should not be trusted.  They are set in this method
	 to avoid possible incompatibilities with DialogBox that might
	 arise if they were not set."
	wParam := wordInteger.
	lParam := longInteger.

	self
		processNotificationCode: wordInteger highWord
		id: wordInteger lowWord
		hWnd: longInteger.

	^0
!

wmHelp: wordInteger with: longInteger
"
	Access: Private
	Category Name: Help
	Description: Process the Smalltalk help message.
"
	| focusWindow |

	"Under Windows 95, help for dialog boxes is handled
	 via #wmWin4Help:with:."
	OperatingSystem isWindows95 ifTrue: [^nil].

	self helpManager isNil ifTrue: [^nil].
	focusWindow := longInteger \\ 65536.

	"JBE - I have modified the original Smalltalk method
	 to display the dialog's help topic rather than
	 looking for a control-level topic.	 This solves
	 the problem that when the Help button has the focus,
	 F1 displays the Help menu topic."
	wordInteger = MsgfMenu ifTrue:[
		^super wmHelp: wordInteger with: longInteger
	].
	wordInteger = MsgfDialogbox ifTrue:[
		self displayHelp
	].
!

wmHScroll: wordInteger with: longInteger
"
    Access: Private
    Category Name: Utility
    Result Type: T4Contact
"
    | type slider |
 
    (self parent isKindOf: T4PropertySheet) ifTrue: [^super wmHScroll: wordInteger with: longInteger].
    self hasScrollbars ifFalse: [^super wmHScroll: wordInteger with: longInteger].
       
    "if message is from a child window, call super to pass it on to the child window."
    longInteger = 0 ifFalse: [ ^super wmHScroll: wordInteger with: longInteger ].
    
    type := wordInteger lowWord.
    
    type switch
        case: SbLineup break: [self scrollHorizontal: self amountToScrollLeft];
        case: SbLinedown break: [self scrollHorizontal: self amountToScrollLeft negated];
        case: SbPageup break: [self scrollHorizontal: self width];
        case: SbPagedown break: [self scrollHorizontal: self width negated];
        case: 6 "Left" break: [self scrollPosition: 0 @ scrollPosition y];
        case: 7 "Right" break: [self scrollPosition: self totalWidth negated @ scrollPosition y];
        case: SbThumbposition break: [
            slider := ( ExternalLong new uLongAtOffset: 0 put: wordInteger ) shortAtOffset: 2.
            self updateHorizontalSliderTo: slider.
        ];
        case: SbThumbtrack break: [
            slider := ( ExternalLong new uLongAtOffset: 0 put: wordInteger ) shortAtOffset: 2.
            self scrollPosition: slider negated @ scrollPosition y
        ]; 
        default: [
            self updateHorizontalSlider 
        ].      
    ^nil!

wmInitdialog: wparam with: lparam
"
	Category Name: Window Creation
	Description: Process the init dialog message.
"
	self centerWindow.

	"Update the new dialog box. If there are any failures
	 (or self halts) while processing these messages,
	 Smalltalk fails to pop up a walkback window. I'm not
	 sure why this is, but moving the code causes our
	 dialogs to build AFTER mapping and jumbles the order
	 of some events (for example, WM_PAINT to
	 RmAboutDialog), so we have to preserve the run-time
	 behaviour."
	[	 
		"Added this boolean that gets set during dialog initialization, 
		 to prevent the #modified event in procesNotificationCode:id:hWnd:
		 from triggering and therefore dirtying the dialog.  Old style controls
		 such as edit boxes, or list boxes used the wmCommand: prototcol to 
		 notify the parent about changes.  New style controls like the list view
		 don't do this and therefore would never dirty the parent.  This is because
		 new style controls send wmNotify messages to themselves not to the parent.
		 
		 As long as dialogboxes do initialization work in the initializeWindow method
		 the dialog won't get dirtied.  NOTE: changing items in the #refresh method
		 will dirty the dialog.
		"
		initializing := true.
		[	self
				initializeWindow;
				refreshWithDefaults;
				yourself.
			self isReadOnly ifTrue: [self makeReadOnly].
			self showWindow.
			
		] ensure: [initializing := false].
	] on: Error do: [:ex |
		self sendInputEvent: #error: with: ex description.
	].

	self triggerEvent: #initDialog.

	"Answer true, so Windows will set the focus."
	^true.
!
   
wmNotify: wordInteger with: longInteger
"
	Access: Private
	Category Name: Window
	Description: Process notification messages from controls.
"
	| nmhdr selector result |

	nmhdr := WinNmhdr fromAddress: (ExternalAddress fromInteger: longInteger).

	"When a dialog is used on a property sheet, the
	 property sheet sends it notification messages.
	 Process these ones; pass the rest to super."
	selector := self class notifications
		at: nmhdr code
		ifAbsent: [nil].
	result := selector notNil
		ifTrue: [self perform: selector]
		ifFalse: [super wmNotify: wordInteger with: longInteger].

	"When processing notifications in a dialog box procedure, you must use
	 SetWindowLong() to set a return value. See the MSDN article on WM_NOTIFY."
	result isInteger ifTrue: [
		UserLibrary
			setWindowLong: self handle asParameter
			index: DwlMsgresult
			long: result.
	].
	^result.
!
 
wmSize: wordInteger with: longInteger
"
	Access: Private
	Category Name: Window
	Description: Overridden from window because when dialog boxes
				 are contained in a propertysheet this message gets sent to us.
				 The property sheet doesn't have an extent yet.
"
	^nil.

!

wmVScroll: wordInteger with: longInteger
"
    Access: Private
    Category Name: Scroll Bars
    Result Type: Object
"
    | type slider |
        
    (self parent isKindOf: T4PropertySheet) ifTrue: [^super wmHScroll: wordInteger with: longInteger].
    self hasScrollbars ifFalse: [^super wmHScroll: wordInteger with: longInteger].
        
     "if message is from a child window, call super to pass it on to the child window."
    longInteger = 0 ifFalse: [ ^super wmVScroll: wordInteger with: longInteger ].
     
    type := wordInteger lowWord.
     
    type switch
        case: SbLineup break: [self scrollVertical: self amountToScrollUp ];
        case: SbLinedown break: [self scrollVertical: self amountToScrollUp negated];
        case: SbPageup break: [self scrollVertical: self height];
        case: SbPagedown break: [ self scrollVertical: self height negated];
        case: 6 "Top" break: [self scrollPosition: scrollPosition x @ 0];
        case: 7 "Bottom" break: [self scrollPosition: scrollPosition x @ self totalLength negated];
        case: SbThumbposition break: [self updateVerticalSliderTo: wordInteger highWord];
        case: SbThumbtrack break: [
            slider := (ExternalLong new uLongAtOffset: 0 put: wordInteger ) shortAtOffset: 2.
            self scrollPosition: scrollPosition x @ slider negated
        ]; default: [
            self updateVerticalSlider
        ];
        default: [].
    ^nil.!
 
wmWin4Help: wparam with: lparam
"
	Access: Private
	Category Name: Help
	Description: Process the Window 4.0 help message.
				 Indicates that the user pressed the F1 key. If a
				 menu is active when F1 is pressed, WM_HELP is sent
				 to the window associated with the menu; otherwise,
				 WM_HELP is sent to the window that has the keyboard
				 focus. If no Window has the keyboard focus, WM_HELP
				 is sent to the currently active window.
"
	self displayHelp.
	^nil.

! !
